{"remainingRequest":"/app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/form-renderer/PharmacySummary.vue?vue&type=template&id=7b19f1e0&scoped=true&","dependencies":[{"path":"/app/src/components/form-renderer/PharmacySummary.vue","mtime":1683275992559},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}