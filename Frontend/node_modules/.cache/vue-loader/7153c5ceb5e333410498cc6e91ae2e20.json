{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/form-renderer/RadioButtons.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/form-renderer/RadioButtons.vue","mtime":1683275992559},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgZmluZCBmcm9tICdsb2Rhc2gvZmluZCc7CmltcG9ydCBnZXQgZnJvbSAnbG9kYXNoL2dldCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIG1ldGE6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCgogICAgdmFsdWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgIH0sCgogICAgaWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkQ2hvaWNlOiBnZXQoZmluZCh0aGlzLm1ldGEuY2hvaWNlcywgWydpc1NlbGVjdGVkJywgdHJ1ZV0pLCAndmFsdWUnLCAnJyksCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBsaXN0ZW5lcnMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgLi4udGhpcy4kbGlzdGVuZXJzLAogICAgICAgIGlucHV0OiBldmVudCA9PiB0aGlzLiRlbWl0KCdpbnB1dCcsIGV2ZW50LnRhcmdldC52YWx1ZSksCiAgICAgIH07CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIGdldENob2ljZUlkKHsgdmFsdWUgfSkgewogICAgICByZXR1cm4gYCR7dGhpcy5pZH0tJHt2YWx1ZS50b0xvd2VyQ2FzZSgpfWA7CiAgICB9LAogIH0sCn07Cgo="},{"version":3,"sources":["RadioButtons.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"RadioButtons.vue","sourceRoot":"src/components/form-renderer","sourcesContent":["<template>\n  <div class=\"radio-buttons -mx-12 flex flex-wrap\">\n    <div\n      v-for=\"choice in meta.choices\"\n      :key=\"getChoiceId(choice)\"\n      class=\"px-12\"\n    >\n      <label\n        :for=\"getChoiceId(choice)\"\n        class=\"flex items-center cursor-pointer\"\n      >\n        <input\n          :id=\"getChoiceId(choice)\"\n          v-model=\"selectedChoice\"\n          type=\"radio\"\n          :value=\"choice.value\"\n          v-bind=\"$attrs\"\n          v-on=\"listeners\"\n        >\n\n        <div\n          class=\"ml-4 text-2xl text-gray-800\"\n          v-html=\"$options.filters.formatContent(choice.text)\"\n        />\n      </label>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport find from 'lodash/find';\nimport get from 'lodash/get';\n\nexport default {\n  props: {\n    meta: {\n      type: Object,\n      required: true,\n    },\n\n    value: {\n      type: String,\n      default: '',\n    },\n\n    id: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      selectedChoice: get(find(this.meta.choices, ['isSelected', true]), 'value', ''),\n    };\n  },\n\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: event => this.$emit('input', event.target.value),\n      };\n    },\n  },\n\n  methods: {\n    getChoiceId({ value }) {\n      return `${this.id}-${value.toLowerCase()}`;\n    },\n  },\n};\n\n</script>\n"]}]}