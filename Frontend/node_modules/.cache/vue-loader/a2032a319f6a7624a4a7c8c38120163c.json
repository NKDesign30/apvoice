{"remainingRequest":"/app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/views/TrainingSuccessPage.vue?vue&type=template&id=70842dae&scoped=true&","dependencies":[{"path":"/app/src/views/TrainingSuccessPage.vue","mtime":1690462324910},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}