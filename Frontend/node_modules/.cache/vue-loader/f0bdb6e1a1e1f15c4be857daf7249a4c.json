{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/form-renderer/Captcha.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/form-renderer/Captcha.vue","mtime":1683275992558},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgVnVlUmVjYXB0Y2hhIGZyb20gJ3Z1ZS1yZWNhcHRjaGEnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgJ2Fwby1jYXB0Y2hhJzogVnVlUmVjYXB0Y2hhLAogIH0sCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAoKICAgIG1ldGE6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBtYXhMZW5ndGg6IDAsCiAgICAgICAgfTsKICAgICAgfSwKICAgIH0sCiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydjYXB0Y2hhV2Vic2l0ZUtleSddKSwKCiAgICBsaXN0ZW5lcnMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgLi4udGhpcy4kbGlzdGVuZXJzLAogICAgICAgIGlucHV0OiBldmVudCA9PiB0aGlzLiRlbWl0KCdpbnB1dCcsIGV2ZW50LnRhcmdldC52YWx1ZSksCiAgICAgIH07CiAgICB9LAogIH0sCn07Cgo="},{"version":3,"sources":["Captcha.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Captcha.vue","sourceRoot":"src/components/form-renderer","sourcesContent":["<template>\n  <apo-captcha\n    :sitekey=\"captchaWebsiteKey\"\n    :load-recaptcha-script=\"true\"\n  />\n</template>\n\n<script>\n\nimport VueRecaptcha from 'vue-recaptcha';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {\n    'apo-captcha': VueRecaptcha,\n  },\n  props: {\n    value: {\n      type: String,\n      default: '',\n    },\n\n    meta: {\n      type: Object,\n      default() {\n        return {\n          maxLength: 0,\n        };\n      },\n    },\n  },\n\n  computed: {\n    ...mapGetters(['captchaWebsiteKey']),\n\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: event => this.$emit('input', event.target.value),\n      };\n    },\n  },\n};\n\n</script>\n"]}]}