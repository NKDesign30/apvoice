{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/pharmacies/PharmacySummary.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/app/src/components/pharmacies/PharmacySummary.vue","mtime":1683275992562},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudmFsaWRhdGUtZXhwZXJ0X29ubHlfcGhhcm1hY2llc3sKICA+IGRpdnsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICB9CgogIC50ZXh0LWlucHV0LXdyYXBwZXJ7CiAgICBkaXNwbGF5OiBub25lOwogIH0KfQoK"},{"version":3,"sources":["PharmacySummary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8MA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PharmacySummary.vue","sourceRoot":"src/components/pharmacies","sourcesContent":["<template>\n  <div class=\"pharmacy-summary\">\n    <div class=\"mb-12\">\n      <apo-pharmacy-summary-pharmacy\n        v-for=\"(number, index) in associatedPharmacyUniqueNumbers\"\n        :key=\"number\"\n        class=\"relative\"\n        :number=\"number\"\n      >\n        <template\n          v-if=\"index > 0\"\n          #after\n        >\n          <button\n            class=\"mr-12 absolute top-0 right-0\"\n            type=\"button\"\n            :title=\"$t('general.remove')\"\n            @click=\"removeAssociatedPharmacyUniqueNumber(number)\"\n          >\n            <apo-icon\n              class=\"w-4\"\n              src=\"close\"\n            />\n          </button>\n        </template>\n      </apo-pharmacy-summary-pharmacy>\n\n      <div class=\"-mx-12 mt-12 flex justify-center text-positioning\">\n        <div class=\"px-12 w-1/2 flex flex-col\">\n          <span\n            class=\"inline-block font-bold text-gray-900\"\n            v-text=\"$t('modules.pharmacySummary.workingInAnotherPharmacy')\"\n          />\n          <span class=\"mt-2 inline-block\">\n            <button\n              class=\"underline text-gray-800\"\n              type=\"button\"\n              @click=\"isPharmacyInputVisible = true\"\n              v-text=\"$t('modules.pharmacySummary.buttons.addMore')\"\n            />\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <apo-collapsible-content\n      class=\"add-another-pharmacy\"\n      :show=\"isPharmacyInputVisible\"\n      @expanded=\"focusInputField\"\n    >\n      <div class=\"max-w-lg mx-auto py-24\">\n        <apo-input-label\n          for=\"add-another-pharmacy-unique-number\"\n          v-text=\"$t('general.pun')\"\n        />\n\n        <apo-text-input\n          id=\"add-another-pharmacy-unique-number\"\n          ref=\"addAnotherPharmacyUniqueNumber\"\n          v-model=\"lookupPharmacyUniqueNumber\"\n          class=\"mt-4 w-full\"\n          @input=\"isLookupPharmacyUniqueNumberValid = true\"\n          @keydown.enter=\"addPharmacyUniqueNumber\"\n        />\n\n        <small\n          v-if=\"!isLookupPharmacyUniqueNumberValid\"\n          class=\"mt-1 absolute pin-l pin-b text-red-500 text-xs font-bold\"\n          v-text=\"$t('modules.pharmacySummary.invalidPun')\"\n        />\n\n        <div class=\"mt-12 flex justify-center\">\n          <apo-button\n            class=\"button button--naked button--small shadow-hard text-gray-900\"\n            @click.native=\"onCancel\"\n            v-text=\"$t('general.cancel')\"\n          />\n\n          <apo-button\n            class=\"ml-6 button button--primary button--small shadow-hard-dark text-white\"\n            @click.native=\"addPharmacyUniqueNumber\"\n            v-text=\"$t('modules.pharmacySummary.buttons.lookup')\"\n          />\n        </div>\n      </div>\n    </apo-collapsible-content>\n  </div>\n</template>\n\n<script>\n\nimport flatten from 'lodash/flatten';\nimport { mapState } from 'vuex';\nimport PharmacyService from '@/services/api/PharmacyService';\nimport InputLabel from '@/components/form-renderer/InputLabel.vue';\nimport PharmacySummaryPharmacy from '@/components/form-renderer/PharmacySummaryPharmacy.vue';\nimport TextInput from '@/components/form-renderer/TextInput.vue';\n\nexport default {\n  components: {\n    'apo-input-label': InputLabel,\n    'apo-pharmacy-summary-pharmacy': PharmacySummaryPharmacy,\n    'apo-text-input': TextInput,\n  },\n\n  props: {\n    value: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data() {\n    return {\n      lookupPharmacyUniqueNumber: '',\n      isLookupPharmacyUniqueNumberValid: true,\n      isPharmacyInputVisible: false,\n      associatedPharmacyUniqueNumbers: [],\n    };\n  },\n\n  computed: {\n    ...mapState({\n      pharmacies: state => state.pharmacies.pharmacies,\n      user: state => state.auth.user,\n    }),\n\n    firstPharmacyUniqueNumber() {\n      return this.associatedPharmacyUniqueNumbers[0];\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler(value) {\n        this.associatedPharmacyUniqueNumbers = this.parsePharmacyUniqueNumbersValueString(value);\n      },\n    },\n  },\n\n  methods: {\n    focusInputField() {\n      try {\n        this.$refs.addAnotherPharmacyUniqueNumber.$el.querySelector('input').focus();\n      } catch (e) {\n        // left blank intentionally\n      }\n    },\n\n    getAllFields() {\n      return flatten(this.$parent.pages.map(page => page.fields));\n    },\n\n    addPharmacyUniqueNumber() {\n      this.isLookupPharmacyUniqueNumberValid = PharmacyService.fetchById(this.lookupPharmacyUniqueNumber);\n\n      if (this.lookupPharmacyUniqueNumber === this.pharmacyUniqueNumber) {\n        this.isLookupPharmacyUniqueNumberValid = false;\n      }\n\n      const isPharmacyUniqueNumberUnique = this.associatedPharmacyUniqueNumbers\n        .every(number => number !== this.lookupPharmacyUniqueNumber);\n\n      if (!isPharmacyUniqueNumberUnique) {\n        this.isLookupPharmacyUniqueNumberValid = false;\n      }\n\n      if (this.isLookupPharmacyUniqueNumberValid) {\n        const updatedPharmacyUniqueNumbers = this.associatedPharmacyUniqueNumbers\n          .concat([this.lookupPharmacyUniqueNumber]);\n\n        this.$emit('input', this.buildPharmacyUniqueNumbersValueString(updatedPharmacyUniqueNumbers));\n\n        this.lookupPharmacyUniqueNumber = '';\n        this.isPharmacyInputVisible = false;\n      }\n    },\n\n    removeAssociatedPharmacyUniqueNumber(pharmacyUniqueNumber) {\n      const updatedPharmacyUniqueNumbers = this.associatedPharmacyUniqueNumbers.filter(\n        number => number !== pharmacyUniqueNumber,\n      );\n\n      this.$emit('input', this.buildPharmacyUniqueNumbersValueString(updatedPharmacyUniqueNumbers));\n    },\n\n    buildPharmacyUniqueNumbersValueString(pharmacyUniqueNumbers) {\n      return pharmacyUniqueNumbers.join(',');\n    },\n\n    parsePharmacyUniqueNumbersValueString(pharmacyUniqueNumbersStrings) {\n      return pharmacyUniqueNumbersStrings.split(',').filter(val => val !== '');\n    },\n\n    onCancel() {\n      this.isPharmacyInputVisible = false;\n      this.isLookupPharmacyUniqueNumberValid = true;\n    },\n  },\n};\n\n</script>\n\n<style lang=\"scss\">\n\n.validate-expert_only_pharmacies{\n  > div{\n    display: flex;\n    justify-content: center;\n  }\n\n  .text-input-wrapper{\n    display: none;\n  }\n}\n\n</style>\n\n<style lang=\"scss\" scoped>\n\n\n.text-positioning {\n  > div {\n    flex-basis: 100%;\n  }\n\n  span {\n    text-align: center;\n  }\n}\n\n</style>\n"]}]}