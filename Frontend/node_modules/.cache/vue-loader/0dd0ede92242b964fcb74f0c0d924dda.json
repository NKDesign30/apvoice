{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/views/CmsContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/views/CmsContainer.vue","mtime":1683275992579},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBDbXNQYWdlIGZyb20gJ0AvY29tcG9uZW50cy9jbXMvQ21zUGFnZS52dWUnOwppbXBvcnQgTm90Rm91bmRQYWdlIGZyb20gJ0AvY29tcG9uZW50cy9jbXMvTm90Rm91bmRQYWdlLnZ1ZSc7CmltcG9ydCBMb2dpbkZvcm0gZnJvbSAnQC9jb21wb25lbnRzL2xvZ2luL0xvZ2luRm9ybS52dWUnOwppbXBvcnQgSW50ZXJuYXRpb25hbExpbmtzIGZyb20gJ0AvY29tcG9uZW50cy9mcm9udHBhZ2UvSW50ZXJuYXRpb25hbExpbmtzLnZ1ZSc7CmltcG9ydCBQYWdlU2VydmljZSBmcm9tICdAL3NlcnZpY2VzL2FwaS9QYWdlU2VydmljZSc7CmltcG9ydCB0aGVtZVNldHRpbmdzIGZyb20gJ0AvbWl4aW5zL3RoZW1lLXNldHRpbmdzJzsKaW1wb3J0IHsKICBQQUdFU19BRERfUEFHRSwKICBQQUdFU19TRVRfQ1VSUkVOVF9QQUdFLAp9IGZyb20gJ0Avc3RvcmUvdHlwZXMvYWN0aW9uLXR5cGVzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAnYXBvLWNtcy1wYWdlJzogQ21zUGFnZSwKICAgICdhcG8tbG9naW4tZm9ybSc6IExvZ2luRm9ybSwKICAgICdhcG8tbm90LWZvdW5kLXBhZ2UnOiBOb3RGb3VuZFBhZ2UsCiAgICAnYXBvLWludGVybmF0aW9uYWwtbGlua3MnOiBJbnRlcm5hdGlvbmFsTGlua3MsCiAgfSwKCiAgbWl4aW5zOiBbdGhlbWVTZXR0aW5ncygnZGVmYXVsdCcpXSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnQ6IHt9LAogICAgICB0aXRsZTogJycsCiAgICAgIGNhbm9uaWNhbFVybDogJy8nLAogICAgICBwYWdlTm90Rm91bmQ6IGZhbHNlLAogICAgICBpc1B1YmxpY1BhZ2U6IGZhbHNlLAogICAgICBpc0hvbWVQYWdlOiBmYWxzZSwKICAgIH07CiAgfSwKCiAgaGVhZCgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpdGxlOiB7CiAgICAgICAgaW5uZXI6IHRoaXMudGl0bGUsCiAgICAgIH0sCiAgICAgIGxpbms6IFt7IHJlbDogJ2Nhbm9uaWNhbCcsIGhyZWY6IHRoaXMuY2Fub25pY2FsVXJsLCBpZDogJ2Nhbm9uaWNhbCcgfV0sCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZSh7CiAgICAgIHBhZ2VzOiBzdGF0ZSA9PiBzdGF0ZS5wYWdlcy5wYWdlcywKICAgICAgY3VycmVudFBhZ2U6IHN0YXRlID0+IHN0YXRlLnBhZ2VzLmN1cnJlbnRQYWdlLAogICAgfSksCgogICAgLi4ubWFwR2V0dGVycyhbJ2lzQXV0aGVudGljYXRlZCcsICdsYW5ndWFnZSddKSwKICB9LAoKICB3YXRjaDogewogICAgJHJvdXRlOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlcihuZXdSb3V0ZSkgewogICAgICAgIHRoaXMubG9hZFBhZ2UobmV3Um91dGUpOwogICAgICB9LAogICAgfSwKCiAgICBjdXJyZW50UGFnZShuZXdQYWdlKSB7CiAgICAgIHRoaXMuaXNQdWJsaWNQYWdlID0gbmV3UGFnZS5pc1B1YmxpYzsKICAgICAgdGhpcy5jb250ZW50ID0gQXJyYXkuaXNBcnJheShuZXdQYWdlLmFjZikgPyB7fSA6IG5ld1BhZ2UuYWNmOwogICAgICB0aGlzLnRpdGxlID0gbmV3UGFnZS50aXRsZTsKICAgICAgdGhpcy5jYW5vbmljYWxVcmwgPSBgJHt3aW5kb3cubG9jYXRpb24ucHJvdG9jb2x9Ly8ke3dpbmRvdy5sb2NhdGlvbi5ob3N0fSR7d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lfWA7CgogICAgICB0aGlzLiRlbWl0KCd1cGRhdGVIZWFkJyk7CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIGxvYWRQYWdlKHJvdXRlKSB7CiAgICAgIHRoaXMucGFnZU5vdEZvdW5kID0gZmFsc2U7CiAgICAgIHRoaXMuaXNIb21lUGFnZSA9IGZhbHNlOwogICAgICBpZiAocm91dGUucGF0aCA9PT0gJy8nKSB7CiAgICAgICAgdGhpcy5pc0hvbWVQYWdlID0gdHJ1ZTsKICAgICAgICB0aGlzLmxvYWRIb21lUGFnZSgpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuaXNQYWdlS25vd24ocm91dGUpKSB7CiAgICAgICAgdGhpcy5sb2FkS25vd25QYWdlKHJvdXRlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmxvYWRVbmtub3duUGFnZShyb3V0ZSk7CiAgICAgIH0KICAgIH0sCgogICAgbG9hZEhvbWVQYWdlKCkgewogICAgICBpZiAodGhpcy5pc0F1dGhlbnRpY2F0ZWQpIHsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6ICd3ZWxjb21lJyB9KTsKICAgICAgfQogICAgfSwKCiAgICBsb2FkS25vd25QYWdlKHJvdXRlKSB7CiAgICAgIGNvbnN0IGtub3duUGFnZSA9IFBhZ2VTZXJ2aWNlLmZpbmRCeVBhdGgodGhpcy5wYWdlcywgcm91dGUucGF0aCk7CgogICAgICBpZiAoa25vd25QYWdlKSB7CiAgICAgICAgdGhpcy4kUHJvZ3Jlc3Muc3RhcnQoKTsKICAgICAgICB0aGlzLiRQcm9ncmVzcy5zZXQoMzApOwoKICAgICAgICBQYWdlU2VydmljZS5nZXRQYWdlKGtub3duUGFnZSkKICAgICAgICAgIC50aGVuKHBhZ2UgPT4gewogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChQQUdFU19TRVRfQ1VSUkVOVF9QQUdFLCBwYWdlKTsKICAgICAgICAgICAgdGhpcy4kUHJvZ3Jlc3MuZmluaXNoKCk7CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKCgpID0+IHsKICAgICAgICAgICAgdGhpcy5wYWdlTm90Rm91bmQgPSB0cnVlOwogICAgICAgICAgICB0aGlzLiRQcm9ncmVzcy5mYWlsKCk7CiAgICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBhZ2VOb3RGb3VuZCA9IHRydWU7CiAgICAgICAgdGhpcy4kUHJvZ3Jlc3MuZmFpbCgpOwogICAgICB9CiAgICB9LAoKICAgIGxvYWRVbmtub3duUGFnZShyb3V0ZSkgewogICAgICB0aGlzLiRQcm9ncmVzcy5zdGFydCgpOwogICAgICB0aGlzLiRQcm9ncmVzcy5zZXQoMzApOwogICAgICBQYWdlU2VydmljZS5nZXRQYWdlQnlTbHVnKHJvdXRlLnBhdGgpCiAgICAgICAgLnRoZW4ocGFnZSA9PiB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChQQUdFU19BRERfUEFHRSwgewogICAgICAgICAgICBpZDogcGFnZS5pZCwKICAgICAgICAgICAgcGF0aDogcGFnZS5wYXRoLAogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChQQUdFU19TRVRfQ1VSUkVOVF9QQUdFLCBwYWdlKTsKCiAgICAgICAgICB0aGlzLiRQcm9ncmVzcy5maW5pc2goKTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICB0aGlzLnBhZ2VOb3RGb3VuZCA9IHRydWU7CiAgICAgICAgICB0aGlzLiRQcm9ncmVzcy5mYWlsKCk7CiAgICAgICAgfSk7CiAgICB9LAoKICAgIGlzUGFnZUtub3duKHJvdXRlKSB7CiAgICAgIHJldHVybiB0aGlzLnBhZ2VzLnNvbWUocGFnZSA9PiBwYWdlLnBhdGggPT09IHJvdXRlLnBhdGgpOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["CmsContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CmsContainer.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"cms-container\">\n    <!-- <maintenance v-if=\"!isAuthenticated && isHomePage && (language === 'es')\" /> -->\n    <apo-login-form\n      v-if=\"!isAuthenticated && isHomePage & (language !== 'en') \"\n    />\n    <apo-international-links v-else-if=\"language === 'en'\" />\n    <template v-else>\n      <apo-not-found-page v-if=\"pageNotFound\" />\n      <apo-cms-page\n        v-else\n        :content=\"content\"\n      />\n    </template>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex';\nimport CmsPage from '@/components/cms/CmsPage.vue';\nimport NotFoundPage from '@/components/cms/NotFoundPage.vue';\nimport LoginForm from '@/components/login/LoginForm.vue';\nimport InternationalLinks from '@/components/frontpage/InternationalLinks.vue';\nimport PageService from '@/services/api/PageService';\nimport themeSettings from '@/mixins/theme-settings';\nimport {\n  PAGES_ADD_PAGE,\n  PAGES_SET_CURRENT_PAGE,\n} from '@/store/types/action-types';\n\nexport default {\n  components: {\n    'apo-cms-page': CmsPage,\n    'apo-login-form': LoginForm,\n    'apo-not-found-page': NotFoundPage,\n    'apo-international-links': InternationalLinks,\n  },\n\n  mixins: [themeSettings('default')],\n\n  data() {\n    return {\n      content: {},\n      title: '',\n      canonicalUrl: '/',\n      pageNotFound: false,\n      isPublicPage: false,\n      isHomePage: false,\n    };\n  },\n\n  head() {\n    return {\n      title: {\n        inner: this.title,\n      },\n      link: [{ rel: 'canonical', href: this.canonicalUrl, id: 'canonical' }],\n    };\n  },\n\n  computed: {\n    ...mapState({\n      pages: state => state.pages.pages,\n      currentPage: state => state.pages.currentPage,\n    }),\n\n    ...mapGetters(['isAuthenticated', 'language']),\n  },\n\n  watch: {\n    $route: {\n      immediate: true,\n      handler(newRoute) {\n        this.loadPage(newRoute);\n      },\n    },\n\n    currentPage(newPage) {\n      this.isPublicPage = newPage.isPublic;\n      this.content = Array.isArray(newPage.acf) ? {} : newPage.acf;\n      this.title = newPage.title;\n      this.canonicalUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n\n      this.$emit('updateHead');\n    },\n  },\n\n  methods: {\n    loadPage(route) {\n      this.pageNotFound = false;\n      this.isHomePage = false;\n      if (route.path === '/') {\n        this.isHomePage = true;\n        this.loadHomePage();\n      } else if (this.isPageKnown(route)) {\n        this.loadKnownPage(route);\n      } else {\n        this.loadUnknownPage(route);\n      }\n    },\n\n    loadHomePage() {\n      if (this.isAuthenticated) {\n        this.$router.push({ name: 'welcome' });\n      }\n    },\n\n    loadKnownPage(route) {\n      const knownPage = PageService.findByPath(this.pages, route.path);\n\n      if (knownPage) {\n        this.$Progress.start();\n        this.$Progress.set(30);\n\n        PageService.getPage(knownPage)\n          .then(page => {\n            this.$store.dispatch(PAGES_SET_CURRENT_PAGE, page);\n            this.$Progress.finish();\n          })\n          .catch(() => {\n            this.pageNotFound = true;\n            this.$Progress.fail();\n          });\n      } else {\n        this.pageNotFound = true;\n        this.$Progress.fail();\n      }\n    },\n\n    loadUnknownPage(route) {\n      this.$Progress.start();\n      this.$Progress.set(30);\n      PageService.getPageBySlug(route.path)\n        .then(page => {\n          this.$store.dispatch(PAGES_ADD_PAGE, {\n            id: page.id,\n            path: page.path,\n          });\n          this.$store.dispatch(PAGES_SET_CURRENT_PAGE, page);\n\n          this.$Progress.finish();\n        })\n        .catch(() => {\n          this.pageNotFound = true;\n          this.$Progress.fail();\n        });\n    },\n\n    isPageKnown(route) {\n      return this.pages.some(page => page.path === route.path);\n    },\n  },\n};\n</script>\n"]}]}