{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/views/Surveys.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/views/Surveys.vue","mtime":1690463943348},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKCmltcG9ydCBDbXNDb250ZW50UmVuZGVyZXIgZnJvbSAnQC9jb21wb25lbnRzL2Ntcy9DbXNDb250ZW50UmVuZGVyZXIudnVlJzsKaW1wb3J0IFN1cnZleSBmcm9tICdAL2NvbXBvbmVudHMvc3VydmV5L1N1cnZleS52dWUnOwppbXBvcnQgQXZhaWxhYmxlU3VydmV5cyBmcm9tICdAL2NvbXBvbmVudHMvc3VydmV5L292ZXJ2aWV3L0F2YWlsYWJsZVN1cnZleXMnOwppbXBvcnQgdGhlbWVTZXR0aW5ncyBmcm9tICdAL21peGlucy90aGVtZS1zZXR0aW5ncyc7CmltcG9ydCB7IGNhbm9uaWNhbFRhZyB9IGZyb20gJ0Avc2VydmljZXMvdXRpbHMnOwppbXBvcnQgeyBTVVJWRVlTX0ZFVENIX0FMTCB9IGZyb20gJ0Avc3RvcmUvdHlwZXMvYWN0aW9uLXR5cGVzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAnYXBvLWNtcy1jb250ZW50LXJlbmRlcmVyJzogQ21zQ29udGVudFJlbmRlcmVyLAogICAgJ2Fwby1zdXJ2ZXknOiBTdXJ2ZXksCiAgICAnYXZhaWxhYmxlLXN1cnZleXMnOiBBdmFpbGFibGVTdXJ2ZXlzLAogIH0sCgogIG1peGluczogW3RoZW1lU2V0dGluZ3MoJ3N1cnZleScpXSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzT3ZlcnZpZXc6IHRydWUsCiAgICAgIHNob3dBY2hUb29sdGlwOiBmYWxzZSwKICAgIH07CiAgfSwKCiAgaGVhZCgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpdGxlOiB7CiAgICAgICAgaW5uZXI6IHRoaXMuJHQoJ3BhZ2VzLnN1cnZleXMubWV0YS50aXRsZScpLAogICAgICB9LAogICAgICBsaW5rOiBbY2Fub25pY2FsVGFnKHRoaXMuJHJvdXRlKV0sCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsnc3VydmV5QnlJZCddKSwKICAgIC4uLm1hcEdldHRlcnMoWyd1c2VyJ10pLAoKICAgIHBhZ2VEYXRhKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucGFnZXMucGFnZUNvbnRlbnQuZmlsdGVyKAogICAgICAgIHBhZ2UgPT4gcGFnZS5zbHVnID09PSB0aGlzLiRyb3V0ZS5wYXRoLnJlcGxhY2UoL15cL3xcLyQvZywgJycpLAogICAgICApLmxlbmd0aCA+IDAKICAgICAgICA/IHRoaXMuJHN0b3JlLnN0YXRlLnBhZ2VzLnBhZ2VDb250ZW50LmZpbHRlcigKICAgICAgICAgIHBhZ2UgPT4gcGFnZS5zbHVnID09PSB0aGlzLiRyb3V0ZS5wYXRoLnJlcGxhY2UoL15cL3xcLyQvZywgJycpLAogICAgICAgIClbMF0KICAgICAgICA6IG51bGw7CiAgICB9LAogICAgY29udGVudCgpIHsKICAgICAgaWYgKHRoaXMucGFnZURhdGEpIHsKICAgICAgICBjb25zdCB7CiAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSAqLwogICAgICAgICAgcGFzc3dvcmQsCiAgICAgICAgICBtaW5pbXVtX2hlaWdodCwKICAgICAgICAgIHNsaWRlcywKICAgICAgICAgIHB1YmxpY19yZXNvdXJjZSwKICAgICAgICAgIGNvbnRlbnRfcG9zaXRpb24sCiAgICAgICAgICAuLi5maWx0ZXJlZAogICAgICAgIH0gPSB0aGlzLnBhZ2VEYXRhLmFjZjsKICAgICAgICAvKiBlc2xpbnQtZW5hYmxlICovCiAgICAgICAgcmV0dXJuIGZpbHRlcmVkOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCgogICAgY29udGVudFBvc2l0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5wYWdlRGF0YSA/IHRoaXMucGFnZURhdGEuYWNmLmNvbnRlbnRfcG9zaXRpb24gOiBudWxsOwogICAgfSwKCiAgICBzdXJ2ZXkoKSB7CiAgICAgIGlmICh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpIHsKICAgICAgICByZXR1cm4gdGhpcy5zdXJ2ZXlCeUlkKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICAgIH0KICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAoKICAgIHN1cnZleXNUaXRsZVRleHQoKSB7CiAgICAgIHJldHVybiB0aGlzLiR0KCdzdXJ2ZXlzLmF2YWlsYWJsZV90aXRsZScpOwogICAgfSwKICB9LAoKICB3YXRjaDogewogICAgJHJvdXRlOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlcihyb3V0ZSkgewogICAgICAgIGlmIChyb3V0ZS5wYXJhbXMuaWQpIHsKICAgICAgICAgIHRoaXMuaXNPdmVydmlldyA9IGZhbHNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmlzT3ZlcnZpZXcgPSB0cnVlOwogICAgICAgIH0KICAgICAgfSwKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBBY3Rpb25zKFtTVVJWRVlTX0ZFVENIX0FMTF0pLAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpIHsKICAgICAgdGhpc1tTVVJWRVlTX0ZFVENIX0FMTF0oKS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yIHJldHJpZXZpbmcgdGhlIHN1cnZleXMnLCBlcnJvcik7CiAgICAgIH0pOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["Surveys.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Surveys.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <apo-restrict-content-wrapper>\n    <div v-if=\"isOverview\">\n      <available-surveys\n        :show-header-section=\"true\"\n        :surveys-title-text=\"surveysTitleText\"\n      />\n    </div>\n    <template v-else>\n      <apo-survey\n        v-if=\"survey\"\n        :survey=\"survey\"\n      />\n    </template>\n  </apo-restrict-content-wrapper>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nimport CmsContentRenderer from '@/components/cms/CmsContentRenderer.vue';\nimport Survey from '@/components/survey/Survey.vue';\nimport AvailableSurveys from '@/components/survey/overview/AvailableSurveys';\nimport themeSettings from '@/mixins/theme-settings';\nimport { canonicalTag } from '@/services/utils';\nimport { SURVEYS_FETCH_ALL } from '@/store/types/action-types';\n\nexport default {\n  components: {\n    'apo-cms-content-renderer': CmsContentRenderer,\n    'apo-survey': Survey,\n    'available-surveys': AvailableSurveys,\n  },\n\n  mixins: [themeSettings('survey')],\n\n  data() {\n    return {\n      isOverview: true,\n      showAchTooltip: false,\n    };\n  },\n\n  head() {\n    return {\n      title: {\n        inner: this.$t('pages.surveys.meta.title'),\n      },\n      link: [canonicalTag(this.$route)],\n    };\n  },\n\n  computed: {\n    ...mapGetters(['surveyById']),\n    ...mapGetters(['user']),\n\n    pageData() {\n      return this.$store.state.pages.pageContent.filter(\n        page => page.slug === this.$route.path.replace(/^\\/|\\/$/g, ''),\n      ).length > 0\n        ? this.$store.state.pages.pageContent.filter(\n          page => page.slug === this.$route.path.replace(/^\\/|\\/$/g, ''),\n        )[0]\n        : null;\n    },\n    content() {\n      if (this.pageData) {\n        const {\n          /* eslint-disable */\n          password,\n          minimum_height,\n          slides,\n          public_resource,\n          content_position,\n          ...filtered\n        } = this.pageData.acf;\n        /* eslint-enable */\n        return filtered;\n      }\n\n      return null;\n    },\n\n    contentPosition() {\n      return this.pageData ? this.pageData.acf.content_position : null;\n    },\n\n    survey() {\n      if (this.$route.params.id) {\n        return this.surveyById(this.$route.params.id);\n      }\n      return null;\n    },\n\n    surveysTitleText() {\n      return this.$t('surveys.available_title');\n    },\n  },\n\n  watch: {\n    $route: {\n      immediate: true,\n      handler(route) {\n        if (route.params.id) {\n          this.isOverview = false;\n        } else {\n          this.isOverview = true;\n        }\n      },\n    },\n  },\n  methods: {\n    ...mapActions([SURVEYS_FETCH_ALL]),\n  },\n  created() {\n    if (this.$route.params.id) {\n      this[SURVEYS_FETCH_ALL]().catch(error => {\n        console.log('error retrieving the surveys', error);\n      });\n    }\n  },\n};\n</script>\n<style>\n</style>\n"]}]}