{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/V2/training/trainingSci.vue?vue&type=style&index=0&id=068bcf46&scoped=true&lang=css&","dependencies":[{"path":"/app/src/components/V2/training/trainingSci.vue","mtime":1683275992552},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZGlzYWJsZXsKICBwb2ludGVyLWV2ZW50czpub25lCn0KCkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkgewouaGVhcnRob3Zlcjpob3ZlcnsKIAl0cmFuc2Zvcm06IHNjYWxlKDEuMyk7Cn0KIAp9Cgo="},{"version":3,"sources":["trainingSci.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmdA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"trainingSci.vue","sourceRoot":"src/components/V2/training","sourcesContent":["<template>\n  <div class=\"flex flex-col\">\n    <div class=\"flex flex-col w-full mb-5 tablet:flex-row tablet:items-start\">\n      <div class=\"flex flex-col w-full px-2 py-3 tablet:w-1/4\">\n        <div class=\"flex justify-between h-40 overflow-hidden rounded-lg\">\n          <img\n            class=\"object-cover object-top w-2/3 h-full rounded-lg tablet:w-full\"\n            style=\"box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2)\"\n            :src=\"training.informations.image.url\"\n          />\n          <div class=\"block w-1/4 pl-5 tablet:hidden\">\n            <div\n              v-if=\"training.informations.apo_points\"\n              class=\"relative flex items-center justify-center\"\n            >\n              <span class=\"absolute text-3xl text-white top-10\">\n                {{ training.informations.apo_points }}\n              </span>\n              <img src=\"/assets/img/apo_points.svg\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <p\n        class=\"px-3 mt-5 ml-0 mr-auto text-sm text-right text-gray-700 tablet:hidden\"\n      >\n        {{ categoriesNames(training.categories) }}\n      </p>\n      <div class=\"w-full px-1 py-3 pl-3 tablet:w-2/4\">\n        <p class=\"mt-2\">\n          {{ training.title }}\n        </p>\n        <p class=\"text-sm\">\n          {{ training.informations.description }}\n        </p>\n      </div>\n      <div class=\"flex-col hidden w-1/4 py-3 pl-5 tablet:flex\">\n        <p class=\"text-sm text-right text-gray-700\">\n          {{ categoriesNames(training.categories) }}\n        </p>\n        <div\n          v-if=\"training.informations.apo_points\"\n          class=\"relative flex items-center justify-center mt-2 ml-auto\"\n        >\n          <span class=\"absolute text-3xl text-white top-10\">\n            {{ training.informations.apo_points }}\n          </span>\n          <img src=\"/assets/img/apo_points.svg\" alt=\"\" />\n        </div>\n      </div>\n    </div>\n    <router-link\n      v-if=\"nextLesson\"\n      :class=\"`hidden w-1/4 py-2 my-5 text-center text-white rounded-full tablet:block ${buttonClass}`\"\n      :to=\"{\n        name: `${this.$route.name}`,\n        params: {\n          series_id: training.id,\n          series_slug: training.slug,\n          id: training.trainings[0].id,\n          training_slug: training.trainings[0].slug,\n          lesson_id: nextLesson,\n        },\n      }\"\n    >\n      {{ $t(\"trainings.start\") }}\n    </router-link>\n    <div class=\"hidden tablet:flex justify-start\">\n      <button\n        v-if=\"complete()\"\n        :class=\"`max-w-3xl box-border w-1/2 desktop:w-1/4 py-2 my-5 text-white rounded-full ${buttonClass}`\"\n        @click=\"download(training.trainings[0])\"\n      >\n        {{ $t(\"trainings.download\") }}\n      </button>\n\n      <router-link\n        v-if=\"complete()\"\n        :to=\"{ name: 'training-summary', params: { slug: training.slug, id: training.id, theme: theme, origin: this.$route.name }}\"\n        :class=\"`max-w-3xl box-border ml-2 w-1/2 desktop:w-1/4 py-2 my-5 text-white rounded-full text-center ${buttonClass}`\"\n        v-text=\"$t('general.summary_sci')\"\n      />\n    </div>\n\n    <div class=\"flex flex-row justify-start w-full\">\n      <div class=\"flex flex-row w-full\">\n        <router-link\n          v-for=\"(lesson, index) in lessons\"\n          :key=\"lesson.id\"\n          :to=\"getTrainingsLink(lesson.lesson, index)\"\n          class=\"flex-row items-center justify-between hidden h-10 p-3 mr-3 rounded-lg tablet:flex w-72\"\n          :style=\"lessonLinkStyle(lesson)\"\n        >\n          <span\n            class=\"text-xs\"\n            :style=\"userHasCompletedLesson(lesson)\n                ? 'color: #ccc;'\n                : 'color: #fff'\n            \"\n            >{{ lesson.meta_infos.duration.time }}\n          </span>\n          <span\n            class=\"ml-1 text-sm\"\n            :style=\"userHasCompletedLesson(lesson)\n                ? 'color: #ccc;'\n                : 'color: #fff'\n            \"\n            >{{ lesson.meta_infos.duration.type }}\n          </span>\n          <span\n            class=\"w-1/2 h-5 mx-auto text-sm text-center\"\n            style=\"overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\"\n            :style=\"userHasCompletedLesson(lesson)\n                ? 'color: #ccc;'\n                : 'color: #fff'\n            \"\n          >\n            {{ lesson.meta_infos.title }}\n          </span>\n          <div\n            class=\"flex items-center justify-center w-5 h-5 bg-white rounded-full \"\n          >\n            <apo-icon\n              v-if=\"userHasCompletedLesson(lesson)\"\n              src=\"radio_checked\"\n              class=\"w-6 h-6 training-lesson__icon--unchecked\"\n              :class=\"checkBoxClass\"\n            />\n            <apo-icon\n              v-else\n              src=\"radio\"\n              class=\"w-6 h-6 training-lesson__icon--checked\"\n              :class=\"checkBoxClass\"\n            />\n          </div>\n        </router-link>\n\n        <div class=\"w-full tablet:hidden\">\n          <carousel\n            class=\"w-full mx-auto\"\n            :pagination-enabled=\"false\"\n            :per-page=\"lessons.length > 1 ? 1.5 : 1.5\"\n          >\n            <slide v-for=\"(lesson, index) in lessons\" :key=\"lesson.id\" class=\"px-2\">\n              <router-link\n                :to=\"getTrainingsLink(lesson.lesson, index)\"\n                class=\"flex flex-row items-center justify-between w-full h-10 p-3 my-5 mr-3 rounded-lg \"\n                :style=\"lessonLinkStyle(lesson)\"\n              >\n                <span\n                  class=\"text-xs\"\n                  :style=\"userHasCompletedLesson(lesson)?\n                      'color: #ccc;'\n                      : 'color: #fff'\n                  \"\n                  >{{ lesson.meta_infos.duration.time }}</span\n                >\n                <span\n                  class=\"ml-1 mr-auto text-sm\"\n                  :style=\"userHasCompletedLesson(lesson)? 'color: #ccc;'\n                      : 'color: #fff'\"\n                  >{{ lesson.meta_infos.duration.type }}</span\n                >\n                <div\n                  class=\"flex items-center justify-center w-5 h-5 bg-white rounded-full \"\n                >\n                  <apo-icon\n                    v-if=\"userHasCompletedLesson(lesson)\"\n                    src=\"radio_checked\"\n                    class=\"w-4 h-4 training-lesson__icon--unchecked\"\n                    :class=\"checkBoxClass\"\n                  />\n                  <apo-icon\n                    v-else\n                    src=\"radio\"\n                    class=\"w-4 h-4 training-lesson__icon--checked\"\n                    :class=\"checkBoxClass\"\n                  />\n                </div>\n              </router-link>\n            </slide>\n          </carousel>\n        </div>\n\n      </div>\n    </div>\n    <div class=\"flex flex-row justify-start w-full self-center desktop:p-5 p-0\" v-show=\"language != 'de'\"  >  \n        <img v-show=\"liketest\"\n          @click=\"handleClick\"\n          class=\"h-auto max-w-full cursor-pointer\thearthover\"\n          style=\"margin-top: 20px;\"\n          src=\"@/assets/img/heart_full.svg\"\n          :alt=\"$t('template.navigation.logo.alt')\">\n          \n           <img v-show=\"!liketest\"\n          @click=\"handleClick\"\n          class=\"h-auto max-w-full cursor-pointer hearthover\"\n          style=\"margin-top: 20px;\"\n          src=\"@/assets/img/heart_empty.svg\"\n          :alt=\"$t('template.navigation.logo.alt')\">\n          <span class=\" pl-3 pt-5\" style=\"text-align: center;\">{{this.countLike}}</span>\n    </div>\n\n      <span\n        class=\"ml-auto mr-0 text-sm text-right text-gray-700 cursor-pointer mandatory\"\n        style=\"color: #575757; text-decoration: underline; margin-top: 20px;\"\n        @click=\"showDutyText = !showDutyText\"\n        v-if=\"hasDutyText\"\n      >\n        {{ $t(\"trainings.dutyText\") }}\n      </span>\n    <apo-collapsible-content\n      class=\"mt-8\"\n      style=\"box-shadow: none\"\n      :show=\"showDutyText\"\n    >\n      <div\n        class=\"container p-6 mx-auto break-all\"\n        style=\"font-size: 14px!important;\"\n        v-html=\"training.dutyText\"\n        v-if=\"hasDutyText\"\n      />\n    </apo-collapsible-content>\n    <div class=\"flex tablet:hidden\">\n      <router-link\n        v-if=\"nextLesson\"\n        :class=\"`block w-2/3 py-2 mx-auto mt-5 text-center text-white rounded-full tablet:hidden ${buttonClass}`\"\n        :to=\"{\n          name: 'trainings',\n          params: {\n            series_id: training.id,\n            series_slug: training.slug,\n            id: training.trainings[0].id,\n            training_slug: training.trainings[0].slug,\n            lesson_id: nextLesson,\n          },\n        }\"\n      >\n        {{ $t(\"trainings.start\") }}\n      </router-link>\n      </div>\n      <div class=\"block tablet:hidden\">\n        <button\n          v-if=\"complete()\"\n          :class=\"`block w-2/3  py-2 mx-auto mt-5 text-center text-white rounded-full  ${buttonClass}`\"\n          @click=\"download(training.trainings[0])\"\n        >\n          {{ $t(\"trainings.download\") }}\n        </button>\n\n        <router-link\n          v-if=\"complete()\"\n          :to=\"{ name: 'training-summary', params: { slug: training.slug, id: training.id, theme: theme, origin: this.$route.name }}\"\n          :class=\"`block w-2/3  py-2 mx-auto mt-5 text-center text-white rounded-full  ${buttonClass}`\"\n          v-text=\"$t('general.summary_sci')\"\n        />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport get from \"lodash/get\";\nimport downloadCertificate from \"@/mixins/download-certificate\";\nimport TrainingMapper from '@/services/mapper/TrainingMapper';\nimport TrainingService from '@/services/api/TrainingService';\n\nexport default {\n  mixins: [downloadCertificate()],\n  props: {\n    training: {\n      type: Object,\n      required: true,\n    },\n    theme: {\n      type: String,\n      required: true\n    },\n  },\n  data() {\n    return {\n      showDutyText: false,\n      countLike:0,\n      liked:false\n    };\n  },\n  computed: {\n    ...mapGetters([\"trainingCategory\", \"user\"]),\n    ...mapGetters(['language']),\n    lessons() {\n      return get(this.training.trainings[0], \"lessons\", []);\n    },\n    nextLesson() {\n      const nextLesson = this.lessons.find(\n        (lesson) =>\n          !(\n            this.user.trainingResults[lesson.training_id] &&\n            this.user.trainingResults[lesson.training_id].completed_lessons[\n              lesson.lesson_id\n            ]\n          )\n      );\n      return get(nextLesson, \"lesson_id\", null);\n    },\n    liketest(){\n      return(this.liked);\n    },\n\n    hasDutyText() {\n      return (\n        this.training.dutyText &&\n        this.training.dutyText.length &&\n        this.training.dutyText.length > 0\n      );\n    },\n    buttonClass() {\n      if (this.theme === 'training') {\n        return 'bg-training-500'  // was '#069bff';\n      } else if(this.theme === 'scientific') {\n        return 'bg-scientific-500'\n      }\n    },\n    checkBoxClass() {\n      if (this.theme === 'training') {\n        return 'text-training-500';\n      } else if(this.theme === 'scientific') {\n        return 'text-scientific-500';\n      }\n    },\n  \n  },\n  methods: {\n     handleClick(event){\n      event.target.classList.toggle(\".disable\");\n     if(this.liked){\n      this.storeDisLike()\n     }else{\n      this.storeLike()\n     }\n     event.target.classList.toggle(\".disable\");\n    },\n    refresh(){\n     this.isliked();\n     this.countLikes();\n    },\n      storeLike() {\n        console.log(this.training.id)\n      const params = {\n        TRAINING_SERIES_ID: this.training.id,\n      };\n      TrainingService.storeLike(\n        params\n      ).then(response => {\n         \n        console.log(response);\n         this.isliked();\n     this.countLikes();\n        })\n        .catch(error => {\n          console.log('error storing training like result', error);\n        });\n    },\n    storeDisLike() {\n        console.log(this.training.id)\n      const params = {\n        TRAINING_SERIES_ID: this.training.id,\n      };\n      TrainingService.storeDisLike(\n        params\n      ).then(response => {\n          this.isliked();\n     this.countLikes();\n        \n        })\n        .catch(error => {\n          console.log('error storing training like result', error);\n        });\n    },\n     isliked(){\n      const params = {\n        TRAINING_SERIES_ID: this.training.id,\n      };\n      TrainingService.checkLike(\n        params\n      ).then(response => {\n        this.liked=response;\n        })\n        .catch(error => {\n          console.log('error storing training like result', error);\n        });\n    },\n    countLikes(){\n      const params = {\n        TRAINING_SERIES_ID: this.training.id,\n      };\n      TrainingService.countLikes(\n        params\n      ).then(response => {\n        if(response.length!=0){\n          this.countLike=response[0].count;\n        }else{\n          this.countLike=0;\n        }\n\n        })\n        .catch(error => {\n          console.log('error storing training like result', error);\n        });\n    },\n    getTrainingsLink(lesson = null, index) {\n      const url = `/${this.$route.name}/${this.training.slug}/${\n        this.training.trainings[0].slug\n      }/${\n        lesson\n          ? lesson.lesson_id\n          : this.training.trainings[0].lessons[index].lesson_id\n      }`;\n      return url;\n    },\n    lessonLinkStyle(lesson) {\n      if (this.theme === 'training') {\n        return this.userHasCompletedLesson(lesson)\n          ? 'background: #fff; box-shadow: 0px 0px 10px #ccc'\n          : 'background: linear-gradient(261deg, #adddef 0%, #0099ff 100%) 0% 0% no-repeat padding-box'\n      } else if(this.theme === 'scientific') {\n        return this.userHasCompletedLesson(lesson)\n          ? 'background: #fff; box-shadow: 0px 0px 10px #ccc'\n          : 'background: transparent linear-gradient(259deg, #9BD442 0%, #00B041 100%) 0% 0% no-repeat padding-box;'\n      }\n    },\n    userHasCompletedLesson(lesson) {\n      return this.user.trainingResults[lesson.training_id] &&\n        this.user.trainingResults[lesson.training_id]['completed_lessons'][lesson.lesson_id]\n    },\n    complete() {\n      return Boolean(\n        this.user.trainingResults[this.training.trainings[0].id] &&\n          this.user.trainingResults[this.training.trainings[0].id]\n            .is_complete === \"1\"\n      );\n    },\n    categoriesNames(categories) {\n      if (categories.length > 0) {\n        return categories\n          .map((id) => this.trainingCategory(id))\n          .filter(\n            (category) =>\n              category !== undefined &&\n              category.slug !== \"products\" &&\n              category.slug !== \"category\" &&\n              category.slug !== \"scientific\"\n          )\n          .map((category) => (category ? category.name : \"\"))\n          .join(\", \");\n      }\n      return null;\n    },\n  },\n  created(){\n     this.refresh();\n  }\n};\n</script>\n<style scoped>\n\n.disable{\n  pointer-events:none\n}\n\n@media (min-width: 767px) {\n.hearthover:hover{\n \ttransform: scale(1.3);\n}\n \n}\n\n</style>\n"]}]}