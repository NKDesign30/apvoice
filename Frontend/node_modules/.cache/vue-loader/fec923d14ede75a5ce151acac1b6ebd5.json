{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/ui/CountUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/ui/CountUp.vue","mtime":1683275992568},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgQ291bnRVcCBmcm9tICd2dWUtY291bnR1cC12Mic7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAndnVlLWNvdW50LXVwJzogQ291bnRVcCwKICB9LAoKICBwcm9wczogewogICAgZnJvbTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAsCiAgICB9LAoKICAgIHRvOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAoKICAgIHdoZW5JblZpZXdwb3J0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNJblZpZXdwb3J0OiAhdGhpcy53aGVuSW5WaWV3cG9ydCwKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydsYW5ndWFnZSddKSwKCiAgICBhdHRycygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAuLi50aGlzLiRhdHRycywKICAgICAgICBzdGFydFZhbDogdGhpcy5mcm9tLAogICAgICAgIGVuZFZhbDogdGhpcy50bywKICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICBzZXBhcmF0b3I6ICcnLAogICAgICAgICAgZGVjaW1hbDogdGhpcy5kZWNpbWFsU2VwYXJhdG9yLAogICAgICAgICAgZGVjaW1hbFBsYWNlczogdGhpcy5kZWNpbWFsUGxhY2VzLAogICAgICAgIH0sCiAgICAgIH07CiAgICB9LAoKICAgIHRob3VzYW5kU2VwYXJhdG9yKCkgewogICAgICByZXR1cm4gSW50bC5OdW1iZXJGb3JtYXQodGhpcy5nZXRMb2NhbGVJZGVudGlmaWVyKCkpCiAgICAgICAgLmZvcm1hdFRvUGFydHMoMTAwMCkKICAgICAgICAuZmluZCgoeyB0eXBlIH0pID0+IHR5cGUgPT09ICdncm91cCcpCiAgICAgICAgLnZhbHVlOwogICAgfSwKCiAgICBkZWNpbWFsU2VwYXJhdG9yKCkgewogICAgICByZXR1cm4gSW50bC5OdW1iZXJGb3JtYXQodGhpcy5nZXRMb2NhbGVJZGVudGlmaWVyKCkpCiAgICAgICAgLmZvcm1hdFRvUGFydHMoMS4xKQogICAgICAgIC5maW5kKCh7IHR5cGUgfSkgPT4gdHlwZSA9PT0gJ2RlY2ltYWwnKQogICAgICAgIC52YWx1ZTsKICAgIH0sCgogICAgZGVjaW1hbFBsYWNlcygpIHsKICAgICAgaWYgKHRoaXMuaGFzRGVjaW1hbFBsYWNlcygpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudG8udG9TdHJpbmcoKS5zcGxpdCgnLicpWzFdLmxlbmd0aDsKICAgICAgfQogICAgICByZXR1cm4gMDsKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgZ2V0TG9jYWxlSWRlbnRpZmllcigpIHsKICAgICAgaWYgKHRoaXMubGFuZ3VhZ2UgPT09ICdlbicpIHsKICAgICAgICByZXR1cm4gJ2VuLVVTJzsKICAgICAgfQoKICAgICAgcmV0dXJuIGAke3RoaXMubGFuZ3VhZ2V9LSR7dGhpcy5sYW5ndWFnZS50b0xvd2VyQ2FzZSgpfWA7CiAgICB9LAoKICAgIG9ic2VydmVXaGVuSW5WaWV3cG9ydCgpIHsKICAgICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoKFtlbnRyeV0pID0+IHsKICAgICAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHsKICAgICAgICAgIHRoaXMuaXNJblZpZXdwb3J0ID0gdHJ1ZTsKCiAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIG9ic2VydmVyLm9ic2VydmUodGhpcy4kZWwpOwoKICAgICAgdGhpcy4kb25jZSgnaG9vazpkZXN0cm95ZWQnLCAoKSA9PiB7CiAgICAgICAgaWYgKG9ic2VydmVyICYmIG9ic2VydmVyLmRpc2Nvbm5lY3QpIHsKICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICBoYXNEZWNpbWFsUGxhY2VzKCkgewogICAgICByZXR1cm4gdGhpcy50byAlIDEgIT09IDAgJiYgIU51bWJlci5pc05hTih0aGlzLnRvKTsKICAgIH0sCiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLndoZW5JblZpZXdwb3J0KSB7CiAgICAgIHRoaXMub2JzZXJ2ZVdoZW5JblZpZXdwb3J0KCk7CiAgICB9CiAgfSwKfTsKCg=="},{"version":3,"sources":["CountUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"CountUp.vue","sourceRoot":"src/components/ui","sourcesContent":["<template>\n  <vue-count-up\n    v-if=\"isInViewport\"\n    v-bind=\"attrs\"\n    v-on=\"$listeners\"\n  />\n  <span\n    v-else\n    v-text=\"from\"\n  />\n</template>\n\n<script>\n\nimport CountUp from 'vue-countup-v2';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {\n    'vue-count-up': CountUp,\n  },\n\n  props: {\n    from: {\n      type: Number,\n      default: 0,\n    },\n\n    to: {\n      type: Number,\n      required: true,\n    },\n\n    whenInViewport: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    return {\n      isInViewport: !this.whenInViewport,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['language']),\n\n    attrs() {\n      return {\n        ...this.$attrs,\n        startVal: this.from,\n        endVal: this.to,\n        options: {\n          separator: '',\n          decimal: this.decimalSeparator,\n          decimalPlaces: this.decimalPlaces,\n        },\n      };\n    },\n\n    thousandSeparator() {\n      return Intl.NumberFormat(this.getLocaleIdentifier())\n        .formatToParts(1000)\n        .find(({ type }) => type === 'group')\n        .value;\n    },\n\n    decimalSeparator() {\n      return Intl.NumberFormat(this.getLocaleIdentifier())\n        .formatToParts(1.1)\n        .find(({ type }) => type === 'decimal')\n        .value;\n    },\n\n    decimalPlaces() {\n      if (this.hasDecimalPlaces()) {\n        return this.to.toString().split('.')[1].length;\n      }\n      return 0;\n    },\n  },\n\n  methods: {\n    getLocaleIdentifier() {\n      if (this.language === 'en') {\n        return 'en-US';\n      }\n\n      return `${this.language}-${this.language.toLowerCase()}`;\n    },\n\n    observeWhenInViewport() {\n      const observer = new IntersectionObserver(([entry]) => {\n        if (entry.isIntersecting) {\n          this.isInViewport = true;\n\n          observer.disconnect();\n        }\n      });\n\n      observer.observe(this.$el);\n\n      this.$once('hook:destroyed', () => {\n        if (observer && observer.disconnect) {\n          observer.disconnect();\n        }\n      });\n    },\n\n    hasDecimalPlaces() {\n      return this.to % 1 !== 0 && !Number.isNaN(this.to);\n    },\n  },\n\n  mounted() {\n    if (this.whenInViewport) {\n      this.observeWhenInViewport();\n    }\n  },\n};\n\n</script>\n"]}]}