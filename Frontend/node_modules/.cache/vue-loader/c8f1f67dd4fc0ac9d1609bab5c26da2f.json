{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/detailers-job/InformationalTrainingTeaser.vue?vue&type=style&index=0&id=df39ae52&lang=scss&scoped=true&","dependencies":[{"path":"/app/src/components/detailers-job/InformationalTrainingTeaser.vue","mtime":1683275992558},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFjdGlvbi1idXR0b24gewogIEBhcHBseSBzaGFkb3ctaGFyZC1kYXJrOwogIEBhcHBseSB0ZXh0LWJsdWUtNjAwOwogIEBhcHBseSBiZy13aGl0ZSAjeyFpbXBvcnRhbnR9OwogIEBhcHBseSBweS0yICN7IWltcG9ydGFudH07CiAgQGFwcGx5IHB4LTEyICN7IWltcG9ydGFudH07CgogICY6aG92ZXIgewogICAgQGFwcGx5IGJnLWdyYXktMTAwICN7IWltcG9ydGFudH07CiAgfQp9Cgo="},{"version":3,"sources":["InformationalTrainingTeaser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"InformationalTrainingTeaser.vue","sourceRoot":"src/components/detailers-job","sourcesContent":["<template>\n  <div class=\"informational-training-teaser p-4 flex flex-wrap bg-gray-300\">\n    <div class=\"flex flex-1\">\n      <div class=\"flex items-center\">\n        <apo-icon\n          class=\"w-12 text-blue-700\"\n          src=\"training\"\n        />\n      </div>\n      <div\n        class=\"mx-12 flex items-center flex-1 headline-4\"\n        v-html=\"$options.filters.formatContent(informationalTraining.title)\"\n      />\n    </div>\n    <div class=\"mt-6 tablet:mt-0 w-full tablet:w-48 flex flex-col justify-center items-center tablet:items-end\">\n      <apo-button\n        class=\"action-button button button--tiny\"\n        @click.native=\"start\"\n        v-text=\"buttonText\"\n      />\n      <template v-if=\"hasSavedState\">\n        <small\n          v-if=\"isFinished\"\n          class=\"mt-2 italic\"\n          v-text=\"$t('detailersJob.isFinished')\"\n        />\n        <small\n          v-else\n          class=\"mt-2 italic\"\n          v-text=\"$t('detailersJob.lastSavedStep', { step: savedStateStep, totalSteps })\"\n        />\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { mapState } from 'vuex';\n\nexport default {\n  props: {\n    informationalTraining: {\n      type: Object,\n      default: () => {},\n    },\n\n    pharmacy: {\n      type: Object,\n      default: () => {},\n    },\n  },\n\n  computed: {\n    ...mapState({\n      savedStates: state => state.detailersJob.savedStates,\n    }),\n\n    savedState() {\n      return this.savedStates.find(state => state.informationalTrainingId === this.informationalTraining.id && state.pharmacyId === this.pharmacy.id);\n    },\n\n    hasSavedState() {\n      return this.savedState !== undefined;\n    },\n\n    savedStateStep() {\n      if (!this.hasSavedState) {\n        return null;\n      }\n\n      const questionIndex = this.informationalTraining.questions.findIndex(question => question.id === this.savedState.lastQuestionId);\n\n      return questionIndex + 1;\n    },\n\n    totalSteps() {\n      return this.informationalTraining.questions.length;\n    },\n\n    isOneStepLeft() {\n      if (!this.hasSavedState) {\n        return false;\n      }\n\n      return this.savedStateStep === this.totalSteps - 1;\n    },\n\n    isFinished() {\n      if (!this.hasSavedState) {\n        return false;\n      }\n\n      return this.savedStateStep === this.totalSteps;\n    },\n\n    buttonText() {\n      if (this.isFinished) {\n        return this.$t('detailersJob.buttons.lookup');\n      }\n\n      if (this.isOneStepLeft) {\n        return this.$t('detailersJob.buttons.finish');\n      }\n\n      return this.$t('detailersJob.buttons.start');\n    },\n  },\n\n  methods: {\n    start() {\n      let trainingUrl = `/detailers-job/training/${this.informationalTraining.id}/${this.pharmacy.id}`;\n\n      if (this.hasSavedState && !this.isFinished) {\n        trainingUrl += `/${this.savedState.lastQuestionId}`;\n      }\n\n      this.$router.push(trainingUrl);\n    },\n  },\n};\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.action-button {\n  @apply shadow-hard-dark;\n  @apply text-blue-600;\n  @apply bg-white #{!important};\n  @apply py-2 #{!important};\n  @apply px-12 #{!important};\n\n  &:hover {\n    @apply bg-gray-100 #{!important};\n  }\n}\n\n</style>\n"]}]}