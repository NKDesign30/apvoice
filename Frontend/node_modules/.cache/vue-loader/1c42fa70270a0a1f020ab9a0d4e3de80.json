{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/form-renderer/PharmacySummary.vue?vue&type=style&index=0&id=7b19f1e0&lang=scss&scoped=true&","dependencies":[{"path":"/app/src/components/form-renderer/PharmacySummary.vue","mtime":1683275992559},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2xvc2UgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDA7CiAgcmlnaHQ6IDA7CgogIEBtZWRpYSAobWluLXdpZHRoOiB0aGVtZSgnc2NyZWVucy50YWJsZXQnKSkgewogICAgdG9wOiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7CiAgfQp9Cg=="},{"version":3,"sources":["PharmacySummary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAicA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"PharmacySummary.vue","sourceRoot":"src/components/form-renderer","sourcesContent":["<template>\n  <div class=\"mb-24 pharmacy-summary\">\n    <div class=\"mb-12\">\n      <div\n        v-if=\"expertCode && salesRepName !== undefined\"\n        class=\"flex flex-col justify-start mb-8 tablet:justify-center tablet:flex-row tablet:text-center\"\n      >\n        <div class=\"flex flex-col w-full mb-12 tablet:px-4 tablet:w-1/2 tablet:mb-0\">\n          <span\n            class=\"inline-block font-bold text-gray-900\"\n            v-html=\"$t('general.expertCode')\"\n          />\n          <span class=\"inline-block mt-2 text-gray-800\">\n            {{ expertCode | formattedNumber }}\n          </span>\n        </div>\n        <div\n          v-if=\"salesRepName !== ' '\"\n          class=\"flex flex-col w-full tablet:px-4 tablet:w-1/2\"\n        >\n          <span\n            class=\"inline-block font-bold text-gray-900\"\n            v-text=\"$t('modules.pharmacySummary.associatedSalesRep')\"\n          />\n          <span\n            class=\"inline-block mt-2 text-gray-800\"\n            v-html=\"$options.filters.formatContent(salesRepName)\"\n          />\n        </div>\n      </div>\n\n      <div v-if=\"isExpertOnly\">\n        <div v-if=\"expertOnlyPharmacies.length === 0\">\n          <apo-pharmacies-fuzzy-search @selected=\"addPharmacy\">\n            <div class=\"flex flex-col mt-2 tablet:flex-row\">\n              <span class=\"text-gray-900 tablet:mr-2\">{{ $t('general.lookingForPharmacy') }} </span>\n              <router-link\n                :to=\"{name: 'contact'}\"\n                class=\"text-gray-800 underline\"\n              >\n                {{ $t('general.getInTouch') }}\n              </router-link>\n            </div>\n            <div\n              class=\"w-full mt-4\"\n              v-html=\"$t('general.fuzzySearch.hint')\"\n            />\n          </apo-pharmacies-fuzzy-search>\n        </div>\n        <div v-else>\n          <apo-pharmacy-summary-expert-only-pharmacy\n            v-for=\"(pharmacy, index) in expertOnlyPharmacies\"\n            :key=\"'pharmacy' + index\"\n            class=\"relative\"\n            :data=\"pharmacy\"\n          >\n            <template #after>\n              <button\n                class=\"p-2 close\"\n                type=\"button\"\n                :title=\"$t('general.remove')\"\n                @click=\"removePharmacy(index)\"\n              >\n                <apo-icon\n                  class=\"w-4 tablet:w-6\"\n                  src=\"close\"\n                />\n              </button>\n            </template>\n          </apo-pharmacy-summary-expert-only-pharmacy>\n        </div>\n      </div>\n      <div v-else>\n        <apo-pharmacy-summary-pharmacy\n          :number=\"pharmacyUniqueNumber\"\n          :uid=\"0\"\n        />\n\n        <apo-pharmacy-summary-pharmacy\n          v-for=\"(number, index) in associatedPharmacyUniqueNumbers\"\n          :key=\"number\"\n          class=\"relative\"\n          :number=\"number\"\n          :uid=\"index + 1\"\n        >\n          <template #after>\n            <button\n              class=\"p-2 close\"\n              type=\"button\"\n              :title=\"$t('general.remove')\"\n              @click=\"removeAssociatedPharmacyUniqueNumber(number)\"\n            >\n              <apo-icon\n                class=\"w-4 tablet:w-6\"\n                src=\"close\"\n              />\n            </button>\n          </template>\n        </apo-pharmacy-summary-pharmacy>\n      </div>\n\n      <div v-if=\"!isExpertOnly\">\n        <div class=\"flex mt-12 tablet:justify-start\">\n          <div class=\"flex flex-col w-full tablet:px-4 tablet:w-1/2\">\n            <span\n              class=\"inline-block font-bold text-gray-900\"\n              v-text=\"$t('modules.pharmacySummary.workingInAnotherPharmacy')\"\n            />\n            <span class=\"inline-block mt-2\">\n              <button\n                class=\"text-gray-800 underline\"\n                type=\"button\"\n                @click=\"isPharmacyInputVisible = true\"\n                v-text=\"$t('modules.pharmacySummary.buttons.addMore')\"\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"isExpertOnly && expertOnlyPharmacies.length > 0\">\n      <!-- <div class=\"flex mt-12 tablet:justify-start\">\n        <div class=\"flex flex-col w-full tablet:px-4 tablet:w-1/2\">\n          <span\n            class=\"inline-block font-bold text-gray-900\"\n            v-text=\"$t('modules.pharmacySummary.workingInAnotherPharmacy')\"\n          />\n          <router-link\n            :to=\"{name: 'contact'}\"\n            class=\"inline-block mt-2 text-gray-800 underline\"\n          >\n            Kontaktiere uns\n          </router-link>\n        </div>\n      </div> -->\n    </div>\n\n    <apo-collapsible-content\n      v-else\n      class=\"add-another-pharmacy\"\n      :show=\"isPharmacyInputVisible\"\n      @expanded=\"focusInputField\"\n    >\n      <div\n        v-if=\"!isExpertOnly\"\n        class=\"max-w-lg py-24 mx-auto\"\n      >\n        <apo-input-label\n          for=\"add-another-pharmacy-unique-number\"\n          v-text=\"$t('general.pun')\"\n        />\n\n        <apo-text-input\n          id=\"add-another-pharmacy-unique-number\"\n          ref=\"addAnotherPharmacyUniqueNumber\"\n          v-model=\"lookupPharmacyUniqueNumber\"\n          class=\"w-full mt-4\"\n          @input=\"isLookupPharmacyUniqueNumberValid = true\"\n          @keydown.enter=\"addPharmacyUniqueNumber\"\n        />\n\n        <small\n          v-if=\"!isLookupPharmacyUniqueNumberValid\"\n          class=\"absolute mt-1 text-xs font-bold text-red-500 pin-l pin-b\"\n          v-text=\"$t('modules.pharmacySummary.invalidPun')\"\n        />\n\n        <div class=\"flex justify-center mt-12\">\n          <apo-button\n            class=\"text-gray-900 button button--naked button--small shadow-hard\"\n            @click.native=\"onCancel\"\n            v-text=\"$t('general.cancel')\"\n          />\n\n          <apo-button\n            class=\"ml-6 text-white button button--primary button--small shadow-hard-dark\"\n            @click.native=\"addPharmacyUniqueNumber\"\n            v-text=\"$t('modules.pharmacySummary.buttons.lookup')\"\n          />\n        </div>\n      </div>\n    </apo-collapsible-content>\n  </div>\n</template>\n\n<script>\n\nimport find from 'lodash/find';\nimport flatten from 'lodash/flatten';\nimport get from 'lodash/get';\nimport { mapGetters } from 'vuex';\nimport InputLabel from '@/components/form-renderer/InputLabel.vue';\nimport PharmacySummaryPharmacy from '@/components/form-renderer/PharmacySummaryPharmacy.vue';\nimport PharmacySummaryExpertOnlyPharmacy from '@/components/form-renderer/PharmacySummaryExpertOnlyPharmacy.vue';\nimport TextInput from '@/components/form-renderer/TextInput.vue';\nimport PharmacyService from '../../services/api/PharmacyService';\nimport PharmaciesFuzzySearch from '@/components/form-renderer/PharmaciesFuzzySearch.vue';\nimport LanguageService from '@/services/settings/LanguageService';\n\nexport default {\n  components: {\n    'apo-input-label': InputLabel,\n    'apo-pharmacy-summary-pharmacy': PharmacySummaryPharmacy,\n    'apo-pharmacy-summary-expert-only-pharmacy': PharmacySummaryExpertOnlyPharmacy,\n    'apo-text-input': TextInput,\n    'apo-pharmacies-fuzzy-search': PharmaciesFuzzySearch,\n  },\n\n  props: {\n    value: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data() {\n    return {\n      expertCode: '',\n      pharmacyUniqueNumber: '',\n      lookupPharmacyUniqueNumber: '',\n      isLookupPharmacyUniqueNumberValid: true,\n      isPharmacyInputVisible: false,\n      associatedPharmacyUniqueNumbers: [],\n      isExpertOnly: false,\n      expertOnlyPharmacies: [],\n      pharmacyForm: [\n        {\n          type: 'textInput',\n          id: 'pharmacy-name',\n          ref: 'pharmacyName',\n          model: '',\n        },\n        {\n          type: 'selectInput',\n          id: 'pharmacy-country',\n          ref: 'pharmacyCountry',\n          model: 'germany',\n          options: [\n            {\n              value: 'germany',\n              text: this.$t('modules.pharmacySummary.form.germany'),\n            },\n            {\n              value: 'denmark',\n              text: this.$t('modules.pharmacySummary.form.denmark'),\n            },\n            {\n              value: 'poland',\n              text: this.$t('modules.pharmacySummary.form.poland'),\n            },\n            {\n              value: 'czechRepublic',\n              text: this.$t('modules.pharmacySummary.form.czechRepublic'),\n            },\n            {\n              value: 'austria',\n              text: this.$t('modules.pharmacySummary.form.austria'),\n            },\n            {\n              value: 'switzerland',\n              text: this.$t('modules.pharmacySummary.form.switzerland'),\n            },\n            {\n              value: 'france',\n              text: this.$t('modules.pharmacySummary.form.france'),\n            },\n            {\n              value: 'luxembourg',\n              text: this.$t('modules.pharmacySummary.form.luxembourg'),\n            },\n            {\n              value: 'belgium',\n              text: this.$t('modules.pharmacySummary.form.belgium'),\n            },\n            {\n              value: 'netherlands',\n              text: this.$t('modules.pharmacySummary.form.netherlands'),\n            },\n          ],\n        },\n        {\n          type: 'textInput',\n          id: 'pharmacy-street',\n          ref: 'pharmacyStreet',\n          model: '',\n        },\n        {\n          type: 'textInput',\n          id: 'pharmacy-street-no',\n          ref: 'pharmacyStreetNo',\n          model: '',\n        },\n        {\n          type: 'textInput',\n          id: 'pharmacy-zip-code',\n          ref: 'pharmacyZipCode',\n          model: '',\n        },\n        {\n          type: 'textInput',\n          id: 'pharmacy-city',\n          ref: 'pharmacyCity',\n          model: '',\n        },\n      ],\n    };\n  },\n\n  computed: {\n    ...mapGetters(['salesRepName']),\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler(value) {\n        this.associatedPharmacyUniqueNumbers = this.parsePharmacyUniqueNumbersValueString(value);\n      },\n    },\n  },\n\n  methods: {\n    focusInputField() {\n      try {\n        this.$refs.addAnotherPharmacyUniqueNumber.$el.querySelector('input').focus();\n      } catch (e) {\n        // left blank intentionally\n      }\n    },\n\n    getAllFields() {\n      return flatten(this.$parent.pages.map(page => page.fields));\n    },\n\n    findEnteredExpertCode() {\n      const uniquePharmacyNumberField = find(\n        this.getAllFields(),\n        field => field.cssClass.match(/validate-expert-code/),\n      );\n\n      return get(uniquePharmacyNumberField, 'inputs.0.value', '');\n    },\n\n    findEnteredPharmacyUniqueNumber() {\n      const uniquePharmacyNumberField = find(\n        this.getAllFields(),\n        field => field.cssClass.match(/validate-pharmacy-unique-number/),\n      );\n\n      return get(uniquePharmacyNumberField, 'inputs.0.value', '');\n    },\n\n    findEnteredPgCustomerId() {\n      const uniqueCustomerIdField = find(\n        this.getAllFields(),\n        field => field.cssClass.match(/validate-pg_customer_id/),\n      );\n\n      return get(uniqueCustomerIdField, 'inputs.0.value', '');\n    },\n\n    findExpertOnlyPharmacies() {\n      const uniqueCustomerIdField = find(\n        this.getAllFields(),\n        field => field.cssClass.match(/validate-expert_only_pharmacies/),\n      );\n\n      return uniqueCustomerIdField;\n    },\n\n    addPharmacy(pharmacy) {\n      this.pharmacyForm[0].model = pharmacy.name;\n      this.pharmacyForm[1].model = LanguageService.resolveCountry();\n      this.pharmacyForm[2].model = pharmacy.street;\n      this.pharmacyForm[3].model = pharmacy.number;\n      this.pharmacyForm[4].model = pharmacy.zip;\n      this.pharmacyForm[5].model = pharmacy.city;\n      this.expertOnlyPharmacies.push(this.pharmacyForm.map(field => ({ title: field.ref, value: field.model })));\n\n      const field = this.findExpertOnlyPharmacies();\n\n      field.inputs[0].value = JSON.stringify(this.expertOnlyPharmacies);\n    },\n\n    removePharmacy(index) {\n      this.expertOnlyPharmacies = this.expertOnlyPharmacies.filter((expertOnlyPharmacy, i) => i !== index);\n\n      const field = this.findExpertOnlyPharmacies();\n      field.inputs[0].value = JSON.stringify(this.expertOnlyPharmacies);\n    },\n\n    addPharmacyUniqueNumber() {\n      this.isLookupPharmacyUniqueNumberValid = PharmacyService.fetchById(this.lookupPharmacyUniqueNumber);\n\n      if (this.lookupPharmacyUniqueNumber === this.pharmacyUniqueNumber) {\n        this.isLookupPharmacyUniqueNumberValid = false;\n      }\n\n      const isPharmacyUniqueNumberUnique = this.associatedPharmacyUniqueNumbers\n        .every(number => number !== this.lookupPharmacyUniqueNumber);\n\n      if (!isPharmacyUniqueNumberUnique) {\n        this.isLookupPharmacyUniqueNumberValid = false;\n      }\n\n      if (this.isLookupPharmacyUniqueNumberValid) {\n        const updatedPharmacyUniqueNumbers = this.associatedPharmacyUniqueNumbers\n          .concat([this.lookupPharmacyUniqueNumber]);\n\n        this.$emit('input', this.buildPharmacyUniqueNumbersValueString(updatedPharmacyUniqueNumbers));\n\n        this.lookupPharmacyUniqueNumber = '';\n        this.isPharmacyInputVisible = false;\n      }\n    },\n\n    removeAssociatedPharmacyUniqueNumber(pharmacyUniqueNumber) {\n      const updatedPharmacyUniqueNumbers = this.associatedPharmacyUniqueNumbers.filter(\n        number => number !== pharmacyUniqueNumber,\n      );\n\n      this.$emit('input', this.buildPharmacyUniqueNumbersValueString(updatedPharmacyUniqueNumbers));\n    },\n\n    buildPharmacyUniqueNumbersValueString(pharmacyUniqueNumbers) {\n      return pharmacyUniqueNumbers.join(',');\n    },\n\n    parsePharmacyUniqueNumbersValueString(pharmacyUniqueNumbersStrings) {\n      return pharmacyUniqueNumbersStrings.split(',').filter(val => val !== '');\n    },\n\n    onCancel() {\n      this.isPharmacyInputVisible = false;\n      this.isLookupPharmacyUniqueNumberValid = true;\n    },\n  },\n\n  created() {\n    this.expertCode = this.findEnteredExpertCode();\n    this.pharmacyUniqueNumber = this.expertCode && this.findEnteredPharmacyUniqueNumber() ? this.findEnteredPharmacyUniqueNumber() : this.findEnteredPgCustomerId();\n    this.isExpertOnly = !((!this.expertCode && this.findEnteredPgCustomerId()) || (this.expertCode && this.findEnteredPharmacyUniqueNumber() !== '') || this.salesRepName === undefined);\n  },\n};\n\n</script>\n\n<style lang=\"scss\" scoped>\n  .close {\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    @media (min-width: theme('screens.tablet')) {\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n</style>\n"]}]}