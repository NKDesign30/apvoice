{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/form-renderer/TextInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/form-renderer/TextInput.vue","mtime":1683275992560},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAoKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAoKICAgIHR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgIH0sCgogICAgcmVxdWlyZWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgIH0sCgogICAgaW5wdXRDbGFzczogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKCiAgICBmaWVsZDogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICB9OwogICAgICB9LAogICAgfSwKCiAgICBtZXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgbWF4TGVuZ3RoOiAtMSwKICAgICAgICB9OwogICAgICB9LAogICAgfSwKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNJbnB1dEZvY3VzZWQ6IGZhbHNlLAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgbGlzdGVuZXJzKCkgewogICAgICByZXR1cm4gewogICAgICAgIC4uLnRoaXMuJGxpc3RlbmVycywKICAgICAgICBpbnB1dDogZXZlbnQgPT4gdGhpcy4kZW1pdCgnaW5wdXQnLCBldmVudC50YXJnZXQudmFsdWUpLAogICAgICB9OwogICAgfSwKCiAgICBmaWVsZFBsYWNlaG9sZGVyKCkgewogICAgICByZXR1cm4gdGhpcy5wbGFjZWhvbGRlciB8fCB0aGlzLmZpZWxkLnBsYWNlaG9sZGVyOwogICAgfSwKCiAgICBmaWVsZFR5cGUoKSB7CiAgICAgIHJldHVybiB0aGlzLnR5cGUgfHwgdGhpcy5maWVsZC50eXBlOwogICAgfSwKICB9LAp9OwoK"},{"version":3,"sources":["TextInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"TextInput.vue","sourceRoot":"src/components/form-renderer","sourcesContent":["<template>\n  <div\n    class=\"relative flex items-center text-input-wrapper\"\n    :class=\"{ 'is-focused': isInputFocused }\"\n  >\n    <slot name=\"before\" />\n\n    <input\n      class=\"text-input\"\n      :class=\"inputClass\"\n      :placeholder=\"fieldPlaceholder\"\n      :aria-label=\"fieldPlaceholder\"\n      :type=\"fieldType\"\n      :value=\"value\"\n      :required=\"required\"\n      v-bind=\"$attrs\"\n      v-on=\"listeners\"\n      @focus=\"isInputFocused = true\"\n      @blur=\"isInputFocused = false\"\n    >\n\n    <slot name=\"after\" />\n  </div>\n</template>\n\n<script>\n\nexport default {\n  props: {\n    value: {\n      type: String,\n      default: '',\n    },\n\n    placeholder: {\n      type: String,\n      default: '',\n    },\n\n    type: {\n      type: String,\n      default: '',\n    },\n\n    required: {\n      type: String,\n      default: '',\n    },\n\n    inputClass: {\n      type: String,\n      default: '',\n    },\n\n    field: {\n      type: Object,\n      default() {\n        return {\n          type: 'text',\n        };\n      },\n    },\n\n    meta: {\n      type: Object,\n      default() {\n        return {\n          maxLength: -1,\n        };\n      },\n    },\n  },\n\n  data() {\n    return {\n      isInputFocused: false,\n    };\n  },\n\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: event => this.$emit('input', event.target.value),\n      };\n    },\n\n    fieldPlaceholder() {\n      return this.placeholder || this.field.placeholder;\n    },\n\n    fieldType() {\n      return this.type || this.field.type;\n    },\n  },\n};\n\n</script>\n\n<style lang=\"scss\" scoped>\n.login-text-input {\nbackground: #FFFFFF !important;\nplaceholder: #CCCCCC !important;\ncolor: #000 !important\n}\n.text-input {\n  @apply bg-transparent;\n  @apply outline-none;\n  @apply px-5;\n  @apply py-2;\n  @apply text-gray-900;\n  @apply text-xl;\n  @apply w-full;\n\n  transition: all 0.3s ease;\n\n  &:hover,\n  &:focus {\n    @apply border-gray-200;\n  }\n\n  &::placeholder {\n    @apply italic;\n  }\n\n  &-wrapper {\n    @apply border-2;\n    @apply border-gray-600;\n    @apply overflow-hidden;\n    @apply rounded-full;\n    @apply shadow-inner-light;\n\n    transition: all 0.3s ease;\n\n    &.is-focused {\n      @apply border-gray-200;\n      box-shadow: 0 0 0 3px lightblue;\n    }\n  }\n\n  &:disabled {\n    opacity: .5;\n    @apply bg-gray-100;\n  }\n}\n\n</style>\n"]}]}