{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/content/text-media-paragraph/media-slot/TextMediaParagraphMediaSlotChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/content/text-media-paragraph/media-slot/TextMediaParagraphMediaSlotChart.vue","mtime":1683275992558},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgZ2V0IGZyb20gJ2xvZGFzaC9nZXQnOwppbXBvcnQgbWFwIGZyb20gJ2xvZGFzaC9tYXAnOwppbXBvcnQgeyBDaGFydCB9IGZyb20gJ2NoYXJ0LmpzJzsKLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCmltcG9ydCBDaGFydERhdGFMYWJlbHMgZnJvbSAnY2hhcnRqcy1wbHVnaW4tZGF0YWxhYmVscyc7CmltcG9ydCBCYXIgZnJvbSAnQC9jb21wb25lbnRzL2NoYXJ0cy9CYXIudnVlJzsKaW1wb3J0IHsgaGV4VG9SZ2IsIGNvbG9yQnJpZ2h0bmVzcyB9IGZyb20gJ0Avc2VydmljZXMvdXRpbHMnOwoKY29uc3QgdGFpbHdpbmRDb2xvcnMgPSByZXF1aXJlKCcuLi8uLi8uLi8uLi90YWlsd2luZC9Db2xvcnMnKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAnYXBvLWJhci1jaGFyJzogQmFyLAogIH0sCgogIGluamVjdDogewogICAgcGFnZUluZGljYXRvclN0YXRlOiB7CiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAogIH0sCgogIHByb3BzOiB7CiAgICBtZWRpYTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfSwKICAgIH0sCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9wdGlvbnM6IHsKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLAogICAgICAgIH0sCgogICAgICAgIHRvb2x0aXBzOiB7CiAgICAgICAgICBlbmFibGVkOiBmYWxzZSwKICAgICAgICB9LAoKICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgIHlBeGVzOiBbewogICAgICAgICAgICB0aWNrczogewogICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlLAogICAgICAgICAgICB9LAogICAgICAgICAgfV0sCiAgICAgICAgfSwKCiAgICAgICAgbGF5b3V0OiB7CiAgICAgICAgICBwYWRkaW5nOiB7CiAgICAgICAgICAgIHRvcDogMjUsCiAgICAgICAgICB9LAogICAgICAgIH0sCgogICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLAoKICAgICAgICBhbmltYXRpb246IHsKICAgICAgICAgIG9uUHJvZ3Jlc3MoKSB7CiAgICAgICAgICAgIGNvbnN0IGNoYXJ0SW5zdGFuY2UgPSB0aGlzLmNoYXJ0OwogICAgICAgICAgICBjb25zdCB7IGN0eCB9ID0gY2hhcnRJbnN0YW5jZTsKCiAgICAgICAgICAgIC8vIENyZWF0ZSBGb250IFN0cmluZwogICAgICAgICAgICBjdHguZm9udCA9IENoYXJ0LmhlbHBlcnMuZm9udFN0cmluZygKICAgICAgICAgICAgICBDaGFydC5kZWZhdWx0cy5nbG9iYWwuZGVmYXVsdEZvbnRTaXplLAogICAgICAgICAgICAgIENoYXJ0LmRlZmF1bHRzLmdsb2JhbC5kZWZhdWx0Rm9udFN0eWxlLAogICAgICAgICAgICAgIENoYXJ0LmRlZmF1bHRzLmdsb2JhbC5kZWZhdWx0Rm9udEZhbWlseSwKICAgICAgICAgICAgKTsKICAgICAgICAgICAgY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInOwogICAgICAgICAgICBjdHgudGV4dEJhc2VsaW5lID0gJ2JvdHRvbSc7CgogICAgICAgICAgICAvLyBJdGVyYXRlIG92ZXIgYWxsIGJhcnMKICAgICAgICAgICAgdGhpcy5kYXRhLmRhdGFzZXRzLmZvckVhY2goKGRhdGFzZXQsIGRhdGFzZXRJbmRleCkgPT4gewogICAgICAgICAgICAgIGNvbnN0IG1ldGEgPSBjaGFydEluc3RhbmNlLmNvbnRyb2xsZXIuZ2V0RGF0YXNldE1ldGEoZGF0YXNldEluZGV4KTsKCiAgICAgICAgICAgICAgbWV0YS5kYXRhLmZvckVhY2goKGJhciwgYmFySW5kZXgpID0+IHsKICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBiYXIgaGFzIGEgdmFsdWUgKGkuZS4gaXMgbm90IGhpZGRlbikKICAgICAgICAgICAgICAgIGlmIChkYXRhc2V0LmRhdGFbYmFySW5kZXhdICE9PSAnJyAmJiBkYXRhc2V0LmRhdGFbYmFySW5kZXhdID4gMCkgewogICAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgYmFyIGhhcyBhIGN1c3RvbSBsYWJlbCBhbmQgZHJhdyBpdAogICAgICAgICAgICAgICAgICBjb25zdCBjdXN0b21MYWJlbCA9IGRhdGFzZXQuY3VzdG9tTGFiZWxzW2JhckluZGV4XTsKCiAgICAgICAgICAgICAgICAgIGlmIChjdXN0b21MYWJlbCAmJiBjdXN0b21MYWJlbCAhPT0gJycgJiYgY3VzdG9tTGFiZWwubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlcnNjb3JlLWRhbmdsZQogICAgICAgICAgICAgICAgICAgIGN0eC5maWxsVGV4dChjdXN0b21MYWJlbCwgYmFyLl9tb2RlbC54LCBiYXIuX21vZGVsLnkgLSA1KTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgfSwKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGNoYXJ0ZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBsYWJlbHM6IHRoaXMuZ2V0TGFiZWxzKHRoaXMubWVkaWEpLAogICAgICAgIGRhdGFzZXRzOiB0aGlzLmdldERhdGFzZXRzKHRoaXMubWVkaWEpLAogICAgICB9OwogICAgfSwKCiAgICBpc0NvbnRlbnRWaXNpYmxlKCkgewogICAgICBpZiAodGhpcy5wYWdlSW5kaWNhdG9yU3RhdGUgPT09IG51bGwpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMucGFnZUluZGljYXRvclN0YXRlLmlzT3BlbjsKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgZ2V0TGFiZWxzKG1lZGlhKSB7CiAgICAgIHJldHVybiBtYXAobWVkaWEsICdkZXNjcmlwdGlvbicpOwogICAgfSwKCiAgICBnZXREYXRhc2V0cyhtZWRpYSkgewogICAgICBjb25zdCBkYXRhc2V0cyA9IFtdOwoKICAgICAgbWVkaWEuZm9yRWFjaCgoZGF0YSwgZGF0YXNldEluZGV4KSA9PiB7CiAgICAgICAgZGF0YS5iYXJzLmZvckVhY2goKGJhciwgYmFySW5kZXgpID0+IHsKICAgICAgICAgIGlmICghZGF0YXNldHNbYmFySW5kZXhdKSB7CiAgICAgICAgICAgIGNvbnN0IHsgcmVkLCBncmVlbiwgYmx1ZSB9ID0gaGV4VG9SZ2IodGhpcy5nZXRUYWlsd2luZENvbG9yKGJhci5jb2xvcikpOwogICAgICAgICAgICBjb25zdCBicmlnaHRuZXNzID0gY29sb3JCcmlnaHRuZXNzKHJlZCwgZ3JlZW4sIGJsdWUpOwogICAgICAgICAgICBjb25zdCBjb2xvciA9IGJyaWdodG5lc3MgPCAxMjMgPyAnI2ZmZmZmZicgOiAnIzAwMDAwMCc7CgogICAgICAgICAgICBkYXRhc2V0c1tiYXJJbmRleF0gPSB7CiAgICAgICAgICAgICAgbGFiZWw6ICcnLAogICAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogW10sCiAgICAgICAgICAgICAgZGF0YWxhYmVsczogewogICAgICAgICAgICAgICAgYWxpZ246ICdjZW50ZXInLAogICAgICAgICAgICAgICAgYW5jaG9yOiAnY2VudGVyJywKICAgICAgICAgICAgICAgIGNvbG9yLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgY3VzdG9tTGFiZWxzOiBbXSwKICAgICAgICAgICAgfTsKICAgICAgICAgIH0KCiAgICAgICAgICBkYXRhc2V0c1tiYXJJbmRleF0uZGF0YVtkYXRhc2V0SW5kZXhdID0gcGFyc2VGbG9hdChiYXIudmFsdWUpOwogICAgICAgICAgZGF0YXNldHNbYmFySW5kZXhdLmJhY2tncm91bmRDb2xvcltkYXRhc2V0SW5kZXhdID0gdGhpcy5nZXRUYWlsd2luZENvbG9yKGJhci5jb2xvcik7CiAgICAgICAgICBkYXRhc2V0c1tiYXJJbmRleF0uY3VzdG9tTGFiZWxzW2RhdGFzZXRJbmRleF0gPSBiYXIubGFiZWwgfHwgJyc7CiAgICAgICAgfSk7CiAgICAgIH0pOwoKICAgICAgZGF0YXNldHMuZm9yRWFjaCgoZGF0YXNldCwgZGF0YXNldEluZGV4KSA9PiB7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtZWRpYS5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgICAgaWYgKGRhdGFzZXRzW2RhdGFzZXRJbmRleF0uZGF0YVtpXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIGRhdGFzZXRzW2RhdGFzZXRJbmRleF0uZGF0YVtpXSA9ICcnOwogICAgICAgICAgICBkYXRhc2V0c1tkYXRhc2V0SW5kZXhdLmJhY2tncm91bmRDb2xvcltpXSA9ICd0cmFuc3BhcmVudCc7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIHJldHVybiBkYXRhc2V0czsKICAgIH0sCgogICAgZ2V0VGFpbHdpbmRDb2xvcihjb2xvcikgewogICAgICByZXR1cm4gZ2V0KHRhaWx3aW5kQ29sb3JzLCBjb2xvci5yZXBsYWNlKC8tLywgJy4nKSk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["TextMediaParagraphMediaSlotChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"TextMediaParagraphMediaSlotChart.vue","sourceRoot":"src/components/content/text-media-paragraph/media-slot","sourcesContent":["<template>\n  <div class=\"text-media-paragraph__media-slot--chart\">\n    <div class=\"chart-container mb-3\">\n      <apo-bar-char\n        v-if=\"isContentVisible\"\n        :chartdata=\"chartdata\"\n        :options=\"options\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport { Chart } from 'chart.js';\n// eslint-disable-next-line no-unused-vars\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport Bar from '@/components/charts/Bar.vue';\nimport { hexToRgb, colorBrightness } from '@/services/utils';\n\nconst tailwindColors = require('../../../../tailwind/Colors');\n\nexport default {\n  components: {\n    'apo-bar-char': Bar,\n  },\n\n  inject: {\n    pageIndicatorState: {\n      default: null,\n    },\n  },\n\n  props: {\n    media: {\n      type: Array,\n      required: false,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      options: {\n        legend: {\n          display: false,\n        },\n\n        tooltips: {\n          enabled: false,\n        },\n\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n            },\n          }],\n        },\n\n        layout: {\n          padding: {\n            top: 25,\n          },\n        },\n\n        maintainAspectRatio: false,\n\n        animation: {\n          onProgress() {\n            const chartInstance = this.chart;\n            const { ctx } = chartInstance;\n\n            // Create Font String\n            ctx.font = Chart.helpers.fontString(\n              Chart.defaults.global.defaultFontSize,\n              Chart.defaults.global.defaultFontStyle,\n              Chart.defaults.global.defaultFontFamily,\n            );\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'bottom';\n\n            // Iterate over all bars\n            this.data.datasets.forEach((dataset, datasetIndex) => {\n              const meta = chartInstance.controller.getDatasetMeta(datasetIndex);\n\n              meta.data.forEach((bar, barIndex) => {\n                // Check if the bar has a value (i.e. is not hidden)\n                if (dataset.data[barIndex] !== '' && dataset.data[barIndex] > 0) {\n                  // Check if the bar has a custom label and draw it\n                  const customLabel = dataset.customLabels[barIndex];\n\n                  if (customLabel && customLabel !== '' && customLabel.length > 0) {\n                    // eslint-disable-next-line no-underscore-dangle\n                    ctx.fillText(customLabel, bar._model.x, bar._model.y - 5);\n                  }\n                }\n              });\n            });\n          },\n        },\n      },\n    };\n  },\n\n  computed: {\n    chartdata() {\n      return {\n        labels: this.getLabels(this.media),\n        datasets: this.getDatasets(this.media),\n      };\n    },\n\n    isContentVisible() {\n      if (this.pageIndicatorState === null) {\n        return true;\n      }\n\n      return this.pageIndicatorState.isOpen;\n    },\n  },\n\n  methods: {\n    getLabels(media) {\n      return map(media, 'description');\n    },\n\n    getDatasets(media) {\n      const datasets = [];\n\n      media.forEach((data, datasetIndex) => {\n        data.bars.forEach((bar, barIndex) => {\n          if (!datasets[barIndex]) {\n            const { red, green, blue } = hexToRgb(this.getTailwindColor(bar.color));\n            const brightness = colorBrightness(red, green, blue);\n            const color = brightness < 123 ? '#ffffff' : '#000000';\n\n            datasets[barIndex] = {\n              label: '',\n              data: [],\n              backgroundColor: [],\n              datalabels: {\n                align: 'center',\n                anchor: 'center',\n                color,\n              },\n              customLabels: [],\n            };\n          }\n\n          datasets[barIndex].data[datasetIndex] = parseFloat(bar.value);\n          datasets[barIndex].backgroundColor[datasetIndex] = this.getTailwindColor(bar.color);\n          datasets[barIndex].customLabels[datasetIndex] = bar.label || '';\n        });\n      });\n\n      datasets.forEach((dataset, datasetIndex) => {\n        for (let i = 0; i < media.length; i += 1) {\n          if (datasets[datasetIndex].data[i] === undefined) {\n            datasets[datasetIndex].data[i] = '';\n            datasets[datasetIndex].backgroundColor[i] = 'transparent';\n          }\n        }\n      });\n\n      return datasets;\n    },\n\n    getTailwindColor(color) {\n      return get(tailwindColors, color.replace(/-/, '.'));\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n.chart-container {\n  max-height: calc(theme('spacing.72') * 2);\n}\n\n</style>\n"]}]}