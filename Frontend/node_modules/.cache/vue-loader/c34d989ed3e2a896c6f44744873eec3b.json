{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/transitions/ExpandCollapse.vue?vue&type=style&index=0&id=15da6b08&scoped=true&lang=css&","dependencies":[{"path":"/app/src/components/transitions/ExpandCollapse.vue","mtime":1683275992568},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKKiB7CiAgd2lsbC1jaGFuZ2U6IGhlaWdodDsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7CiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOwogIHBlcnNwZWN0aXZlOiAxMDAwcHg7Cn0KCi5leHBhbmQtY29sbGFwc2UtZW50ZXItYWN0aXZlLAouZXhwYW5kLWNvbGxhcHNlLWxlYXZlLWFjdGl2ZSB7CiAgQGFwcGx5IG92ZXJmbG93LWhpZGRlbjsKCiAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMjVzIGVhc2UtaW4tb3V0Owp9CgouZXhwYW5kLWNvbGxhcHNlLWVudGVyLAouZXhwYW5kLWNvbGxhcHNlLWxlYXZlLXRvIHsKICBAYXBwbHkgaC0wOwp9Cgo="},{"version":3,"sources":["ExpandCollapse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"ExpandCollapse.vue","sourceRoot":"src/components/transitions","sourcesContent":["<template>\n  <transition\n    name=\"expand-collapse\"\n    @enter=\"enter\"\n    @after-enter=\"afterEnter\"\n    @leave=\"leave\"\n  >\n    <slot />\n  </transition>\n</template>\n\n<script>\n\n/* eslint-disable no-param-reassign, no-unused-expressions */\nexport default {\n  methods: {\n    enter(element) {\n      const { width } = getComputedStyle(element);\n\n      element.style.width = width;\n      element.style.position = 'absolute';\n      element.style.visibility = 'hidden';\n      element.style.height = 'auto';\n\n      const { height } = getComputedStyle(element);\n\n      element.style.width = null;\n      element.style.position = null;\n      element.style.visibility = null;\n      element.style.height = 0;\n\n      // Force repaint to make sure the\n      // animation is triggered correctly.\n      getComputedStyle(element).height;\n\n      // Trigger the animation.\n      // We use `setTimeout` because we need\n      // to make sure the browser has finished\n      // painting after setting the `height`\n      // to `0` in the line above.\n      setTimeout(() => {\n        element.style.height = height;\n      });\n    },\n\n    afterEnter(element) {\n      element.style.height = 'auto';\n    },\n\n    leave(element) {\n      const { height } = getComputedStyle(element);\n\n      element.style.height = height;\n\n      // Force repaint to make sure the animation is triggered correctly.\n      getComputedStyle(element).height;\n\n      setTimeout(() => {\n        element.style.height = 0;\n      });\n    },\n  },\n};\n/* eslint-enable no-param-reassign, no-unused-expressions */\n\n</script>\n\n<style scoped>\n\n* {\n  will-change: height;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n}\n\n.expand-collapse-enter-active,\n.expand-collapse-leave-active {\n  @apply overflow-hidden;\n\n  transition: height 0.25s ease-in-out;\n}\n\n.expand-collapse-enter,\n.expand-collapse-leave-to {\n  @apply h-0;\n}\n\n</style>\n"]}]}