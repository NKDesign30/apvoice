{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/content/Question.vue?vue&type=style&index=0&id=57f8caec&lang=scss&scoped=true&","dependencies":[{"path":"/app/src/components/content/Question.vue","mtime":1683275992553},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogQ29tcG9uZW50IFN0eWxlcyAqLwoK"},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA","file":"Question.vue","sourceRoot":"src/components/content","sourcesContent":["<template>\n  <div class=\"question container\">\n    <div class=\"question__head mb-17 tablet:mb-13 text-center\">\n      <h2 v-html=\"$options.filters.formatContent(computedQuestion)\" />\n      <small\n        v-if=\"componentKey === 'multiple-answers'\"\n        v-text=\"$t('modules.question.multipleAnswersHint')\"\n      />\n      <h4\n        class=\"mt-10 tablet:mt-8\"\n        v-html=\"$options.filters.formatContent(subheadline)\"\n      />\n    </div>\n    <div\n      v-if=\"componentExists\"\n      class=\"question__module\"\n    >\n      <component\n        :is=\"componentName\"\n        :options=\"options\"\n        :response-messages=\"responseMessages\"\n        @input=\"onSubmitAnswer\"\n      />\n    </div>\n    <small\n      v-if=\"isMissing\"\n      class=\"mt-4 block text-center text-red-500 text-xs font-bold\"\n      v-text=\"$t('trainings.messages.questionIsRequired')\"\n    />\n  </div>\n</template>\n\n<script>\nimport get from 'lodash/get';\nimport { mapGetters } from 'vuex';\nimport TrainingService from '@/services/api/TrainingService';\nimport QuestionChoice from '@/components/content/question/QuestionChoice.vue';\nimport QuestionRating from '@/components/content/question/QuestionRating.vue';\nimport QuestionMultipleAnswers from '@/components/content/question/QuestionMultipleAnswers.vue';\n\nexport default {\n\n  inject: ['trainingsState'],\n\n  components: {\n    'apo-question-choice': QuestionChoice,\n    'apo-question-rating': QuestionRating,\n    'apo-question-multiple-answers': QuestionMultipleAnswers,\n  },\n\n  props: {\n    question: {\n      type: Object,\n      required: true,\n    },\n    parentId: {\n      type: Number,\n      required: false,\n      default: null,\n    },\n  },\n\n  data() {\n    return {\n      isMissing: false,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['userId', 'training', 'lesson']),\n\n    computedQuestion() {\n      return get(this.question, 'question', '');\n    },\n    subheadline() {\n      return get(this.question, 'subheadline', '');\n    },\n    componentKey() {\n      return get(this.question, 'answer_options[0].acf_fc_layout', null).toLowerCase().replace(/[_\\s]/g, '-');\n    },\n    componentName() {\n      return `apo-question-${this.componentKey}`;\n    },\n    componentExists() {\n      return this.componentName in this.$options.components;\n    },\n    options() {\n      if (this.componentKey === 'choice') {\n        return [\n          get(this.question, 'answer_options[0].option_1', {}),\n          get(this.question, 'answer_options[0].option_2', {}),\n        ];\n      }\n      return get(this.question, 'answer_options[0].options', []);\n    },\n    responseMessages() {\n      if (this.componentKey !== 'choice') {\n        return get(this.question, 'answer_options[0].response_messages', []);\n      }\n      return null;\n    },\n  },\n\n  watch: {\n    // eslint-disable-next-line func-names\n    'trainingsState.currentMissingElement': function (elementId) {\n      if (elementId === this.question.id && this.isRequiredQuestionModule()) {\n        this.isMissing = true;\n        setTimeout(() => {\n          this.$el.scrollIntoView({\n            behavior: 'smooth',\n          });\n        }, 800);\n      }\n    },\n  },\n\n  methods: {\n    onSubmitAnswer(answer) {\n      this.isMissing = false;\n\n      // console.log(this.training);\n      // console.log(this.lesson);\n\n      const payload = {\n        user_id: this.userId,\n        training_id: this.training.id,\n        question_id: this.question.id,\n        lesson_id: this.lesson.lesson_id,\n        question_type: this.componentKey,\n        result: [{\n          question: this.question.question,\n          user_answer: answer,\n          question_type: this.componentKey,\n        }],\n      };\n\n      // returns a promise\n      TrainingService.storeQuestionResult(payload)\n        .then(() => {\n          if (this.isRequiredQuestionModule()) {\n            const elementIndex = this.trainingsState.requiredElements\n              .findIndex(element => element.question_id === this.question.id);\n            this.trainingsState.requiredElements[elementIndex].hasSubmitted = true;\n          }\n        })\n        .catch(() => {\n          this.isMissing = true;\n        });\n    },\n\n    isRequiredQuestionModule() {\n      // add required questions module keys to array\n      // actual only rating question module is always required\n      return ['rating'].indexOf(this.componentKey) !== -1;\n    },\n\n  },\n\n  created() {\n    if (this.isRequiredQuestionModule()) {\n      this.trainingsState.requiredElements.push({\n        pageIndicatorId: this.parentId,\n        question_id: this.question.id,\n        hasSubmitted: false,\n      });\n    }\n  },\n};\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n/* Component Styles */\n\n</style>\n"]}]}