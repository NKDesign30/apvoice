{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/training/quiz/TrainingQuizItem.vue?vue&type=style&index=0&id=638ecdb7&lang=scss&scoped=true&","dependencies":[{"path":"/app/src/components/training/quiz/TrainingQuizItem.vue","mtime":1683275992567},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGhlbWUtdHJhaW5pbmcgewogIC5idXR0b24tY2xhc3MgewogICAgQGFwcGx5IGJnLXRyYWluaW5nLTUwMDsKICB9Cn0KLnRoZW1lLXNjaWVudGlmaWMgewogIC5idXR0b24tY2xhc3MgewogICAgQGFwcGx5IGJnLXNjaWVudGlmaWMtNTAwOwogIH0KfQo="},{"version":3,"sources":["TrainingQuizItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TrainingQuizItem.vue","sourceRoot":"src/components/training/quiz","sourcesContent":["<template>\n  <!-- eslint-disable-next-line max-len -->\n  <div class=\"flex flex-col mx-4 training-quiz-item tablet:container tablet:mx-auto font-display tablet:flex-row\">\n    <div class=\"w-full mb-6 training-quiz-item__image tablet:w-1/2 tablet:mr-12\">\n      <img\n        :src=\"quiz.image.url\"\n        :alt=\"quiz.image.alt\"\n      >\n      <slot />\n    </div>\n\n    <div class=\"w-full training-quiz-item__body tablet:w-1/3\">\n      <div class=\"question\">\n        <h3\n          class=\"mb-6 text-xl tablet:mb-2 leading-xl tablet:text-2xl tablet:leading-2xl\"\n          v-html=\"$options.filters.formatContent(quiz.question)\"\n        />\n      </div>\n\n      <div class=\"choices\">\n        <div\n          v-for=\"choice in quiz.choices\"\n          :key=\"choice.id\"\n          class=\"flex mb-4 choice\"\n        >\n          <div class=\"flex-shrink-0 mt-4 mr-6\">\n            <apo-training-quiz-choice-button\n              :id=\"choice.id\"\n              :answer=\"userAnswerId\"\n              :value=\"choice.id\"\n              :is-disabled=\"!canAnswer\"\n              :validation-class=\"choice.validationClass\"\n              @input=\"userAnswerId = $event\"\n            />\n          </div>\n          <div class=\"flex-1 mt-4\">\n            <label\n              :for=\"choice.id\"\n              :class=\"[canAnswer ? 'cursor-pointer' : 'cursor-not-allowed']\"\n              v-html=\"$options.filters.formatContent(choice.value)\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <small\n        v-if=\"!validation\"\n        class=\"mt-4 text-xs font-bold text-red-500\"\n        v-text=\"$t('trainings.messages.questionIsRequired')\"\n      />\n\n      <div class=\"flex justify-end buttons\">\n        <apo-button\n          v-if=\"!hasAnswerd\"\n          class=\"`button button--tiny shadow-hard text-white button-class\"\n          @click=\"validateAnswer\"\n        >\n          <apo-wait for=\"submitTrainingQuiz\">\n            <template #waiting>\n              <apo-spinner\n                size=\"small\"\n              />\n            </template>\n            {{ $t('trainings.buttons.checkAnswer') }}\n          </apo-wait>\n        </apo-button>\n\n        <apo-button\n          v-else\n          class=\"button button--tiny shadow-hard text-white button-class\"\n          @click=\"onUpdateChapter\"\n        >\n          <apo-wait for=\"submitTrainingQuiz\">\n            <template #waiting>\n              <apo-spinner\n                size=\"small\"\n              />\n            </template>\n            {{ updateChapterButtonLabel }}\n          </apo-wait>\n        </apo-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TrainingQuizChoiceButton from '@/components/training/quiz/TrainingQuizChoiceButton.vue';\n\nexport default {\n\n  components: {\n    'apo-training-quiz-choice-button': TrainingQuizChoiceButton,\n  },\n\n  props: {\n    quiz: {\n      type: Object,\n      required: true,\n    },\n    isLastChapter: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      canAnswer: true,\n      hasAnswerd: false,\n      userAnswerId: null,\n      validation: true,\n    };\n  },\n  computed: {\n    userAnswer() {\n      return this.quiz.choices.find(choice => choice.id === this.userAnswerId);\n    },\n    correctAnswer() {\n      return this.quiz.choices.find(choice => choice.is_true);\n    },\n    updateChapterButtonLabel() {\n      return this.isLastChapter ? this.$t('general.finish') : this.$t('general.next');\n    }\n  },\n  watch: {\n    quiz: {\n      handler() {\n        this.resetQuiz();\n      },\n    },\n  },\n  methods: {\n    validateAnswer() {\n      if (!this.userAnswerId) {\n        this.validation = false;\n        return;\n      }\n      this.processAnswer();\n    },\n    processAnswer() {\n      if (!this.correctAnswer) {\n        return;\n      }\n\n      if (this.userAnswer.id !== this.correctAnswer.id) {\n        this.userAnswer.validationClass = 'failed';\n        setTimeout(()=>{\n          this.userAnswer.validationClass = null;\n       },500)\n      }\n    if (this.userAnswer.id == this.correctAnswer.id) {\n       this.correctAnswer.validationClass = 'succeeded';\n      this.$emit('submit-answer', this.userAnswer);\n      this.disableChoices();\n      this.hasAnswerd = true;\n      }\n \n    },\n    onUpdateChapter() {\n      this.$emit('update-chapter');\n    },\n    disableChoices() {\n      this.canAnswer = false;\n    },\n    enableChoices() {\n      this.canAnswer = true;\n    },\n    onChoiceInput() {\n      this.validation = true;\n    },\n    resetQuiz() {\n      this.canAnswer = true;\n      this.hasAnswerd = false;\n      this.userAnswerId = null;\n      this.validation = true;\n    },\n  },\n\n};\n</script>\n\n<style lang=\"scss\"  scoped>\n.theme-training {\n  .button-class {\n    @apply bg-training-500;\n  }\n}\n.theme-scientific {\n  .button-class {\n    @apply bg-scientific-500;\n  }\n}\n</style>\n"]}]}