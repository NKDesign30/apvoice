{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/views/NewLoginPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/views/NewLoginPage.vue","mtime":1683275992580},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBDbXNQYWdlIGZyb20gJ0AvY29tcG9uZW50cy9jbXMvQ21zUGFnZS52dWUnOwppbXBvcnQgTm90Rm91bmRQYWdlIGZyb20gJ0AvY29tcG9uZW50cy9jbXMvTm90Rm91bmRQYWdlLnZ1ZSc7CmltcG9ydCBMb2dpbkZvcm0gZnJvbSAnQC9jb21wb25lbnRzL2xvZ2luL0xvZ2luRm9ybS52dWUnOwppbXBvcnQgbWFpbnRlbmFuY2UgZnJvbSAnQC9jb21wb25lbnRzL21haW50ZW5hbmNlL2luZGV4LnZ1ZSc7CmltcG9ydCBJbnRlcm5hdGlvbmFsTGlua3MgZnJvbSAnQC9jb21wb25lbnRzL2Zyb250cGFnZS9JbnRlcm5hdGlvbmFsTGlua3MudnVlJzsKaW1wb3J0IFBhZ2VTZXJ2aWNlIGZyb20gJ0Avc2VydmljZXMvYXBpL1BhZ2VTZXJ2aWNlJzsKaW1wb3J0IHRoZW1lU2V0dGluZ3MgZnJvbSAnQC9taXhpbnMvdGhlbWUtc2V0dGluZ3MnOwppbXBvcnQgewogIFBBR0VTX0FERF9QQUdFLAogIFBBR0VTX1NFVF9DVVJSRU5UX1BBR0UsCn0gZnJvbSAnQC9zdG9yZS90eXBlcy9hY3Rpb24tdHlwZXMnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgICdhcG8tY21zLXBhZ2UnOiBDbXNQYWdlLAogICAgJ2Fwby1sb2dpbi1mb3JtJzogTG9naW5Gb3JtLAogICAgJ2Fwby1ub3QtZm91bmQtcGFnZSc6IE5vdEZvdW5kUGFnZSwKICAgICdhcG8taW50ZXJuYXRpb25hbC1saW5rcyc6IEludGVybmF0aW9uYWxMaW5rcywKICAgIG1haW50ZW5hbmNlLAogIH0sCgogIG1peGluczogW3RoZW1lU2V0dGluZ3MoJ2RlZmF1bHQnKV0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb250ZW50OiB7fSwKICAgICAgdGl0bGU6ICcnLAogICAgICBjYW5vbmljYWxVcmw6ICcvJywKICAgICAgcGFnZU5vdEZvdW5kOiBmYWxzZSwKICAgICAgaXNQdWJsaWNQYWdlOiBmYWxzZSwKICAgICAgaXNIb21lUGFnZTogZmFsc2UsCiAgICB9OwogIH0sCgogIGhlYWQoKSB7CiAgICByZXR1cm4gewogICAgICB0aXRsZTogewogICAgICAgIGlubmVyOiB0aGlzLnRpdGxlLAogICAgICB9LAogICAgICBsaW5rOiBbeyByZWw6ICdjYW5vbmljYWwnLCBocmVmOiB0aGlzLmNhbm9uaWNhbFVybCwgaWQ6ICdjYW5vbmljYWwnIH1dLAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoewogICAgICBwYWdlczogc3RhdGUgPT4gc3RhdGUucGFnZXMucGFnZXMsCiAgICAgIGN1cnJlbnRQYWdlOiBzdGF0ZSA9PiBzdGF0ZS5wYWdlcy5jdXJyZW50UGFnZSwKICAgIH0pLAoKICAgIC4uLm1hcEdldHRlcnMoWydpc0F1dGhlbnRpY2F0ZWQnLCAnbGFuZ3VhZ2UnXSksCiAgfSwKCiAgd2F0Y2g6IHsKICAgIC8vICRyb3V0ZTogewogICAgLy8gICBpbW1lZGlhdGU6IHRydWUsCiAgICAvLyAgIGhhbmRsZXIobmV3Um91dGUpIHsKICAgIC8vICAgICB0aGlzLmxvYWRQYWdlKG5ld1JvdXRlKTsKICAgIC8vICAgfSwKICAgIC8vIH0sCgogICAgY3VycmVudFBhZ2UobmV3UGFnZSkgewogICAgICB0aGlzLmlzUHVibGljUGFnZSA9IG5ld1BhZ2UuaXNQdWJsaWM7CiAgICAgIHRoaXMuY29udGVudCA9IEFycmF5LmlzQXJyYXkobmV3UGFnZS5hY2YpID8ge30gOiBuZXdQYWdlLmFjZjsKICAgICAgdGhpcy50aXRsZSA9IG5ld1BhZ2UudGl0bGU7CiAgICAgIHRoaXMuY2Fub25pY2FsVXJsID0gYCR7d2luZG93LmxvY2F0aW9uLnByb3RvY29sfS8vJHt3aW5kb3cubG9jYXRpb24uaG9zdH0ke3dpbmRvdy5sb2NhdGlvbi5wYXRobmFtZX1gOwoKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlSGVhZCcpOwogICAgfSwKICB9LAoKICBtZXRob2RzOiB7CiAgICBsb2FkUGFnZShyb3V0ZSkgewogICAgICB0aGlzLnBhZ2VOb3RGb3VuZCA9IGZhbHNlOwogICAgICB0aGlzLmlzSG9tZVBhZ2UgPSBmYWxzZTsKICAgICAgaWYgKHJvdXRlLnBhdGggPT09ICcvJykgewogICAgICAgIHRoaXMuaXNIb21lUGFnZSA9IHRydWU7CiAgICAgICAgdGhpcy5sb2FkSG9tZVBhZ2UoKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmlzUGFnZUtub3duKHJvdXRlKSkgewogICAgICAgIHRoaXMubG9hZEtub3duUGFnZShyb3V0ZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5sb2FkVW5rbm93blBhZ2Uocm91dGUpOwogICAgICB9CiAgICB9LAoKICAgIGxvYWRIb21lUGFnZSgpIHsKICAgICAgaWYgKHRoaXMuaXNBdXRoZW50aWNhdGVkKSB7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBuYW1lOiAnd2VsY29tZScgfSk7CiAgICAgIH0KICAgIH0sCgogICAgbG9hZEtub3duUGFnZShyb3V0ZSkgewogICAgICBjb25zdCBrbm93blBhZ2UgPSBQYWdlU2VydmljZS5maW5kQnlQYXRoKHRoaXMucGFnZXMsIHJvdXRlLnBhdGgpOwoKICAgICAgaWYgKGtub3duUGFnZSkgewogICAgICAgIHRoaXMuJFByb2dyZXNzLnN0YXJ0KCk7CiAgICAgICAgdGhpcy4kUHJvZ3Jlc3Muc2V0KDMwKTsKCiAgICAgICAgUGFnZVNlcnZpY2UuZ2V0UGFnZShrbm93blBhZ2UpCiAgICAgICAgICAudGhlbihwYWdlID0+IHsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goUEFHRVNfU0VUX0NVUlJFTlRfUEFHRSwgcGFnZSk7CiAgICAgICAgICAgIHRoaXMuJFByb2dyZXNzLmZpbmlzaCgpOwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgIHRoaXMucGFnZU5vdEZvdW5kID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy4kUHJvZ3Jlc3MuZmFpbCgpOwogICAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wYWdlTm90Rm91bmQgPSB0cnVlOwogICAgICAgIHRoaXMuJFByb2dyZXNzLmZhaWwoKTsKICAgICAgfQogICAgfSwKCiAgICBsb2FkVW5rbm93blBhZ2Uocm91dGUpIHsKICAgICAgdGhpcy4kUHJvZ3Jlc3Muc3RhcnQoKTsKICAgICAgdGhpcy4kUHJvZ3Jlc3Muc2V0KDMwKTsKICAgICAgUGFnZVNlcnZpY2UuZ2V0UGFnZUJ5U2x1Zyhyb3V0ZS5wYXRoKQogICAgICAgIC50aGVuKHBhZ2UgPT4gewogICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goUEFHRVNfQUREX1BBR0UsIHsKICAgICAgICAgICAgaWQ6IHBhZ2UuaWQsCiAgICAgICAgICAgIHBhdGg6IHBhZ2UucGF0aCwKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goUEFHRVNfU0VUX0NVUlJFTlRfUEFHRSwgcGFnZSk7CgogICAgICAgICAgdGhpcy4kUHJvZ3Jlc3MuZmluaXNoKCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy5wYWdlTm90Rm91bmQgPSB0cnVlOwogICAgICAgICAgdGhpcy4kUHJvZ3Jlc3MuZmFpbCgpOwogICAgICAgIH0pOwogICAgfSwKCiAgICBpc1BhZ2VLbm93bihyb3V0ZSkgewogICAgICByZXR1cm4gdGhpcy5wYWdlcy5zb21lKHBhZ2UgPT4gcGFnZS5wYXRoID09PSByb3V0ZS5wYXRoKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["NewLoginPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"NewLoginPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"cms-container\">\n    <!-- <maintenance v-if=\"!isAuthenticated && isHomePage && (language === 'es')\" /> -->\n    <apo-login-form\n      v-if=\"!isAuthenticated\"\n    />\n    <apo-international-links v-else-if=\"language === 'en'\" />\n    <template v-else>\n      <apo-not-found-page v-if=\"pageNotFound\" />\n      <apo-cms-page\n        v-else\n        :content=\"content\"\n      />\n    </template>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex';\nimport CmsPage from '@/components/cms/CmsPage.vue';\nimport NotFoundPage from '@/components/cms/NotFoundPage.vue';\nimport LoginForm from '@/components/login/LoginForm.vue';\nimport maintenance from '@/components/maintenance/index.vue';\nimport InternationalLinks from '@/components/frontpage/InternationalLinks.vue';\nimport PageService from '@/services/api/PageService';\nimport themeSettings from '@/mixins/theme-settings';\nimport {\n  PAGES_ADD_PAGE,\n  PAGES_SET_CURRENT_PAGE,\n} from '@/store/types/action-types';\n\nexport default {\n  components: {\n    'apo-cms-page': CmsPage,\n    'apo-login-form': LoginForm,\n    'apo-not-found-page': NotFoundPage,\n    'apo-international-links': InternationalLinks,\n    maintenance,\n  },\n\n  mixins: [themeSettings('default')],\n\n  data() {\n    return {\n      content: {},\n      title: '',\n      canonicalUrl: '/',\n      pageNotFound: false,\n      isPublicPage: false,\n      isHomePage: false,\n    };\n  },\n\n  head() {\n    return {\n      title: {\n        inner: this.title,\n      },\n      link: [{ rel: 'canonical', href: this.canonicalUrl, id: 'canonical' }],\n    };\n  },\n\n  computed: {\n    ...mapState({\n      pages: state => state.pages.pages,\n      currentPage: state => state.pages.currentPage,\n    }),\n\n    ...mapGetters(['isAuthenticated', 'language']),\n  },\n\n  watch: {\n    // $route: {\n    //   immediate: true,\n    //   handler(newRoute) {\n    //     this.loadPage(newRoute);\n    //   },\n    // },\n\n    currentPage(newPage) {\n      this.isPublicPage = newPage.isPublic;\n      this.content = Array.isArray(newPage.acf) ? {} : newPage.acf;\n      this.title = newPage.title;\n      this.canonicalUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n\n      this.$emit('updateHead');\n    },\n  },\n\n  methods: {\n    loadPage(route) {\n      this.pageNotFound = false;\n      this.isHomePage = false;\n      if (route.path === '/') {\n        this.isHomePage = true;\n        this.loadHomePage();\n      } else if (this.isPageKnown(route)) {\n        this.loadKnownPage(route);\n      } else {\n        this.loadUnknownPage(route);\n      }\n    },\n\n    loadHomePage() {\n      if (this.isAuthenticated) {\n        this.$router.push({ name: 'welcome' });\n      }\n    },\n\n    loadKnownPage(route) {\n      const knownPage = PageService.findByPath(this.pages, route.path);\n\n      if (knownPage) {\n        this.$Progress.start();\n        this.$Progress.set(30);\n\n        PageService.getPage(knownPage)\n          .then(page => {\n            this.$store.dispatch(PAGES_SET_CURRENT_PAGE, page);\n            this.$Progress.finish();\n          })\n          .catch(() => {\n            this.pageNotFound = true;\n            this.$Progress.fail();\n          });\n      } else {\n        this.pageNotFound = true;\n        this.$Progress.fail();\n      }\n    },\n\n    loadUnknownPage(route) {\n      this.$Progress.start();\n      this.$Progress.set(30);\n      PageService.getPageBySlug(route.path)\n        .then(page => {\n          this.$store.dispatch(PAGES_ADD_PAGE, {\n            id: page.id,\n            path: page.path,\n          });\n          this.$store.dispatch(PAGES_SET_CURRENT_PAGE, page);\n\n          this.$Progress.finish();\n        })\n        .catch(() => {\n          this.pageNotFound = true;\n          this.$Progress.fail();\n        });\n    },\n\n    isPageKnown(route) {\n      return this.pages.some(page => page.path === route.path);\n    },\n  },\n};\n</script>\n"]}]}