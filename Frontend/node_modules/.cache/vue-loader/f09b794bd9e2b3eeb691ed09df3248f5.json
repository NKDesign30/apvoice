{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/views/TrainingsScientific.vue?vue&type=style&index=0&id=4b7456d0&scoped=true&lang=css&","dependencies":[{"path":"/app/src/views/TrainingsScientific.vue","mtime":1690462162016},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLndlbGNvbWUtc2VjdGlvbiB7CiAgLyogdGhlIHNwZWMgZm9yIGR0ICovCiAgLypiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCBsaW5lYXItZ3JhZGllbnQoMjQ5ZGVnLCAjOUJENDQyIDAlLCAjMDBCMDQxIDEwMCUpIDAlIDAlIG5vLXJlcGVhdCBwYWRkaW5nLWJveCAhaW1wb3J0YW50OyovCiAgLyogdGhlIHNwZWMgZm9yIG1vYmlsZSAtIHNsaWdodGx5IGRpZmZlcmVudCAqLwogIC8qIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IGxpbmVhci1ncmFkaWVudCgyMTdkZWcsICM5QkQ0NDIgMCUsICMwMEIwNDEgMTAwJSkgMCUgMCUgbm8tcmVwZWF0IHBhZGRpbmctYm94OyAqLwogIC8qIGF2IGJldHdlZW4gdHdvICovCiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgbGluZWFyLWdyYWRpZW50KDIzM2RlZywgIzlCRDQ0MiAwJSwgIzAwQjA0MSAxMDAlKSAwJSAwJSBuby1yZXBlYXQgcGFkZGluZy1ib3ggIWltcG9ydGFudDsKICBjb2x1bW4tZ2FwOiAxNTBweDsKfQoKLmRvbmUtb3ItYXZhaWxhYmxlLWJveCB7CiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgbGluZWFyLWdyYWRpZW50KDI0NGRlZywgI0ZGRkZGRiAwJSwgI0RCRjBBRCAxMDAlKSAwJSAwJSBuby1yZXBlYXQgcGFkZGluZy1ib3g7CiAgYm94LXNoYWRvdzogMHB4IDBweCAxMHB4ICMwMDAwMDAyOTsKICBjb2xvcjogIzNjM2MzYjsKICBtYXgtd2lkdGg6IDI5NXB4Owp9Ci5tYXgtdy02eGwgewogICAgbWF4LXdpZHRoOiA4NXJlbTsKfQouc2hvdy1lbnRlci1hY3RpdmUgewogIGFuaW1hdGlvbjogaGVpZ2h0IDAuNXM7Cn0KCi5zaG93LWxlYXZlLWFjdGl2ZSB7CiAgYW5pbWF0aW9uOiBoZWlnaHQgMC41cyByZXZlcnNlOwp9CgpAa2V5ZnJhbWVzIHNob3ctaW4gewogIDAlIHsKICAgIHRyYW5zZm9ybTogaGVpZ2h0KDApOwogIH0KICA1MCUgewogICAgdHJhbnNmb3JtOiBoZWlnaHQoNTAlKTsKICB9CiAgMTAwJSB7CiAgICB0cmFuc2Zvcm06IGhlaWdodCgxMDAlKTsKICB9Cn0KCkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkgewogIC5jdXN0b20tZ2FwIHsKICAgIGNvbHVtbi1nYXA6IDBweCAhaW1wb3J0YW50OwogIH0KfQouY3VzdG9tLWdhcCB7CiAgY29sdW1uLWdhcDogMTUwcHg7Cn0KLmNvbnRhaW5lciB7CiAgICBtYXgtd2lkdGg6IDQ1cmVtIWltcG9ydGFudDsKICAgIHBhZGRpbmctbGVmdDogMDsKICAgIHBhZGRpbmctcmlnaHQ6IDA7Cn0K"},{"version":3,"sources":["TrainingsScientific.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TrainingsScientific.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <apo-restrict-content-wrapper>\n    <apo-wait for=\"trainings.series\">\n      <template #waiting>\n        <apo-loading-overlay\n          class=\"my-15\"\n          :message=\"$t('loaders.trainingSeries')\"\n        />\n      </template>\n      <div class=\"welcome-section\">\n        <div\n          class=\"relative flex flex-wrap justify-center w-full pt-5 pb-10 pl-4 pr-4 tablet:pl-10 mx-auto space-x-12 text-white desktop:py-20 tablet:overflow-hidden max-w-7xl\"\n        >\n          <div class=\"flex flex-col w-full tablet:w-1/2\">\n            <div class=\"pr-8 text-3xl tablet:text-4xl desktop:text-5xl leading-3\">\n              {{ $t(\"trainings.welcome\") }} {{ user.firstName }}!\n              <br>\n              <span class=\"w-full\">\n                {{ $t(\"trainings.scientific.welcome_to_sci\") }}\n                {{ $t(\"trainings.scientific.category\") }}\n              </span>\n            </div>\n\n            <div class=\"flex flex-col w-full mt-5 tablet:mt-0\">\n              <p class=\"mt-5 mb-3 text-xl\">\n                {{ $t(\"trainings.overview_text_sci\") }}:\n              </p>\n              <div class=\"flex flex-row tablet:flex-col desktop:flex-row\">\n                <div\n                  class=\"w-1/2 pr-2 tablet:w-full desktop:w-1/2 tablet:pr-0 desktop:pr-2\"\n                >\n                  <div\n                    class=\"relative w-full h-full px-2 py-1 rounded-lg done-or-available-box\"\n                  >\n                    <h4\n                      class=\"py-6 text-6xl text-center text-black tablet:text-6xl\"\n                    >\n                      {{\n                        (scientificCategoryTrainingSeries.length - countDoneScientificTrainings)\n                      }}\n                    </h4>\n                    <div\n                      class=\"flex flex-row justify-between text-xs tablet:text-base\"\n                    >\n                      <p class=\"mr-2 text-black\">\n                        {{ $t(\"trainings.available\") }}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  class=\"w-1/2 px-2 py-1 rounded-lg tablet:mt-4 desktop:mt-0 tablet:w-full desktop:w-1/2 done-or-available-box\"\n                >\n                  <h4\n                    class=\"py-6 text-6xl text-center text-black tablet:text-6xl\"\n                  >\n                    {{ countDoneScientificTrainings }}\n                  </h4>\n                  <div\n                    class=\"flex flex-row justify-between text-xs tablet:text-base\"\n                  >\n                    <p class=\"mr-2 text-black\">\n                      {{ $t(\"trainings.completed\") }}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex flex-col w-full tablet:w-1/2 relative\">\n            <img\n              src=\"/assets/img/Training.svg\"\n              class=\"absolute hidden tablet:block\"\n              style=\"bottom: -95px;width: 536px;; height: 365px;right: 0px;\"\n            >\n          </div>\n        </div>\n      </div>\n\n      <div\n        v-if=\"isOverview\"\n        class=\"px-5 pb-10 trainings desktop:px-0\"\n      >\n        <h2 class=\"mx-auto mt-10 text-center\">\n          {{ $t(\"trainings.available_content\") }}\n        </h2>\n\n        <div\n          v-if=\"scientificCategoryTrainingSeries.length > 0\"\n          id=\"category\"\n          class=\"max-w-6xl py-2 mx-auto mt-10\"\n        >\n          <div v-if=\"scientificCategory !== null\">\n            <div class=\"w-full pb-10\">\n              <p class=\"w-full px-2 mx-auto mb-8 text-center tablet:w-1/2 tablet:px-0\">\n                {{ $t('trainings.scientificTrainings.teaser') }}\n              </p>\n\n              <div\n                v-if=\"content && contentPosition === 'before'\"\n                class=\"video-sci\"\n              >\n                <component\n                  :is=\"`apo-cms-${renderer}-renderer`\"\n                  v-for=\"(components, renderer) in content\"\n                  :key=\"`${renderer}-renderer`\"\n                  :components=\"components || []\"\n                />\n              </div>\n              <!-- desktop -->\n              <div class=\"flex-wrap hidden w-full mx-auto mt-3 mb-8 desktop:flex desktop:flex-row\">\n                <div\n                  v-for=\"category in trainingCategoriesForFilter\"\n                  :key=\"category.id\"\n                  class=\"items-center mr-3 cursor-pointer\"\n                  @click=\"filterTrainings(category.id)\"\n                >\n                  <div>\n                    <apo-icon\n                      v-if=\"categoriesIds.indexOf(category.id) >= 0\"\n                      src=\"radio_checked\"\n                      class=\"w-4 h-4 training-lesson__icon--unchecked text-green-400\"\n                    />\n                    <apo-icon\n                      v-else\n                      src=\"radio\"\n                      class=\"w-4 h-4 training-lesson__icon--checked text-green-400\"\n                    />\n                    {{ category.name }}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- mobile -->\n            <div\n              class=\"w-full p-5 mx-auto mb-8 rounded-lg tablet:w-1/2 desktop:hidden\"\n              style=\"box-shadow: 0px 0px 10px #00000029;\"\n            >\n              <div\n                class=\"flex flex-row items-center justify-between\"\n                @click=\"showFiltersMobile = !showFiltersMobile\"\n              >\n                <span class=\"flex-grow flex-shrink text-center \">{{\n                  $t('trainings.filter')\n                }}</span>\n                <img\n                  src=\"/assets/img/triangle.png\"\n                  class=\"w-5 transform\"\n                  :class=\"showFiltersMobile ? 'rotate-180' : 'rotate-90'\"\n                >\n              </div>\n              <!-- category filter -->\n              <div\n                v-if=\"showFiltersMobile\"\n                class=\"flex flex-wrap w-full mx-auto mt-3 desktop:hidden\"\n              >\n                <div\n                  v-for=\"category in trainingCategoriesForFilter\"\n                  :key=\"category.id\"\n                  class=\"items-center w-1/2 cursor-pointer\"\n                  @click=\"filterTrainings(category.id)\"\n                >\n                  <div>\n                    <apo-icon\n                      v-if=\"categoriesIds.indexOf(category.id) >= 0\"\n                      src=\"radio_checked\"\n                      class=\"w-4 h-4 training-lesson__icon--unchecked text-green-400\"\n                    />\n                    <apo-icon\n                      v-else\n                      src=\"radio\"\n                      class=\"w-4 h-4 training-lesson__icon--checked text-green-400\"\n                    />\n                    {{ category.name }}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- trainings -->\n            <div\n              v-for=\"(training, index) in scientificCategoryTrainingSeries\"\n              :key=\"index\"\n            >\n              <div\n                class=\"flex flex-col w-full pb-5 mb-5 border-b-2\"\n              >\n                <single-training\n                  :training=\"training\"\n                  :theme=\"theme\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <enter-confirmation v-if=\"isOverview\" />\n        <leave-confirmation v-if=\"isOverview\" />\n      </div>\n      <div v-if=\"!isOverview\">\n        <apo-training />\n        <enter-confirmation />\n        <leave-confirmation />\n      </div>\n    </apo-wait>\n  </apo-restrict-content-wrapper>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport Training from '@/components/training/Training.vue';\nimport LoadingOverlay from '@/components/ui/LoadingOverlay.vue';\nimport themeSettings from '@/mixins/theme-settings';\nimport training from '@/components/V2/training/trainingSci.vue';\nimport CmsContentRenderer from '@/components/cms/CmsContentRenderer.vue';\n\nimport LeaveConfirmation from '@/components/training/LeaveScientificConfirmation.vue';\nimport EnterConfirmation from '@/components/training/EnterScientificConfirmation.vue';\n\nimport {\n  TRAININGS_FETCH_ALL_SERIES,\n  TRAININGS_UPDATE_CURRENT_TRAINING,\n  TAXONOMIES_FETCH_TRAINING_CATEGORIES,\n} from '@/store/types/action-types';\nimport { canonicalTag } from '@/services/utils';\n\nexport default {\n  components: {\n    'apo-loading-overlay': LoadingOverlay,\n    'apo-training': Training,\n    'single-training': training,\n    'leave-confirmation': LeaveConfirmation,\n    'apo-cms-content-renderer': CmsContentRenderer,\n    'enter-confirmation': EnterConfirmation,\n  },\n\n  mixins: [themeSettings('scientific')],\n\n  data() {\n    return {\n      isOverview: true,\n      showFiltersMobile: false,\n      training: null,\n      trainings: [],\n      categoriesIds: [],\n      productCategory: null,\n      categoryCategory: null,\n      scientificCategory: null,\n      showApopTooltip: false,\n      showAchTooltip: false,\n    };\n  },\n\n  head() {\n    return {\n      title: {\n        inner: this.$t('pages.trainings.main.meta.title'),\n      },\n      link: [canonicalTag(this.$route)],\n    };\n  },\n\n  computed: {\n    ...mapGetters([\n      'trainingSeries',\n      'trainingCategories',\n      'availableTrainingSeries',\n    ]),\n    ...mapGetters(['language']),\n    ...mapGetters(['trainingCategory', 'user', 'theme']),\n    trainingCategoriesForFilter() {\n      // there must be trainings of this category available\n      const availableCategoryIds = this.allScientificCategoryTrainingSeries.reduce((availableCategories, series) => [...availableCategories, ...series.categories], [])\n        .filter(id => id !== this.scientificCategory.id && id !== this.categoryCategory.id && id !== this.productCategory);\n      return this.trainingCategories.filter(category => availableCategoryIds.includes(category.id));\n    },\n\n    pageData() {\n      return this.$store.state.pages.pageContent.filter(\n        page => page.slug === this.$route.path.replace(/^\\/|\\/$/g, ''),\n      ).length > 0\n        ? this.$store.state.pages.pageContent.filter(\n          page => page.slug === this.$route.path.replace(/^\\/|\\/$/g, ''),\n        )[0]\n        : null;\n    },\n\n    content() {\n      if (this.pageData) {\n        const {\n          /* eslint-disable */\n          password,\n          minimum_height,\n          slides,\n          public_resource,\n          content_position,\n          ...filtered\n        } = this.pageData.acf;\n        /* eslint-enable */\n        return filtered;\n      }\n\n      return null;\n    },\n    contentPosition() {\n      return this.pageData ? this.pageData.acf.content_position : null;\n    },\n    scientificCategoryTrainingSeries() {\n      return this.trainingSeries.filter(item => {\n        let unfiltered = true;\n        if (this.categoriesIds.length > 0) {\n          unfiltered = item.categories.reduce((prev, catId) => prev || this.categoriesIds.includes(catId), false);\n        }\n        return item.trainings.length > 0 && this.isScientificCategoryTraining(item) && parseInt(item.trainings[0].isPremium) === 0 && unfiltered;\n      }).sort((a, b) => this.sortTrainings(a, b));\n    },\n    allScientificCategoryTrainingSeries() {\n      return this.trainingSeries.filter(item => item.trainings.length > 0 && this.isScientificCategoryTraining(item) && parseInt(item.trainings[0].isPremium) === 0);\n    },\n    trainingSeries() {\n      return this.$store.state.trainings.trainingSeries;\n    },\n    availableTrainingSeries() {\n      return this.$store.state.trainings.availableTrainingSeries;\n    },\n    countDoneScientificTrainings() {\n      return [...this.scientificCategoryTrainingSeries].reduce((prev, item) => {\n        if (item.trainings.length > 0 && this.user.trainingResults[item.trainings[0].id] && !!parseInt(this.user.trainingResults[item.trainings[0].id].is_complete)) {\n          return prev + 1;\n        }\n        return prev;\n      }, 0);\n    },\n  },\n\n  watch: {\n    $route: {\n      immediate: true,\n      handler(route) {\n        this.$nextTick(() => {\n          if (this.$wait.is('trainings.series')) {\n            return;\n          }\n          if (route.params.training_slug) {\n            this.showTraining();\n          } else {\n            this.showOverview();\n          }\n        });\n      },\n    },\n  },\n\n  methods: {\n    ...mapActions([\n      TRAININGS_FETCH_ALL_SERIES,\n      'fetchAvailableAndCompletedSeries',\n      TRAININGS_UPDATE_CURRENT_TRAINING,\n      TAXONOMIES_FETCH_TRAINING_CATEGORIES,\n    ]),\n\n    showTooltipApopoints() {\n      this.showApopTooltip = !this.showApopTooltip;\n    },\n    isScientificCategoryTraining(trainingItem) {\n      if (this.scientificCategory === null) {\n        return false;\n      }\n      if (typeof this.scientificCategory === 'object') {\n        return trainingItem.categories.includes(this.scientificCategory.id);\n      }\n      return false;\n    },\n    showTraining() {\n      this.isOverview = false;\n      this[TRAININGS_UPDATE_CURRENT_TRAINING](this.$route.params);\n    },\n    showOverview() {\n      this.isOverview = true;\n    },\n    filterTrainings(categoryId) {\n      if (this.categoriesIds.includes(categoryId)) {\n        const index = this.categoriesIds.indexOf(categoryId);\n        this.categoriesIds.splice(index, 1);\n      } else {\n        this.categoriesIds.push(categoryId);\n      }\n    },\n    sortTrainings(a, b) {\n      const trainingResultA = this.user.trainingResults[a.trainings[0].id];\n      const trainingResultB = this.user.trainingResults[b.trainings[0].id];\n\n      if (trainingResultA !== undefined && trainingResultA.is_complete === '1') {\n        if (trainingResultB !== undefined && trainingResultB.is_complete === '1') {\n          if (parseInt(a.informations.boost) > parseInt(b.informations.boost)) {\n            return -1; // Beide Trainings sind abgeschlossen und haben einen Boost-Wert, Training A hat einen höheren Boost-Wert und kommt nach oben.\n          } if (parseInt(a.informations.boost) < parseInt(b.informations.boost)) {\n            return 1; // Beide Trainings sind abgeschlossen und haben einen Boost-Wert, Training B hat einen höheren Boost-Wert und kommt nach oben.\n          }\n          if (a.created_at < b.created_at) {\n            return 1; // Beide Trainings sind abgeschlossen und haben den gleichen Boost-Wert, Training A wurde früher erstellt und kommt nach unten.\n          } if (a.created_at > b.created_at) {\n            return -1; // Beide Trainings sind abgeschlossen und haben den gleichen Boost-Wert, Training B wurde früher erstellt und kommt nach unten.\n          }\n          return 0; // Beide Trainings sind abgeschlossen, haben den gleichen Boost-Wert und wurden zum gleichen Zeitpunkt erstellt.\n        }\n        return 1; // Nur Training A ist abgeschlossen, daher kommt es nach unten.\n      }\n\n      if (trainingResultB !== undefined && trainingResultB.is_complete === '1') {\n        return -1; // Nur Training B ist abgeschlossen, daher kommt es nach unten.\n      }\n\n      if (parseInt(a.informations.boost) > parseInt(b.informations.boost)) {\n        return -1; // Training A hat einen höheren Boost-Wert, daher kommt es nach oben.\n      }\n\n      if (parseInt(a.informations.boost) < parseInt(b.informations.boost)) {\n        return 1; // Training B hat einen höheren Boost-Wert, daher kommt es nach oben.\n      }\n\n      if (a.created_at < b.created_at) {\n        return 1; // Training A wurde früher erstellt, daher kommt es nach unten.\n      }\n\n      if (a.created_at > b.created_at) {\n        return -1; // Training B wurde früher erstellt, daher kommt es nach unten.\n      }\n\n      return 0; // Beide Trainings haben den gleichen Boost-Wert und wurden zum gleichen Zeitpunkt erstellt.\n    },\n  },\n\n  created() {\n    this[TRAININGS_FETCH_ALL_SERIES]();\n    this[TAXONOMIES_FETCH_TRAINING_CATEGORIES]().then(data => {\n      this.scientificCategory = data.find(item => item.slug === 'scientific');\n      this.productCategory = data.find(item => item.slug === 'products');\n      this.categoryCategory = data.find(item => item.slug === 'category');\n    });\n    this.fetchAvailableAndCompletedSeries();\n    const unwatch = this.$watch(\n      'trainingSeries',\n      trainingSeries => {\n        if (trainingSeries.length > 0 && this.$route.params.training_slug) {\n          this.$nextTick(() => {\n            this.showTraining(this.$route.params);\n            unwatch();\n          });\n        }\n      },\n      { immediate: true },\n    );\n  },\n};\n</script>\n\n<style scoped>\n.welcome-section {\n  /* the spec for dt */\n  /*background: transparent linear-gradient(249deg, #9BD442 0%, #00B041 100%) 0% 0% no-repeat padding-box !important;*/\n  /* the spec for mobile - slightly different */\n  /* background: transparent linear-gradient(217deg, #9BD442 0%, #00B041 100%) 0% 0% no-repeat padding-box; */\n  /* av between two */\n  background: transparent linear-gradient(233deg, #9BD442 0%, #00B041 100%) 0% 0% no-repeat padding-box !important;\n  column-gap: 150px;\n}\n\n.done-or-available-box {\n  background: transparent linear-gradient(244deg, #FFFFFF 0%, #DBF0AD 100%) 0% 0% no-repeat padding-box;\n  box-shadow: 0px 0px 10px #00000029;\n  color: #3c3c3b;\n  max-width: 295px;\n}\n.max-w-6xl {\n    max-width: 85rem;\n}\n.show-enter-active {\n  animation: height 0.5s;\n}\n\n.show-leave-active {\n  animation: height 0.5s reverse;\n}\n\n@keyframes show-in {\n  0% {\n    transform: height(0);\n  }\n  50% {\n    transform: height(50%);\n  }\n  100% {\n    transform: height(100%);\n  }\n}\n\n@media (min-width: 767px) and (max-width: 1024px) {\n  .custom-gap {\n    column-gap: 0px !important;\n  }\n}\n.custom-gap {\n  column-gap: 150px;\n}\n.container {\n    max-width: 45rem!important;\n    padding-left: 0;\n    padding-right: 0;\n}\n</style>\n"]}]}