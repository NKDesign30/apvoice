{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/form-renderer/Checkbox.vue?vue&type=style&index=0&id=95393414&lang=scss&scoped=true&","dependencies":[{"path":"/app/src/components/form-renderer/Checkbox.vue","mtime":1683275992558},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jaGVja2JveCB7CiAgQGFwcGx5IGN1cnNvci1wb2ludGVyOwogIEBhcHBseSBibG9jazsKICBAYXBwbHkgaXRlbXMtY2VudGVyOwoKICBAc2NyZWVuIHRhYmxldCB7CiAgICAgIEBhcHBseSBpbmxpbmUtZmxleDsKICB9CgogICYtdGV4dCB7CiAgICBAYXBwbHkgbWwtNDsKICAgIEBhcHBseSB0ZXh0LWdyYXktOTAwOwogICAgQGFwcGx5IHRleHQteGw7CiAgfQp9Cgo="},{"version":3,"sources":["Checkbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Checkbox.vue","sourceRoot":"src/components/form-renderer","sourcesContent":["<template>\n  <label class=\"checkbox\">\n    <input\n      type=\"checkbox\"\n      :checked=\"meta.choice.isSelected\"\n      :value=\"meta.choice.value\"\n      v-bind=\"$attrs\"\n      v-on=\"listeners\"\n      @change=\"onChange\"\n    >\n\n    <span\n      class=\"checkbox-text\"\n      v-html=\"$options.filters.formatContent(meta.choice.text)\"\n    />\n  </label>\n</template>\n\n<script>\n\nexport default {\n  props: {\n    meta: {\n      type: Object,\n      required: true,\n    },\n\n    value: {\n      type: String,\n      default: '',\n    },\n  },\n\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        // eslint-disable-next-line no-unused-vars\n        input: event => {},\n      };\n    },\n  },\n\n  methods: {\n    // use onChange instead of @input to prevent MS-Edge issues\n    onChange(event) {\n      this.$emit('input', event.target.checked ? event.target.value : '');\n    },\n  },\n};\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.checkbox {\n  @apply cursor-pointer;\n  @apply block;\n  @apply items-center;\n\n  @screen tablet {\n      @apply inline-flex;\n  }\n\n  &-text {\n    @apply ml-4;\n    @apply text-gray-900;\n    @apply text-xl;\n  }\n}\n\n</style>\n"]}]}