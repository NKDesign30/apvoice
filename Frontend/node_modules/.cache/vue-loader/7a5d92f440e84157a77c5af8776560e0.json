{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/form-renderer/MultipageForm.vue?vue&type=style&index=0&id=a3a8d6ee&lang=scss&scoped=true&","dependencies":[{"path":"/app/src/components/form-renderer/MultipageForm.vue","mtime":1683275992559},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBhc3N3b3JkTWFza3sKCiAgLnN1Y2Nlc3N7CiAgICBjb2xvcjogZ3JlZW47CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKCiAgICAmOmJlZm9yZXsKICAgICAgY29udGVudDogIlwyNzEzIjsKICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgIHdpZHRoOiAyMHB4OwogICAgfQogIH0KCiAgLmZhaWx1cmV7CiAgICBjb2xvcjogcmVkOwogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CgogICAgJjpiZWZvcmV7CiAgICAgIGNvbnRlbnQ6ICJcMjcxNyI7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICB3aWR0aDogMjBweDsKICAgIH0KICB9Cn0KCi52YWxpZGF0ZS1wZ19jdXN0b21lcl9pZCwKLnZhbGlkYXRlLWV4cGVydC1jb2RlIHsKICB3aWR0aDogNDglOwoKICAmLnctZnVsbCB7CiAgICB3aWR0aDogMTAwJTsKICB9Cn0KCi5vci1oZWxwZXIgewogIHdpZHRoOiAzJTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZzogMDsKfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NDBweCkgewogIC52YWxpZGF0ZS1wZ19jdXN0b21lcl9pZCwKICAudmFsaWRhdGUtZXhwZXJ0LWNvZGUsCiAgLm9yLWhlbHBlciB7CiAgICB3aWR0aDogMTAwJTsKICB9Cn0KCi5mYWRlIHsKICAmLWVudGVyLWFjdGl2ZSwKICAmLWxlYXZlLWFjdGl2ZSB7CiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTsKICB9CgogICYtZW50ZXIsCiAgJi1sZWF2ZS10byB7CiAgICBvcGFjaXR5OiAwOwogIH0KfQoK"},{"version":3,"sources":["MultipageForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4VA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MultipageForm.vue","sourceRoot":"src/components/form-renderer","sourcesContent":["<template>\n  <div class=\"multipage-form\">\n    <transition\n      name=\"fade\"\n      mode=\"out-in\"\n    >\n      <div\n        :key=\"getPageId(currentPage)\"\n        class=\"mt-20 flex flex-wrap flex-col tablet:flex-row tablet:items-end\"\n      >\n        <div\n          v-for=\"field in currentPage.fields\"\n          :key=\"field.id\"\n          class=\"px-4\"\n          :class=\"{\n            [getFieldClasses(field)]: true,\n            'hidden': field.type === 'hidden',\n          }\"\n        >\n          <template v-if=\"field.isVisible\">\n            <div class=\"mb-8 relative\">\n              <apo-input-label\n                v-if=\"field.labelPlacement !== 'hidden' && field.label\"\n                :for=\"getFieldId(field)\"\n                class=\"mb-4\"\n                v-html=\"field.label\"\n              />\n\n              <div\n                v-for=\"(input, index) in field.inputs\"\n                :key=\"input.id\"\n              >\n                <apo-input-label\n                  v-if=\"field.subLabelPlacement !== 'hidden' && (input.label || input.customLabel)\"\n                  :for=\"getFieldId(input)\"\n                  class=\"mb-4\"\n                  v-html=\"input.customLabel || input.label\"\n                />\n\n                <component\n                  :is=\"getFormInputName(field)\"\n                  :id=\"getFieldId(input)\"\n                  class=\"mb-4\"\n                  v-bind=\"input\"\n                  :field=\"field\"\n                  :value=\"input.value\"\n                  @input=\"onFieldInput($event, field, input, index)\"\n                  @keyup.enter=\"onEnterKey(field)\"\n                />\n                <div\n                  v-if=\"index === 0 && field.passwordDetails\"\n                >\n                  <div class=\"passwordMask mb-3\">\n                    <div\n                      class=\"passwordLengthMask flex text-gray-700\"\n                      v-text=\"$t('pages.registration.passwordMask.length')\"\n                    />\n                    <div\n                      class=\"passwordNumberMask flex text-gray-700\"\n                      v-text=\"$t('pages.registration.passwordMask.number')\"\n                    />\n                    <div\n                      class=\"passwordUpperMask flex text-gray-700\"\n                      v-text=\"$t('pages.registration.passwordMask.uppercase')\"\n                    />\n                    <div\n                      class=\"passwordLowerMask flex text-gray-700\"\n                      v-text=\"$t('pages.registration.passwordMask.lowercase')\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <small\n                v-if=\"validation.has(field.id)\"\n                class=\"-mt-3 absolute pin-l pin-b text-red-500 text-xs font-bold\"\n                v-text=\"validation.get(field.id)\"\n              />\n            </div>\n          </template>\n        </div>\n\n        <div class=\"my-20 w-full flex flex-col-reverse tablet:flex-row justify-center\">\n          <apo-button\n            v-if=\"currentPage.previousButton\"\n            class=\"w-full tablet:w-auto mr-6 button button--naked button--small shadow-hard text-gray-900\"\n            @click.native=\"onPreviousButtonClick\"\n            v-text=\"currentPage.previousButton.text\"\n          />\n\n          <apo-button\n            v-if=\"currentPage.nextButton\"\n            class=\"w-full tablet:w-auto button button--primary button--small shadow-hard-dark text-white mb-6 tablet:mb-0\"\n            :class=\"{ 'is-busy cursor-wait': isBusy }\"\n            :disabled=\"isBusy\"\n            @click.native=\"onNextButtonClick\"\n          >\n            <apo-spinner\n              v-if=\"isBusy\"\n              class=\"mr-4\"\n              size=\"small\"\n            />\n\n            <span v-text=\"currentPage.nextButton.text\" />\n          </apo-button>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n\nimport { mapActions } from 'vuex';\nimport find from 'lodash/find';\nimport flatten from 'lodash/flatten';\nimport map from 'lodash/map';\nimport get from 'lodash/get';\nimport {\n  SALES_REP_FETCH_BY_EXPERT_CODE,\n} from '@/store/types/action-types';\nimport Checkbox from '@/components/form-renderer/Checkbox.vue';\nimport HiddenInput from '@/components/form-renderer/HiddenInput.vue';\nimport HtmlBlock from '@/components/form-renderer/HtmlBlock.vue';\nimport InputLabel from '@/components/form-renderer/InputLabel.vue';\nimport MultiSelectInput from '@/components/form-renderer/MultiSelectInput.vue';\nimport PharmacySummary from '@/components/form-renderer/PharmacySummary.vue';\nimport RadioButtons from '@/components/form-renderer/RadioButtons.vue';\nimport RegistrationInformation from '@/components/form-renderer/RegistrationInformation.vue';\nimport SelectInput from '@/components/form-renderer/SelectInput.vue';\nimport Textarea from '@/components/form-renderer/Textarea.vue';\nimport TextInput from '@/components/form-renderer/TextInput.vue';\nimport Captcha from '@/components/form-renderer/Captcha.vue';\nimport FormService from '@/services/api/FormService';\nimport FormValidation from '@/services/form/FormValidation';\nimport PharmaciesFuzzySearch from '@/components/form-renderer/PharmaciesFuzzySearch.vue';\n\nexport default {\n  components: {\n    'apo-checkbox': Checkbox,\n    'apo-hidden-input': HiddenInput,\n    'apo-html-block': HtmlBlock,\n    'apo-input-label': InputLabel,\n    'apo-multi-select-input': MultiSelectInput,\n    'apo-pharmacy-summary': PharmacySummary,\n    'apo-radio-buttons': RadioButtons,\n    'apo-registration-information': RegistrationInformation,\n    'apo-select-input': SelectInput,\n    'apo-textarea': Textarea,\n    'apo-text-input': TextInput,\n    'apo-captcha': Captcha,\n    'apo-pharmacies-fuzzy-search': PharmaciesFuzzySearch,\n  },\n\n  props: {\n    pages: {\n      type: Array,\n      required: true,\n    },\n\n    submissionUrl: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      currentPageNumber: '1',\n      validation: new FormValidation(),\n      isBusy: false,\n    };\n  },\n\n  computed: {\n    currentPage() {\n      return find(\n        this.pages, page => parseInt(page.pageNumber, 10) === parseInt(this.currentPageNumber, 10),\n      );\n    },\n\n    totalPages() {\n      return this.pages.length;\n    },\n  },\n\n  methods: {\n    ...mapActions([SALES_REP_FETCH_BY_EXPERT_CODE]),\n\n    checkPasswordMask(event) {\n      // Test for length\n      if (event.match(/^[a-zA-Z\\d\\W_][^\\s]{8,}$/)) {\n        document.querySelector('.passwordLengthMask').classList.remove('failure');\n        document.querySelector('.passwordLengthMask').classList.add('success');\n      } else {\n        document.querySelector('.passwordLengthMask').classList.remove('success');\n        document.querySelector('.passwordLengthMask').classList.add('failure');\n      }\n\n      // test for number\n      if (event.match(/^(?=.*\\d)/)) {\n        document.querySelector('.passwordNumberMask').classList.remove('failure');\n        document.querySelector('.passwordNumberMask').classList.add('success');\n      } else {\n        document.querySelector('.passwordNumberMask').classList.remove('success');\n        document.querySelector('.passwordNumberMask').classList.add('failure');\n      }\n\n      // test for uppercase\n      if (event.match(/^(?=.*[A-Z])/)) {\n        document.querySelector('.passwordUpperMask').classList.remove('failure');\n        document.querySelector('.passwordUpperMask').classList.add('success');\n      } else {\n        document.querySelector('.passwordUpperMask').classList.remove('success');\n        document.querySelector('.passwordUpperMask').classList.add('failure');\n      }\n\n      // test for lowercase\n      if (event.match(/^(?=.*[a-z])/)) {\n        document.querySelector('.passwordLowerMask').classList.remove('failure');\n        document.querySelector('.passwordLowerMask').classList.add('success');\n      } else {\n        document.querySelector('.passwordLowerMask').classList.remove('success');\n        document.querySelector('.passwordLowerMask').classList.add('failure');\n      }\n    },\n\n    getPageId({ pageNumber }) {\n      return `page-${pageNumber}`;\n    },\n\n    getFieldId({ id }) {\n      return `form-field-${id.replace(/\\./g, '-')}`;\n    },\n\n    isCurrentPage({ pageNumber }) {\n      return parseInt(pageNumber, 10) === parseInt(this.currentPageNumber, 10);\n    },\n\n    getFormInputName(field) {\n      return FormService.getFormComponent(field);\n    },\n\n    getFieldClasses(field) {\n      let classes = 'w-full';\n\n      // \"Interpret\" the fields custom classes\n      // see: https://www.gravityforms.com/css-ready-classes/\n      if (field.cssClass.match(/gf_.+_half/)) {\n        classes = 'tablet:w-1/2';\n      } else if (field.cssClass.match(/gf_.+_third/)) {\n        classes = 'tablet:w-1/3';\n      }\n\n      // eslint-disable-next-line prefer-template\n      return classes + ' ' + field.cssClass;\n    },\n\n    getPageFields(pageNumber) {\n      return flatten(map(this.pages.filter(page => parseInt(page.pageNumber, 10) <= parseInt(pageNumber, 10)), 'fields'));\n    },\n\n    onFieldInput(event, field, input, index) {\n      if (index === 0 && field.passwordDetails) this.checkPasswordMask(event, field, input);\n      // eslint-disable-next-line no-param-reassign\n      input.value = event;\n      this.validation.reset(input.id);\n    },\n\n    onPreviousButtonClick() {\n      this.currentPageNumber = String(parseInt(this.currentPageNumber, 10) - 1);\n    },\n\n    onEnterKey(field) {\n      if (this.getFormInputName(field) === 'apo-text-input') {\n        this.onNextButtonClick();\n      }\n    },\n\n    onNextButtonClick() {\n      this.isBusy = true;\n\n      const currentPageNumber = parseInt(this.currentPageNumber, 10);\n      const pagePayload = {\n        source_page: currentPageNumber,\n        target_page: currentPageNumber < this.totalPages ? currentPageNumber + 1 : 0,\n      };\n\n      this.getPageFields(currentPageNumber).forEach(field => {\n        field.inputs.forEach(input => {\n          if (field.type === 'captcha') {\n            pagePayload['g-recaptcha-response'] = document.querySelector('.g-recaptcha-response').value;\n            return;\n          }\n\n          if ((field.isDisplayOnly && field.type !== 'password') || (field.type === 'checkbox' && input.value === '')) {\n            return;\n          }\n\n          pagePayload[`input_${input.id.replace(/\\./g, '_')}`] = input.value;\n        });\n      });\n\n      this.preloadSalesRepByExpertCodeIfNecessary(currentPageNumber);\n\n      FormService.submit(this.submissionUrl, pagePayload)\n        .then(({\n          isValid,\n          pageNumber,\n          confirmationType,\n          confirmationMessage,\n          confirmationRedirect,\n        }) => {\n          if (isValid) {\n            if (pageNumber === 0) {\n              this.$emit('submitted', { confirmationType, confirmationMessage, confirmationRedirect });\n            } else {\n              this.currentPageNumber = pageNumber;\n              window.scrollTo(0, 0);\n            }\n          }\n        })\n        .catch(error => {\n          if (error.validationMessages) {\n            this.validation.fill(error);\n          } else {\n            console.log('unexpected error', error);\n          }\n        })\n        .finally(() => {\n          this.isBusy = false;\n        });\n    },\n\n    preloadSalesRepByExpertCodeIfNecessary(currentPageNumber) {\n      if (currentPageNumber !== 1) return;\n      const field = this.getPageFields(currentPageNumber)\n        .find(f => f.cssClass.match(/validate-expert-code/));\n      const expertCode = get(field, 'inputs[0].value', '');\n      this[SALES_REP_FETCH_BY_EXPERT_CODE](expertCode);\n    },\n  },\n};\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.passwordMask{\n\n  .success{\n    color: green;\n    display: flex;\n    align-items: center;\n\n    &:before{\n      content: \"\\2713\";\n      display: block;\n      width: 20px;\n    }\n  }\n\n  .failure{\n    color: red;\n    display: flex;\n    align-items: center;\n\n    &:before{\n      content: \"\\2717\";\n      display: block;\n      width: 20px;\n    }\n  }\n}\n\n.validate-pg_customer_id,\n.validate-expert-code {\n  width: 48%;\n\n  &.w-full {\n    width: 100%;\n  }\n}\n\n.or-helper {\n  width: 3%;\n  text-align: center;\n  padding: 0;\n}\n\n@media only screen and (max-width: 640px) {\n  .validate-pg_customer_id,\n  .validate-expert-code,\n  .or-helper {\n    width: 100%;\n  }\n}\n\n.fade {\n  &-enter-active,\n  &-leave-active {\n    transition: opacity 0.3s ease;\n  }\n\n  &-enter,\n  &-leave-to {\n    opacity: 0;\n  }\n}\n\n</style>\n"]}]}