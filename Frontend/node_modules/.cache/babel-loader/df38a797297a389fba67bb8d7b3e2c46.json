{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/ui/CountUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/ui/CountUp.vue","mtime":1683275992568},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5pcy1uYW4iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICIvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ291bnRVcCBmcm9tICd2dWUtY291bnR1cC12Mic7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgICd2dWUtY291bnQtdXAnOiBDb3VudFVwCiAgfSwKICBwcm9wczogewogICAgZnJvbTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICB0bzogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgd2hlbkluVmlld3BvcnQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0luVmlld3BvcnQ6ICF0aGlzLndoZW5JblZpZXdwb3J0CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWydsYW5ndWFnZSddKSwgewogICAgYXR0cnM6IGZ1bmN0aW9uIGF0dHJzKCkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgdGhpcy4kYXR0cnMsIHsKICAgICAgICBzdGFydFZhbDogdGhpcy5mcm9tLAogICAgICAgIGVuZFZhbDogdGhpcy50bywKICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICBzZXBhcmF0b3I6ICcnLAogICAgICAgICAgZGVjaW1hbDogdGhpcy5kZWNpbWFsU2VwYXJhdG9yLAogICAgICAgICAgZGVjaW1hbFBsYWNlczogdGhpcy5kZWNpbWFsUGxhY2VzCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICB0aG91c2FuZFNlcGFyYXRvcjogZnVuY3Rpb24gdGhvdXNhbmRTZXBhcmF0b3IoKSB7CiAgICAgIHJldHVybiBJbnRsLk51bWJlckZvcm1hdCh0aGlzLmdldExvY2FsZUlkZW50aWZpZXIoKSkuZm9ybWF0VG9QYXJ0cygxMDAwKS5maW5kKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIHR5cGUgPSBfcmVmLnR5cGU7CiAgICAgICAgcmV0dXJuIHR5cGUgPT09ICdncm91cCc7CiAgICAgIH0pLnZhbHVlOwogICAgfSwKICAgIGRlY2ltYWxTZXBhcmF0b3I6IGZ1bmN0aW9uIGRlY2ltYWxTZXBhcmF0b3IoKSB7CiAgICAgIHJldHVybiBJbnRsLk51bWJlckZvcm1hdCh0aGlzLmdldExvY2FsZUlkZW50aWZpZXIoKSkuZm9ybWF0VG9QYXJ0cygxLjEpLmZpbmQoZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgICAgdmFyIHR5cGUgPSBfcmVmMi50eXBlOwogICAgICAgIHJldHVybiB0eXBlID09PSAnZGVjaW1hbCc7CiAgICAgIH0pLnZhbHVlOwogICAgfSwKICAgIGRlY2ltYWxQbGFjZXM6IGZ1bmN0aW9uIGRlY2ltYWxQbGFjZXMoKSB7CiAgICAgIGlmICh0aGlzLmhhc0RlY2ltYWxQbGFjZXMoKSkgewogICAgICAgIHJldHVybiB0aGlzLnRvLnRvU3RyaW5nKCkuc3BsaXQoJy4nKVsxXS5sZW5ndGg7CiAgICAgIH0KCiAgICAgIHJldHVybiAwOwogICAgfQogIH0pLAogIG1ldGhvZHM6IHsKICAgIGdldExvY2FsZUlkZW50aWZpZXI6IGZ1bmN0aW9uIGdldExvY2FsZUlkZW50aWZpZXIoKSB7CiAgICAgIGlmICh0aGlzLmxhbmd1YWdlID09PSAnZW4nKSB7CiAgICAgICAgcmV0dXJuICdlbi1VUyc7CiAgICAgIH0KCiAgICAgIHJldHVybiAiIi5jb25jYXQodGhpcy5sYW5ndWFnZSwgIi0iKS5jb25jYXQodGhpcy5sYW5ndWFnZS50b0xvd2VyQ2FzZSgpKTsKICAgIH0sCiAgICBvYnNlcnZlV2hlbkluVmlld3BvcnQ6IGZ1bmN0aW9uIG9ic2VydmVXaGVuSW5WaWV3cG9ydCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihmdW5jdGlvbiAoX3JlZjMpIHsKICAgICAgICB2YXIgX3JlZjQgPSBfc2xpY2VkVG9BcnJheShfcmVmMywgMSksCiAgICAgICAgICAgIGVudHJ5ID0gX3JlZjRbMF07CgogICAgICAgIGlmIChlbnRyeS5pc0ludGVyc2VjdGluZykgewogICAgICAgICAgX3RoaXMuaXNJblZpZXdwb3J0ID0gdHJ1ZTsKICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICBvYnNlcnZlci5vYnNlcnZlKHRoaXMuJGVsKTsKICAgICAgdGhpcy4kb25jZSgnaG9vazpkZXN0cm95ZWQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKG9ic2VydmVyICYmIG9ic2VydmVyLmRpc2Nvbm5lY3QpIHsKICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhc0RlY2ltYWxQbGFjZXM6IGZ1bmN0aW9uIGhhc0RlY2ltYWxQbGFjZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLnRvICUgMSAhPT0gMCAmJiAhTnVtYmVyLmlzTmFOKHRoaXMudG8pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLndoZW5JblZpZXdwb3J0KSB7CiAgICAgIHRoaXMub2JzZXJ2ZVdoZW5JblZpZXdwb3J0KCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["CountUp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <vue-count-up\n    v-if=\"isInViewport\"\n    v-bind=\"attrs\"\n    v-on=\"$listeners\"\n  />\n  <span\n    v-else\n    v-text=\"from\"\n  />\n</template>\n\n<script>\n\nimport CountUp from 'vue-countup-v2';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {\n    'vue-count-up': CountUp,\n  },\n\n  props: {\n    from: {\n      type: Number,\n      default: 0,\n    },\n\n    to: {\n      type: Number,\n      required: true,\n    },\n\n    whenInViewport: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    return {\n      isInViewport: !this.whenInViewport,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['language']),\n\n    attrs() {\n      return {\n        ...this.$attrs,\n        startVal: this.from,\n        endVal: this.to,\n        options: {\n          separator: '',\n          decimal: this.decimalSeparator,\n          decimalPlaces: this.decimalPlaces,\n        },\n      };\n    },\n\n    thousandSeparator() {\n      return Intl.NumberFormat(this.getLocaleIdentifier())\n        .formatToParts(1000)\n        .find(({ type }) => type === 'group')\n        .value;\n    },\n\n    decimalSeparator() {\n      return Intl.NumberFormat(this.getLocaleIdentifier())\n        .formatToParts(1.1)\n        .find(({ type }) => type === 'decimal')\n        .value;\n    },\n\n    decimalPlaces() {\n      if (this.hasDecimalPlaces()) {\n        return this.to.toString().split('.')[1].length;\n      }\n      return 0;\n    },\n  },\n\n  methods: {\n    getLocaleIdentifier() {\n      if (this.language === 'en') {\n        return 'en-US';\n      }\n\n      return `${this.language}-${this.language.toLowerCase()}`;\n    },\n\n    observeWhenInViewport() {\n      const observer = new IntersectionObserver(([entry]) => {\n        if (entry.isIntersecting) {\n          this.isInViewport = true;\n\n          observer.disconnect();\n        }\n      });\n\n      observer.observe(this.$el);\n\n      this.$once('hook:destroyed', () => {\n        if (observer && observer.disconnect) {\n          observer.disconnect();\n        }\n      });\n    },\n\n    hasDecimalPlaces() {\n      return this.to % 1 !== 0 && !Number.isNaN(this.to);\n    },\n  },\n\n  mounted() {\n    if (this.whenInViewport) {\n      this.observeWhenInViewport();\n    }\n  },\n};\n\n</script>\n"],"sourceRoot":"src/components/ui"}]}