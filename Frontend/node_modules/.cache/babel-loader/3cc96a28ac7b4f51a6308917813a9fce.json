{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/services/form/RestErrors.js","dependencies":[{"path":"/app/src/services/form/RestErrors.js","mtime":1683275992575},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmltcG9ydCBjbG9uZURlZXAgZnJvbSAnbG9kYXNoL2Nsb25lRGVlcCc7Cgp2YXIgUmVzdEVycm9ycyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIC8qKgogICAqIENvbnN0cnVjdG9yCiAgICovCiAgZnVuY3Rpb24gUmVzdEVycm9ycygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZXN0RXJyb3JzKTsKCiAgICB0aGlzLmVycm9ycyA9IHt9OwogIH0KICAvKioKICAgKiBHZXQgYWxsIGVycm9ycy4KICAgKgogICAqIEByZXR1cm5zIHtvYmplY3R9CiAgICovCgoKICBfY3JlYXRlQ2xhc3MoUmVzdEVycm9ycywgW3sKICAgIGtleTogImFsbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWxsKCkgewogICAgICByZXR1cm4gdGhpcy5lcnJvcnM7CiAgICB9CiAgICAvKioKICAgICAqIERldGVybWluZSB3aGV0aGVyIHRoZXJlIGFyZSBhbnkgZXJyb3JzIGZvciB0aGUgZ2l2ZW4gZmllbGQuCiAgICAgKgogICAgICogQHBhcmFtICB7c3RyaW5nfSAgZmllbGQKICAgICAqIEByZXR1cm5zIHtib29sZWFufQogICAgICovCgogIH0sIHsKICAgIGtleTogImhhcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzKGZpZWxkKSB7CiAgICAgIHJldHVybiAhIXRoaXMuZXJyb3JzW2ZpZWxkXTsKICAgIH0KICAgIC8qKgogICAgICogR2V0IGFsbCBlcnJvcnMgZm9yIHRoZSBnaXZlbiBmaWVsZC4KICAgICAqCiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9ICBmaWVsZAogICAgICogQHJldHVybnMge2FycmF5fQogICAgICovCgogIH0sIHsKICAgIGtleTogImdldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0KGZpZWxkKSB7CiAgICAgIGlmICghdGhpcy5oYXMoZmllbGQpKSByZXR1cm4gW107CiAgICAgIHJldHVybiB0aGlzLmVycm9yc1tmaWVsZF07CiAgICB9CiAgICAvKioKICAgICAqIENsZWFyIHRoZSBlcnJvcnMgZm9yIHRoZSBnaXZlbiBmaWVsZCBvciBhbGwuCiAgICAgKgogICAgICogQHBhcmFtICB7c3RyaW5nfSAgZmllbGQKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJjbGVhciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXIoKSB7CiAgICAgIHZhciBmaWVsZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogbnVsbDsKCiAgICAgIGlmIChmaWVsZCA9PT0gbnVsbCkgewogICAgICAgIHRoaXMuZXJyb3JzID0ge307CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoIXRoaXMuaGFzKGZpZWxkKSkgcmV0dXJuOwogICAgICB2YXIgZXJyb3JzID0gY2xvbmVEZWVwKHRoaXMuZXJyb3JzKTsKICAgICAgZGVsZXRlIGVycm9yc1tmaWVsZF07CiAgICAgIHRoaXMuZXJyb3JzID0gX29iamVjdFNwcmVhZCh7fSwgZXJyb3JzKTsKICAgIH0KICAgIC8qKgogICAgICogRGV0ZXJtaW5lIHdoZXRoZXIgdGhlcmUgYXJlIGFueSBlcnJvcnMuCiAgICAgKgogICAgICogQHJldHVybnMge2Jvb2xlYW59CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiYW55IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhbnkoKSB7CiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmVycm9ycykubGVuZ3RoID4gMDsKICAgIH0KICAgIC8qKgogICAgICogQXNzaWduIHRoZSBnaXZlbiBlcnJvcnMuCiAgICAgKgogICAgICogQHBhcmFtICB7T2JqZWN0fSAgZXJyb3JzCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiYXNzaWduIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhc3NpZ24oZXJyb3JzKSB7CiAgICAgIHRoaXMuZXJyb3JzID0gX29iamVjdFNwcmVhZCh7fSwgZXJyb3JzKTsKICAgIH0KICAgIC8qKgogICAgICogQWRkIGEgc2luZ2xlIGVycm9yLgogICAgICoKICAgICAqIEBwYXJhbSAge1N0cmluZ30gIGZpZWxkCiAgICAgKiBAcGFyYW0gIHtTdHJpbmd9ICBlcnJvcgogICAgICovCgogIH0sIHsKICAgIGtleTogImFkZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkKGZpZWxkLCBlcnJvcikgewogICAgICBpZiAoIXRoaXMuaGFzKGZpZWxkKSkgewogICAgICAgIHRoaXMuZXJyb3JzID0gX29iamVjdFNwcmVhZCh7fSwgdGhpcy5lcnJvcnMsIF9kZWZpbmVQcm9wZXJ0eSh7fSwgZmllbGQsIFtlcnJvcl0pKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmVycm9yc1tmaWVsZF0ucHVzaChlcnJvcik7CiAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogR2V0IHRoZSBjbGFzcyBiaW5kaW5ncyBmb3IgdGhlIGdpdmVuIGZpZWxkLgogICAgICoKICAgICAqIEBwYXJhbSAge3N0cmluZ30gIGZpZWxkCiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9ICB0eXBlCiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fQogICAgICovCgogIH0sIHsKICAgIGtleTogImNsYXNzZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNsYXNzZXMoZmllbGQpIHsKICAgICAgdmFyIHR5cGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICdvYmplY3QnOwogICAgICB2YXIgY2xhc3NlcyA9IHsKICAgICAgICAnZm9ybS1pbnB1dC0taGFzLWVycm9yJzogdGhpcy5oYXMoZmllbGQpCiAgICAgIH07CiAgICAgIHZhciBjbGFzc2VzQXNBcnJheSA9IE9iamVjdC5rZXlzKGNsYXNzZXMpLmZpbHRlcihmdW5jdGlvbiAoY2xhc3NOYW1lKSB7CiAgICAgICAgcmV0dXJuICEhY2xhc3Nlc1tjbGFzc05hbWVdOwogICAgICB9KTsKCiAgICAgIGlmICh0eXBlID09PSAnb2JqZWN0JykgewogICAgICAgIHJldHVybiBjbGFzc2VzOwogICAgICB9CgogICAgICBpZiAodHlwZSA9PT0gJ2FycmF5JykgewogICAgICAgIHJldHVybiBjbGFzc2VzQXNBcnJheTsKICAgICAgfQoKICAgICAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgcmV0dXJuIGNsYXNzZXNBc0FycmF5LmpvaW4oJyAnKTsKICAgICAgfQoKICAgICAgcmV0dXJuICcnOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFJlc3RFcnJvcnM7Cn0oKTsKCmV4cG9ydCB7IFJlc3RFcnJvcnMgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/app/src/services/form/RestErrors.js"],"names":["cloneDeep","RestErrors","errors","field","has","Object","keys","length","error","push","type","classes","classesAsArray","filter","className","join"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,kBAAtB;;IAEqBC,U;;;AACnB;;;AAGA,wBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACD;AAED;;;;;;;;;0BAKM;AACJ,aAAO,KAAKA,MAAZ;AACD;AAED;;;;;;;;;wBAMIC,K,EAAO;AACT,aAAO,CAAC,CAAC,KAAKD,MAAL,CAAYC,KAAZ,CAAT;AACD;AAED;;;;;;;;;wBAMIA,K,EAAO;AACT,UAAI,CAAC,KAAKC,GAAL,CAASD,KAAT,CAAL,EAAsB,OAAO,EAAP;AAEtB,aAAO,KAAKD,MAAL,CAAYC,KAAZ,CAAP;AACD;AAED;;;;;;;;4BAKoB;AAAA,UAAdA,KAAc,uEAAN,IAAM;;AAClB,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAKD,MAAL,GAAc,EAAd;AAEA;AACD;;AAED,UAAI,CAAC,KAAKE,GAAL,CAASD,KAAT,CAAL,EAAsB;AAEtB,UAAMD,MAAM,GAAGF,SAAS,CAAC,KAAKE,MAAN,CAAxB;AAEA,aAAOA,MAAM,CAACC,KAAD,CAAb;AAEA,WAAKD,MAAL,qBAAmBA,MAAnB;AACD;AAED;;;;;;;;0BAKM;AACJ,aAAOG,MAAM,CAACC,IAAP,CAAY,KAAKJ,MAAjB,EAAyBK,MAAzB,GAAkC,CAAzC;AACD;AAED;;;;;;;;2BAKOL,M,EAAQ;AACb,WAAKA,MAAL,qBAAmBA,MAAnB;AACD;AAED;;;;;;;;;wBAMIC,K,EAAOK,K,EAAO;AAChB,UAAI,CAAC,KAAKJ,GAAL,CAASD,KAAT,CAAL,EAAsB;AACpB,aAAKD,MAAL,qBACK,KAAKA,MADV,sBAEGC,KAFH,EAEW,CAACK,KAAD,CAFX;AAID,OALD,MAKO;AACL,aAAKN,MAAL,CAAYC,KAAZ,EAAmBM,IAAnB,CAAwBD,KAAxB;AACD;AACF;AAED;;;;;;;;;;4BAOQL,K,EAAwB;AAAA,UAAjBO,IAAiB,uEAAV,QAAU;AAC9B,UAAMC,OAAO,GAAG;AACd,iCAAyB,KAAKP,GAAL,CAASD,KAAT;AADX,OAAhB;AAIA,UAAMS,cAAc,GAAGP,MAAM,CAACC,IAAP,CAAYK,OAAZ,EAAqBE,MAArB,CAA4B,UAAAC,SAAS;AAAA,eAAI,CAAC,CAACH,OAAO,CAACG,SAAD,CAAb;AAAA,OAArC,CAAvB;;AAEA,UAAIJ,IAAI,KAAK,QAAb,EAAuB;AACrB,eAAOC,OAAP;AACD;;AAED,UAAID,IAAI,KAAK,OAAb,EAAsB;AACpB,eAAOE,cAAP;AACD;;AAED,UAAIF,IAAI,KAAK,QAAb,EAAuB;AACrB,eAAOE,cAAc,CAACG,IAAf,CAAoB,GAApB,CAAP;AACD;;AAED,aAAO,EAAP;AACD;;;;;;SA1HkBd,U","sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\n\nexport default class RestErrors {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.errors = {};\n  }\n\n  /**\n   * Get all errors.\n   *\n   * @returns {object}\n   */\n  all() {\n    return this.errors;\n  }\n\n  /**\n   * Determine whether there are any errors for the given field.\n   *\n   * @param  {string}  field\n   * @returns {boolean}\n   */\n  has(field) {\n    return !!this.errors[field];\n  }\n\n  /**\n   * Get all errors for the given field.\n   *\n   * @param  {string}  field\n   * @returns {array}\n   */\n  get(field) {\n    if (!this.has(field)) return [];\n\n    return this.errors[field];\n  }\n\n  /**\n   * Clear the errors for the given field or all.\n   *\n   * @param  {string}  field\n   */\n  clear(field = null) {\n    if (field === null) {\n      this.errors = {};\n\n      return;\n    }\n\n    if (!this.has(field)) return;\n\n    const errors = cloneDeep(this.errors);\n\n    delete errors[field];\n\n    this.errors = { ...errors };\n  }\n\n  /**\n   * Determine whether there are any errors.\n   *\n   * @returns {boolean}\n   */\n  any() {\n    return Object.keys(this.errors).length > 0;\n  }\n\n  /**\n   * Assign the given errors.\n   *\n   * @param  {Object}  errors\n   */\n  assign(errors) {\n    this.errors = { ...errors };\n  }\n\n  /**\n   * Add a single error.\n   *\n   * @param  {String}  field\n   * @param  {String}  error\n   */\n  add(field, error) {\n    if (!this.has(field)) {\n      this.errors = {\n        ...this.errors,\n        [field]: [error],\n      };\n    } else {\n      this.errors[field].push(error);\n    }\n  }\n\n  /**\n   * Get the class bindings for the given field.\n   *\n   * @param  {string}  field\n   * @param  {string}  type\n   * @returns {object}\n   */\n  classes(field, type = 'object') {\n    const classes = {\n      'form-input--has-error': this.has(field),\n    };\n\n    const classesAsArray = Object.keys(classes).filter(className => !!classes[className]);\n\n    if (type === 'object') {\n      return classes;\n    }\n\n    if (type === 'array') {\n      return classesAsArray;\n    }\n\n    if (type === 'string') {\n      return classesAsArray.join(' ');\n    }\n\n    return '';\n  }\n}\n"]}]}