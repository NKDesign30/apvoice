{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/views/Surveys.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/views/Surveys.vue","mtime":1690463943348},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBBY3Rpb25zLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBDbXNDb250ZW50UmVuZGVyZXIgZnJvbSAnQC9jb21wb25lbnRzL2Ntcy9DbXNDb250ZW50UmVuZGVyZXIudnVlJzsKaW1wb3J0IFN1cnZleSBmcm9tICdAL2NvbXBvbmVudHMvc3VydmV5L1N1cnZleS52dWUnOwppbXBvcnQgQXZhaWxhYmxlU3VydmV5cyBmcm9tICdAL2NvbXBvbmVudHMvc3VydmV5L292ZXJ2aWV3L0F2YWlsYWJsZVN1cnZleXMnOwppbXBvcnQgdGhlbWVTZXR0aW5ncyBmcm9tICdAL21peGlucy90aGVtZS1zZXR0aW5ncyc7CmltcG9ydCB7IGNhbm9uaWNhbFRhZyB9IGZyb20gJ0Avc2VydmljZXMvdXRpbHMnOwppbXBvcnQgeyBTVVJWRVlTX0ZFVENIX0FMTCB9IGZyb20gJ0Avc3RvcmUvdHlwZXMvYWN0aW9uLXR5cGVzJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgICdhcG8tY21zLWNvbnRlbnQtcmVuZGVyZXInOiBDbXNDb250ZW50UmVuZGVyZXIsCiAgICAnYXBvLXN1cnZleSc6IFN1cnZleSwKICAgICdhdmFpbGFibGUtc3VydmV5cyc6IEF2YWlsYWJsZVN1cnZleXMKICB9LAogIG1peGluczogW3RoZW1lU2V0dGluZ3MoJ3N1cnZleScpXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNPdmVydmlldzogdHJ1ZSwKICAgICAgc2hvd0FjaFRvb2x0aXA6IGZhbHNlCiAgICB9OwogIH0sCiAgaGVhZDogZnVuY3Rpb24gaGVhZCgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpdGxlOiB7CiAgICAgICAgaW5uZXI6IHRoaXMuJHQoJ3BhZ2VzLnN1cnZleXMubWV0YS50aXRsZScpCiAgICAgIH0sCiAgICAgIGxpbms6IFtjYW5vbmljYWxUYWcodGhpcy4kcm91dGUpXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsnc3VydmV5QnlJZCddKSwge30sIG1hcEdldHRlcnMoWyd1c2VyJ10pLCB7CiAgICBwYWdlRGF0YTogZnVuY3Rpb24gcGFnZURhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucGFnZXMucGFnZUNvbnRlbnQuZmlsdGVyKGZ1bmN0aW9uIChwYWdlKSB7CiAgICAgICAgcmV0dXJuIHBhZ2Uuc2x1ZyA9PT0gX3RoaXMuJHJvdXRlLnBhdGgucmVwbGFjZSgvXlwvfFwvJC9nLCAnJyk7CiAgICAgIH0pLmxlbmd0aCA+IDAgPyB0aGlzLiRzdG9yZS5zdGF0ZS5wYWdlcy5wYWdlQ29udGVudC5maWx0ZXIoZnVuY3Rpb24gKHBhZ2UpIHsKICAgICAgICByZXR1cm4gcGFnZS5zbHVnID09PSBfdGhpcy4kcm91dGUucGF0aC5yZXBsYWNlKC9eXC98XC8kL2csICcnKTsKICAgICAgfSlbMF0gOiBudWxsOwogICAgfSwKICAgIGNvbnRlbnQ6IGZ1bmN0aW9uIGNvbnRlbnQoKSB7CiAgICAgIGlmICh0aGlzLnBhZ2VEYXRhKSB7CiAgICAgICAgdmFyIF90aGlzJHBhZ2VEYXRhJGFjZiA9IHRoaXMucGFnZURhdGEuYWNmLAogICAgICAgICAgICBwYXNzd29yZCA9IF90aGlzJHBhZ2VEYXRhJGFjZi5wYXNzd29yZCwKICAgICAgICAgICAgbWluaW11bV9oZWlnaHQgPSBfdGhpcyRwYWdlRGF0YSRhY2YubWluaW11bV9oZWlnaHQsCiAgICAgICAgICAgIHNsaWRlcyA9IF90aGlzJHBhZ2VEYXRhJGFjZi5zbGlkZXMsCiAgICAgICAgICAgIHB1YmxpY19yZXNvdXJjZSA9IF90aGlzJHBhZ2VEYXRhJGFjZi5wdWJsaWNfcmVzb3VyY2UsCiAgICAgICAgICAgIGNvbnRlbnRfcG9zaXRpb24gPSBfdGhpcyRwYWdlRGF0YSRhY2YuY29udGVudF9wb3NpdGlvbiwKICAgICAgICAgICAgZmlsdGVyZWQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3RoaXMkcGFnZURhdGEkYWNmLCBbInBhc3N3b3JkIiwgIm1pbmltdW1faGVpZ2h0IiwgInNsaWRlcyIsICJwdWJsaWNfcmVzb3VyY2UiLCAiY29udGVudF9wb3NpdGlvbiJdKTsKICAgICAgICAvKiBlc2xpbnQtZW5hYmxlICovCgoKICAgICAgICByZXR1cm4gZmlsdGVyZWQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgIGNvbnRlbnRQb3NpdGlvbjogZnVuY3Rpb24gY29udGVudFBvc2l0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5wYWdlRGF0YSA/IHRoaXMucGFnZURhdGEuYWNmLmNvbnRlbnRfcG9zaXRpb24gOiBudWxsOwogICAgfSwKICAgIHN1cnZleTogZnVuY3Rpb24gc3VydmV5KCkgewogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLmlkKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc3VydmV5QnlJZCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCiAgICBzdXJ2ZXlzVGl0bGVUZXh0OiBmdW5jdGlvbiBzdXJ2ZXlzVGl0bGVUZXh0KCkgewogICAgICByZXR1cm4gdGhpcy4kdCgnc3VydmV5cy5hdmFpbGFibGVfdGl0bGUnKTsKICAgIH0KICB9KSwKICB3YXRjaDogewogICAgJHJvdXRlOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihyb3V0ZSkgewogICAgICAgIGlmIChyb3V0ZS5wYXJhbXMuaWQpIHsKICAgICAgICAgIHRoaXMuaXNPdmVydmlldyA9IGZhbHNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmlzT3ZlcnZpZXcgPSB0cnVlOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7fSwgbWFwQWN0aW9ucyhbU1VSVkVZU19GRVRDSF9BTExdKSksCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpIHsKICAgICAgdGhpc1tTVVJWRVlTX0ZFVENIX0FMTF0oKS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgcmV0cmlldmluZyB0aGUgc3VydmV5cycsIGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Surveys.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <apo-restrict-content-wrapper>\n    <div v-if=\"isOverview\">\n      <available-surveys\n        :show-header-section=\"true\"\n        :surveys-title-text=\"surveysTitleText\"\n      />\n    </div>\n    <template v-else>\n      <apo-survey\n        v-if=\"survey\"\n        :survey=\"survey\"\n      />\n    </template>\n  </apo-restrict-content-wrapper>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nimport CmsContentRenderer from '@/components/cms/CmsContentRenderer.vue';\nimport Survey from '@/components/survey/Survey.vue';\nimport AvailableSurveys from '@/components/survey/overview/AvailableSurveys';\nimport themeSettings from '@/mixins/theme-settings';\nimport { canonicalTag } from '@/services/utils';\nimport { SURVEYS_FETCH_ALL } from '@/store/types/action-types';\n\nexport default {\n  components: {\n    'apo-cms-content-renderer': CmsContentRenderer,\n    'apo-survey': Survey,\n    'available-surveys': AvailableSurveys,\n  },\n\n  mixins: [themeSettings('survey')],\n\n  data() {\n    return {\n      isOverview: true,\n      showAchTooltip: false,\n    };\n  },\n\n  head() {\n    return {\n      title: {\n        inner: this.$t('pages.surveys.meta.title'),\n      },\n      link: [canonicalTag(this.$route)],\n    };\n  },\n\n  computed: {\n    ...mapGetters(['surveyById']),\n    ...mapGetters(['user']),\n\n    pageData() {\n      return this.$store.state.pages.pageContent.filter(\n        page => page.slug === this.$route.path.replace(/^\\/|\\/$/g, ''),\n      ).length > 0\n        ? this.$store.state.pages.pageContent.filter(\n          page => page.slug === this.$route.path.replace(/^\\/|\\/$/g, ''),\n        )[0]\n        : null;\n    },\n    content() {\n      if (this.pageData) {\n        const {\n          /* eslint-disable */\n          password,\n          minimum_height,\n          slides,\n          public_resource,\n          content_position,\n          ...filtered\n        } = this.pageData.acf;\n        /* eslint-enable */\n        return filtered;\n      }\n\n      return null;\n    },\n\n    contentPosition() {\n      return this.pageData ? this.pageData.acf.content_position : null;\n    },\n\n    survey() {\n      if (this.$route.params.id) {\n        return this.surveyById(this.$route.params.id);\n      }\n      return null;\n    },\n\n    surveysTitleText() {\n      return this.$t('surveys.available_title');\n    },\n  },\n\n  watch: {\n    $route: {\n      immediate: true,\n      handler(route) {\n        if (route.params.id) {\n          this.isOverview = false;\n        } else {\n          this.isOverview = true;\n        }\n      },\n    },\n  },\n  methods: {\n    ...mapActions([SURVEYS_FETCH_ALL]),\n  },\n  created() {\n    if (this.$route.params.id) {\n      this[SURVEYS_FETCH_ALL]().catch(error => {\n        console.log('error retrieving the surveys', error);\n      });\n    }\n  },\n};\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/views"}]}