{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/store/modules/forms.js","dependencies":[{"path":"/app/src/store/modules/forms.js","mtime":1683275992577},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBGb3JtU2VydmljZSBmcm9tICdAL3NlcnZpY2VzL2FwaS9Gb3JtU2VydmljZSc7CmltcG9ydCB7IEZPUk1TX0ZFVENIX0ZPUk0gfSBmcm9tICIuLi90eXBlcy9hY3Rpb24tdHlwZXMiOwppbXBvcnQgeyBGT1JNU19VUERBVEVfRk9STSB9IGZyb20gIi4uL3R5cGVzL211dGF0aW9uLXR5cGVzIjsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiB7CiAgICBmb3JtczogW10KICB9LAogIG11dGF0aW9uczogX2RlZmluZVByb3BlcnR5KHt9LCBGT1JNU19VUERBVEVfRk9STSwgZnVuY3Rpb24gKHN0YXRlLCB1cGRhdGVkRm9ybSkgewogICAgdmFyIGV4aXN0cyA9IHN0YXRlLmZvcm1zLmZpbmQoZnVuY3Rpb24gKGZvcm0pIHsKICAgICAgcmV0dXJuIGZvcm0uaWQgPT09IHVwZGF0ZWRGb3JtLmlkOwogICAgfSk7CgogICAgaWYgKGV4aXN0cykgewogICAgICBzdGF0ZS5mb3JtcyA9IHN0YXRlLmZvcm1zLm1hcChmdW5jdGlvbiAoZm9ybSkgewogICAgICAgIGlmIChmb3JtLmlkID09PSB1cGRhdGVkRm9ybS5pZCkgewogICAgICAgICAgcmV0dXJuIHVwZGF0ZWRGb3JtOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZvcm07CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgc3RhdGUuZm9ybXMucHVzaCh1cGRhdGVkRm9ybSk7CiAgICB9CiAgfSksCiAgYWN0aW9uczogX2RlZmluZVByb3BlcnR5KHt9LCBGT1JNU19GRVRDSF9GT1JNLCBmdW5jdGlvbiAoX3JlZiwgZm9ybUlkKSB7CiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoLAogICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgZGlzcGF0Y2goJ3dhaXQvc3RhcnQnLCAiZm9ybS4iLmNvbmNhdChmb3JtSWQpLCB7CiAgICAgIHJvb3Q6IHRydWUKICAgIH0pOwogICAgRm9ybVNlcnZpY2UuZmV0Y2goZm9ybUlkKS50aGVuKGZ1bmN0aW9uIChmb3JtKSB7CiAgICAgIGNvbW1pdChGT1JNU19VUERBVEVfRk9STSwgZm9ybSk7CiAgICAgIGRpc3BhdGNoKCd3YWl0L2VuZCcsICJmb3JtLiIuY29uY2F0KGZvcm1JZCksIHsKICAgICAgICByb290OiB0cnVlCiAgICAgIH0pOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUubG9nKCJlcnJvciBmZXRjaGluZyBmb3JtICIuY29uY2F0KGZvcm1JZCksIGVycm9yKTsKICAgIH0pOwogIH0pCn07"},{"version":3,"sources":["/app/src/store/modules/forms.js"],"names":["FormService","FORMS_FETCH_FORM","FORMS_UPDATE_FORM","state","forms","mutations","updatedForm","exists","find","form","id","map","push","actions","formId","dispatch","commit","root","fetch","then","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,4BAAxB;AACA,SAASC,gBAAT;AACA,SAASC,iBAAT;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GADM;AAKbC,EAAAA,SAAS,sBACNH,iBADM,YACaC,KADb,EACoBG,WADpB,EACiC;AACtC,QAAMC,MAAM,GAAGJ,KAAK,CAACC,KAAN,CAAYI,IAAZ,CAAiB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYJ,WAAW,CAACI,EAA5B;AAAA,KAArB,CAAf;;AAEA,QAAIH,MAAJ,EAAY;AACVJ,MAAAA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYO,GAAZ,CAAgB,UAAAF,IAAI,EAAI;AACpC,YAAIA,IAAI,CAACC,EAAL,KAAYJ,WAAW,CAACI,EAA5B,EAAgC;AAC9B,iBAAOJ,WAAP;AACD;;AAED,eAAOG,IAAP;AACD,OANa,CAAd;AAOD,KARD,MAQO;AACLN,MAAAA,KAAK,CAACC,KAAN,CAAYQ,IAAZ,CAAiBN,WAAjB;AACD;AACF,GAfM,CALI;AAuBbO,EAAAA,OAAO,sBACJZ,gBADI,kBACoCa,MADpC,EAC4C;AAAA,QAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,QAAlBC,MAAkB,QAAlBA,MAAkB;AAC/CD,IAAAA,QAAQ,CAAC,YAAD,iBAAuBD,MAAvB,GAAiC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAjC,CAAR;AAEAjB,IAAAA,WAAW,CAACkB,KAAZ,CAAkBJ,MAAlB,EACGK,IADH,CACQ,UAAAV,IAAI,EAAI;AACZO,MAAAA,MAAM,CAACd,iBAAD,EAAoBO,IAApB,CAAN;AACAM,MAAAA,QAAQ,CAAC,UAAD,iBAAqBD,MAArB,GAA+B;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAA/B,CAAR;AACD,KAJH,EAKGG,KALH,CAKS,UAAAC,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,+BAAmCT,MAAnC,GAA6CO,KAA7C;AACD,KAPH;AAQD,GAZI;AAvBM,CAAf","sourcesContent":["import FormService from '@/services/api/FormService';\nimport { FORMS_FETCH_FORM } from '../types/action-types';\nimport { FORMS_UPDATE_FORM } from '../types/mutation-types';\n\nexport default {\n  state: {\n    forms: [],\n  },\n\n  mutations: {\n    [FORMS_UPDATE_FORM](state, updatedForm) {\n      const exists = state.forms.find(form => form.id === updatedForm.id);\n\n      if (exists) {\n        state.forms = state.forms.map(form => {\n          if (form.id === updatedForm.id) {\n            return updatedForm;\n          }\n\n          return form;\n        });\n      } else {\n        state.forms.push(updatedForm);\n      }\n    },\n  },\n\n  actions: {\n    [FORMS_FETCH_FORM]({ dispatch, commit }, formId) {\n      dispatch('wait/start', `form.${formId}`, { root: true });\n\n      FormService.fetch(formId)\n        .then(form => {\n          commit(FORMS_UPDATE_FORM, form);\n          dispatch('wait/end', `form.${formId}`, { root: true });\n        })\n        .catch(error => {\n          console.log(`error fetching form ${formId}`, error);\n        });\n    },\n  },\n};\n"]}]}