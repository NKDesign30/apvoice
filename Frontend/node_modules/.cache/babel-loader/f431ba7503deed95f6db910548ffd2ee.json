{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/content/text-media-paragraph/media-slot/TextMediaParagraphMediaSlotChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/content/text-media-paragraph/media-slot/TextMediaParagraphMediaSlotChart.vue","mtime":1683275992558},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGdldCBmcm9tICdsb2Rhc2gvZ2V0JzsKaW1wb3J0IG1hcCBmcm9tICdsb2Rhc2gvbWFwJzsKaW1wb3J0IHsgQ2hhcnQgfSBmcm9tICdjaGFydC5qcyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwoKaW1wb3J0IENoYXJ0RGF0YUxhYmVscyBmcm9tICdjaGFydGpzLXBsdWdpbi1kYXRhbGFiZWxzJzsKaW1wb3J0IEJhciBmcm9tICdAL2NvbXBvbmVudHMvY2hhcnRzL0Jhci52dWUnOwppbXBvcnQgeyBoZXhUb1JnYiwgY29sb3JCcmlnaHRuZXNzIH0gZnJvbSAnQC9zZXJ2aWNlcy91dGlscyc7Cgp2YXIgdGFpbHdpbmRDb2xvcnMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi90YWlsd2luZC9Db2xvcnMiKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAnYXBvLWJhci1jaGFyJzogQmFyCiAgfSwKICBpbmplY3Q6IHsKICAgIHBhZ2VJbmRpY2F0b3JTdGF0ZTogewogICAgICBkZWZhdWx0OiBudWxsCiAgICB9CiAgfSwKICBwcm9wczogewogICAgbWVkaWE6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3B0aW9uczogewogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICB9LAogICAgICAgIHRvb2x0aXBzOiB7CiAgICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgc2NhbGVzOiB7CiAgICAgICAgICB5QXhlczogW3sKICAgICAgICAgICAgdGlja3M6IHsKICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9XQogICAgICAgIH0sCiAgICAgICAgbGF5b3V0OiB7CiAgICAgICAgICBwYWRkaW5nOiB7CiAgICAgICAgICAgIHRvcDogMjUKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLAogICAgICAgIGFuaW1hdGlvbjogewogICAgICAgICAgb25Qcm9ncmVzczogZnVuY3Rpb24gb25Qcm9ncmVzcygpIHsKICAgICAgICAgICAgdmFyIGNoYXJ0SW5zdGFuY2UgPSB0aGlzLmNoYXJ0OwogICAgICAgICAgICB2YXIgY3R4ID0gY2hhcnRJbnN0YW5jZS5jdHg7IC8vIENyZWF0ZSBGb250IFN0cmluZwoKICAgICAgICAgICAgY3R4LmZvbnQgPSBDaGFydC5oZWxwZXJzLmZvbnRTdHJpbmcoQ2hhcnQuZGVmYXVsdHMuZ2xvYmFsLmRlZmF1bHRGb250U2l6ZSwgQ2hhcnQuZGVmYXVsdHMuZ2xvYmFsLmRlZmF1bHRGb250U3R5bGUsIENoYXJ0LmRlZmF1bHRzLmdsb2JhbC5kZWZhdWx0Rm9udEZhbWlseSk7CiAgICAgICAgICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJzsKICAgICAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9ICdib3R0b20nOyAvLyBJdGVyYXRlIG92ZXIgYWxsIGJhcnMKCiAgICAgICAgICAgIHRoaXMuZGF0YS5kYXRhc2V0cy5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhc2V0LCBkYXRhc2V0SW5kZXgpIHsKICAgICAgICAgICAgICB2YXIgbWV0YSA9IGNoYXJ0SW5zdGFuY2UuY29udHJvbGxlci5nZXREYXRhc2V0TWV0YShkYXRhc2V0SW5kZXgpOwogICAgICAgICAgICAgIG1ldGEuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChiYXIsIGJhckluZGV4KSB7CiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgYmFyIGhhcyBhIHZhbHVlIChpLmUuIGlzIG5vdCBoaWRkZW4pCiAgICAgICAgICAgICAgICBpZiAoZGF0YXNldC5kYXRhW2JhckluZGV4XSAhPT0gJycgJiYgZGF0YXNldC5kYXRhW2JhckluZGV4XSA+IDApIHsKICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGJhciBoYXMgYSBjdXN0b20gbGFiZWwgYW5kIGRyYXcgaXQKICAgICAgICAgICAgICAgICAgdmFyIGN1c3RvbUxhYmVsID0gZGF0YXNldC5jdXN0b21MYWJlbHNbYmFySW5kZXhdOwoKICAgICAgICAgICAgICAgICAgaWYgKGN1c3RvbUxhYmVsICYmIGN1c3RvbUxhYmVsICE9PSAnJyAmJiBjdXN0b21MYWJlbC5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlCiAgICAgICAgICAgICAgICAgICAgY3R4LmZpbGxUZXh0KGN1c3RvbUxhYmVsLCBiYXIuX21vZGVsLngsIGJhci5fbW9kZWwueSAtIDUpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydGRhdGE6IGZ1bmN0aW9uIGNoYXJ0ZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBsYWJlbHM6IHRoaXMuZ2V0TGFiZWxzKHRoaXMubWVkaWEpLAogICAgICAgIGRhdGFzZXRzOiB0aGlzLmdldERhdGFzZXRzKHRoaXMubWVkaWEpCiAgICAgIH07CiAgICB9LAogICAgaXNDb250ZW50VmlzaWJsZTogZnVuY3Rpb24gaXNDb250ZW50VmlzaWJsZSgpIHsKICAgICAgaWYgKHRoaXMucGFnZUluZGljYXRvclN0YXRlID09PSBudWxsKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLnBhZ2VJbmRpY2F0b3JTdGF0ZS5pc09wZW47CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRMYWJlbHM6IGZ1bmN0aW9uIGdldExhYmVscyhtZWRpYSkgewogICAgICByZXR1cm4gbWFwKG1lZGlhLCAnZGVzY3JpcHRpb24nKTsKICAgIH0sCiAgICBnZXREYXRhc2V0czogZnVuY3Rpb24gZ2V0RGF0YXNldHMobWVkaWEpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBkYXRhc2V0cyA9IFtdOwogICAgICBtZWRpYS5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhLCBkYXRhc2V0SW5kZXgpIHsKICAgICAgICBkYXRhLmJhcnMuZm9yRWFjaChmdW5jdGlvbiAoYmFyLCBiYXJJbmRleCkgewogICAgICAgICAgaWYgKCFkYXRhc2V0c1tiYXJJbmRleF0pIHsKICAgICAgICAgICAgdmFyIF9oZXhUb1JnYiA9IGhleFRvUmdiKF90aGlzLmdldFRhaWx3aW5kQ29sb3IoYmFyLmNvbG9yKSksCiAgICAgICAgICAgICAgICByZWQgPSBfaGV4VG9SZ2IucmVkLAogICAgICAgICAgICAgICAgZ3JlZW4gPSBfaGV4VG9SZ2IuZ3JlZW4sCiAgICAgICAgICAgICAgICBibHVlID0gX2hleFRvUmdiLmJsdWU7CgogICAgICAgICAgICB2YXIgYnJpZ2h0bmVzcyA9IGNvbG9yQnJpZ2h0bmVzcyhyZWQsIGdyZWVuLCBibHVlKTsKICAgICAgICAgICAgdmFyIGNvbG9yID0gYnJpZ2h0bmVzcyA8IDEyMyA/ICcjZmZmZmZmJyA6ICcjMDAwMDAwJzsKICAgICAgICAgICAgZGF0YXNldHNbYmFySW5kZXhdID0gewogICAgICAgICAgICAgIGxhYmVsOiAnJywKICAgICAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFtdLAogICAgICAgICAgICAgIGRhdGFsYWJlbHM6IHsKICAgICAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJywKICAgICAgICAgICAgICAgIGFuY2hvcjogJ2NlbnRlcicsCiAgICAgICAgICAgICAgICBjb2xvcjogY29sb3IKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGN1c3RvbUxhYmVsczogW10KICAgICAgICAgICAgfTsKICAgICAgICAgIH0KCiAgICAgICAgICBkYXRhc2V0c1tiYXJJbmRleF0uZGF0YVtkYXRhc2V0SW5kZXhdID0gcGFyc2VGbG9hdChiYXIudmFsdWUpOwogICAgICAgICAgZGF0YXNldHNbYmFySW5kZXhdLmJhY2tncm91bmRDb2xvcltkYXRhc2V0SW5kZXhdID0gX3RoaXMuZ2V0VGFpbHdpbmRDb2xvcihiYXIuY29sb3IpOwogICAgICAgICAgZGF0YXNldHNbYmFySW5kZXhdLmN1c3RvbUxhYmVsc1tkYXRhc2V0SW5kZXhdID0gYmFyLmxhYmVsIHx8ICcnOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgZGF0YXNldHMuZm9yRWFjaChmdW5jdGlvbiAoZGF0YXNldCwgZGF0YXNldEluZGV4KSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtZWRpYS5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgICAgaWYgKGRhdGFzZXRzW2RhdGFzZXRJbmRleF0uZGF0YVtpXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIGRhdGFzZXRzW2RhdGFzZXRJbmRleF0uZGF0YVtpXSA9ICcnOwogICAgICAgICAgICBkYXRhc2V0c1tkYXRhc2V0SW5kZXhdLmJhY2tncm91bmRDb2xvcltpXSA9ICd0cmFuc3BhcmVudCc7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIGRhdGFzZXRzOwogICAgfSwKICAgIGdldFRhaWx3aW5kQ29sb3I6IGZ1bmN0aW9uIGdldFRhaWx3aW5kQ29sb3IoY29sb3IpIHsKICAgICAgcmV0dXJuIGdldCh0YWlsd2luZENvbG9ycywgY29sb3IucmVwbGFjZSgvLS8sICcuJykpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["TextMediaParagraphMediaSlotChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA,OAAA,GAAA,MAAA,YAAA;AACA,OAAA,GAAA,MAAA,YAAA;AACA,SAAA,KAAA,QAAA,UAAA,C,CACA;;AACA,OAAA,eAAA,MAAA,2BAAA;AACA,OAAA,GAAA,MAAA,6BAAA;AACA,SAAA,QAAA,EAAA,eAAA,QAAA,kBAAA;;AAEA,IAAA,cAAA,GAAA,OAAA,+BAAA;;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,oBAAA;AADA,GADA;AAKA,EAAA,MAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA;AADA,GALA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAHA,sBAGA;AACA,eAAA,EAAA;AACA;AALA;AADA,GAXA;AAqBA,EAAA,IArBA,kBAqBA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SADA;AAKA,QAAA,QAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SALA;AASA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,WAAA,EAAA;AADA;AADA,WAAA;AADA,SATA;AAiBA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,EAAA;AACA,YAAA,GAAA,EAAA;AADA;AADA,SAjBA;AAuBA,QAAA,mBAAA,EAAA,KAvBA;AAyBA,QAAA,SAAA,EAAA;AACA,UAAA,UADA,wBACA;AACA,gBAAA,aAAA,GAAA,KAAA,KAAA;AADA,gBAEA,GAFA,GAEA,aAFA,CAEA,GAFA,EAIA;;AACA,YAAA,GAAA,CAAA,IAAA,GAAA,KAAA,CAAA,OAAA,CAAA,UAAA,CACA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,eADA,EAEA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,gBAFA,EAGA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,iBAHA,CAAA;AAKA,YAAA,GAAA,CAAA,SAAA,GAAA,QAAA;AACA,YAAA,GAAA,CAAA,YAAA,GAAA,QAAA,CAXA,CAaA;;AACA,iBAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,YAAA,EAAA;AACA,kBAAA,IAAA,GAAA,aAAA,CAAA,UAAA,CAAA,cAAA,CAAA,YAAA,CAAA;AAEA,cAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,QAAA,EAAA;AACA;AACA,oBAAA,OAAA,CAAA,IAAA,CAAA,QAAA,MAAA,EAAA,IAAA,OAAA,CAAA,IAAA,CAAA,QAAA,IAAA,CAAA,EAAA;AACA;AACA,sBAAA,WAAA,GAAA,OAAA,CAAA,YAAA,CAAA,QAAA,CAAA;;AAEA,sBAAA,WAAA,IAAA,WAAA,KAAA,EAAA,IAAA,WAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA;AACA,oBAAA,GAAA,CAAA,QAAA,CAAA,WAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA;AACA;AACA;AACA,eAXA;AAYA,aAfA;AAgBA;AA/BA;AAzBA;AADA,KAAA;AA6DA,GAnFA;AAqFA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,KAAA,SAAA,CAAA,KAAA,KAAA,CADA;AAEA,QAAA,QAAA,EAAA,KAAA,WAAA,CAAA,KAAA,KAAA;AAFA,OAAA;AAIA,KANA;AAQA,IAAA,gBARA,8BAQA;AACA,UAAA,KAAA,kBAAA,KAAA,IAAA,EAAA;AACA,eAAA,IAAA;AACA;;AAEA,aAAA,KAAA,kBAAA,CAAA,MAAA;AACA;AAdA,GArFA;AAsGA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,KADA,EACA;AACA,aAAA,GAAA,CAAA,KAAA,EAAA,aAAA,CAAA;AACA,KAHA;AAKA,IAAA,WALA,uBAKA,KALA,EAKA;AAAA;;AACA,UAAA,QAAA,GAAA,EAAA;AAEA,MAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,YAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,QAAA,EAAA;AACA,cAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA;AAAA,4BACA,QAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CADA;AAAA,gBACA,GADA,aACA,GADA;AAAA,gBACA,KADA,aACA,KADA;AAAA,gBACA,IADA,aACA,IADA;;AAEA,gBAAA,UAAA,GAAA,eAAA,CAAA,GAAA,EAAA,KAAA,EAAA,IAAA,CAAA;AACA,gBAAA,KAAA,GAAA,UAAA,GAAA,GAAA,GAAA,SAAA,GAAA,SAAA;AAEA,YAAA,QAAA,CAAA,QAAA,CAAA,GAAA;AACA,cAAA,KAAA,EAAA,EADA;AAEA,cAAA,IAAA,EAAA,EAFA;AAGA,cAAA,eAAA,EAAA,EAHA;AAIA,cAAA,UAAA,EAAA;AACA,gBAAA,KAAA,EAAA,QADA;AAEA,gBAAA,MAAA,EAAA,QAFA;AAGA,gBAAA,KAAA,EAAA;AAHA,eAJA;AASA,cAAA,YAAA,EAAA;AATA,aAAA;AAWA;;AAEA,UAAA,QAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,YAAA,IAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AACA,UAAA,QAAA,CAAA,QAAA,CAAA,CAAA,eAAA,CAAA,YAAA,IAAA,KAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AACA,UAAA,QAAA,CAAA,QAAA,CAAA,CAAA,YAAA,CAAA,YAAA,IAAA,GAAA,CAAA,KAAA,IAAA,EAAA;AACA,SAtBA;AAuBA,OAxBA;AA0BA,MAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,YAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,cAAA,QAAA,CAAA,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA,MAAA,SAAA,EAAA;AACA,YAAA,QAAA,CAAA,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,EAAA;AACA,YAAA,QAAA,CAAA,YAAA,CAAA,CAAA,eAAA,CAAA,CAAA,IAAA,aAAA;AACA;AACA;AACA,OAPA;AASA,aAAA,QAAA;AACA,KA5CA;AA8CA,IAAA,gBA9CA,4BA8CA,KA9CA,EA8CA;AACA,aAAA,GAAA,CAAA,cAAA,EAAA,KAAA,CAAA,OAAA,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;AACA;AAhDA;AAtGA,CAAA","sourcesContent":["<template>\n  <div class=\"text-media-paragraph__media-slot--chart\">\n    <div class=\"chart-container mb-3\">\n      <apo-bar-char\n        v-if=\"isContentVisible\"\n        :chartdata=\"chartdata\"\n        :options=\"options\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport { Chart } from 'chart.js';\n// eslint-disable-next-line no-unused-vars\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport Bar from '@/components/charts/Bar.vue';\nimport { hexToRgb, colorBrightness } from '@/services/utils';\n\nconst tailwindColors = require('../../../../tailwind/Colors');\n\nexport default {\n  components: {\n    'apo-bar-char': Bar,\n  },\n\n  inject: {\n    pageIndicatorState: {\n      default: null,\n    },\n  },\n\n  props: {\n    media: {\n      type: Array,\n      required: false,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      options: {\n        legend: {\n          display: false,\n        },\n\n        tooltips: {\n          enabled: false,\n        },\n\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n            },\n          }],\n        },\n\n        layout: {\n          padding: {\n            top: 25,\n          },\n        },\n\n        maintainAspectRatio: false,\n\n        animation: {\n          onProgress() {\n            const chartInstance = this.chart;\n            const { ctx } = chartInstance;\n\n            // Create Font String\n            ctx.font = Chart.helpers.fontString(\n              Chart.defaults.global.defaultFontSize,\n              Chart.defaults.global.defaultFontStyle,\n              Chart.defaults.global.defaultFontFamily,\n            );\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'bottom';\n\n            // Iterate over all bars\n            this.data.datasets.forEach((dataset, datasetIndex) => {\n              const meta = chartInstance.controller.getDatasetMeta(datasetIndex);\n\n              meta.data.forEach((bar, barIndex) => {\n                // Check if the bar has a value (i.e. is not hidden)\n                if (dataset.data[barIndex] !== '' && dataset.data[barIndex] > 0) {\n                  // Check if the bar has a custom label and draw it\n                  const customLabel = dataset.customLabels[barIndex];\n\n                  if (customLabel && customLabel !== '' && customLabel.length > 0) {\n                    // eslint-disable-next-line no-underscore-dangle\n                    ctx.fillText(customLabel, bar._model.x, bar._model.y - 5);\n                  }\n                }\n              });\n            });\n          },\n        },\n      },\n    };\n  },\n\n  computed: {\n    chartdata() {\n      return {\n        labels: this.getLabels(this.media),\n        datasets: this.getDatasets(this.media),\n      };\n    },\n\n    isContentVisible() {\n      if (this.pageIndicatorState === null) {\n        return true;\n      }\n\n      return this.pageIndicatorState.isOpen;\n    },\n  },\n\n  methods: {\n    getLabels(media) {\n      return map(media, 'description');\n    },\n\n    getDatasets(media) {\n      const datasets = [];\n\n      media.forEach((data, datasetIndex) => {\n        data.bars.forEach((bar, barIndex) => {\n          if (!datasets[barIndex]) {\n            const { red, green, blue } = hexToRgb(this.getTailwindColor(bar.color));\n            const brightness = colorBrightness(red, green, blue);\n            const color = brightness < 123 ? '#ffffff' : '#000000';\n\n            datasets[barIndex] = {\n              label: '',\n              data: [],\n              backgroundColor: [],\n              datalabels: {\n                align: 'center',\n                anchor: 'center',\n                color,\n              },\n              customLabels: [],\n            };\n          }\n\n          datasets[barIndex].data[datasetIndex] = parseFloat(bar.value);\n          datasets[barIndex].backgroundColor[datasetIndex] = this.getTailwindColor(bar.color);\n          datasets[barIndex].customLabels[datasetIndex] = bar.label || '';\n        });\n      });\n\n      datasets.forEach((dataset, datasetIndex) => {\n        for (let i = 0; i < media.length; i += 1) {\n          if (datasets[datasetIndex].data[i] === undefined) {\n            datasets[datasetIndex].data[i] = '';\n            datasets[datasetIndex].backgroundColor[i] = 'transparent';\n          }\n        }\n      });\n\n      return datasets;\n    },\n\n    getTailwindColor(color) {\n      return get(tailwindColors, color.replace(/-/, '.'));\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n.chart-container {\n  max-height: calc(theme('spacing.72') * 2);\n}\n\n</style>\n"],"sourceRoot":"src/components/content/text-media-paragraph/media-slot"}]}