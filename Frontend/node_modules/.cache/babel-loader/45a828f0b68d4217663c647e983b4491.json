{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/store/modules/raffle.js","dependencies":[{"path":"/app/src/store/modules/raffle.js","mtime":1683275992578},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBfbXV0YXRpb25zLCBfYWN0aW9uczsKCi8qIGVzbGludC1kaXNhYmxlIG5vLXBhcmFtLXJlYXNzaWduICovCmltcG9ydCBSYWZmbGVTZXJ2aWNlIGZyb20gJ0Avc2VydmljZXMvYXBpL1JhZmZsZVNlcnZpY2UnOwppbXBvcnQgeyBSQUZGTEVfRkVUQ0hfQUxMLCBSQUZGTEVfRkVUQ0hfT05FIH0gZnJvbSAiLi4vdHlwZXMvYWN0aW9uLXR5cGVzIjsKaW1wb3J0IHsgUkFGRkxFX1VQREFURV9SQUZGTEUsIFJBRkZMRV9VUERBVEVfQ1VSUkVOVF9SQUZGTEUgfSBmcm9tICIuLi90eXBlcy9tdXRhdGlvbi10eXBlcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogewogICAgcmFmZmxlczogW10sCiAgICBjdXJyZW50UmFmZmxlOiB7fQogIH0sCiAgbXV0YXRpb25zOiAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgUkFGRkxFX1VQREFURV9SQUZGTEUsIGZ1bmN0aW9uIChzdGF0ZSwgdXBkYXRlZFJhZmZsZSkgewogICAgc3RhdGUucmFmZmxlcyA9IHVwZGF0ZWRSYWZmbGU7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBSQUZGTEVfVVBEQVRFX0NVUlJFTlRfUkFGRkxFLCBmdW5jdGlvbiAoc3RhdGUsIHVwZGF0ZWRDdXJyZW50UmFmZmxlKSB7CiAgICBzdGF0ZS5yYWZmbGVzID0gdXBkYXRlZEN1cnJlbnRSYWZmbGU7CiAgfSksIF9tdXRhdGlvbnMpLAogIGFjdGlvbnM6IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFJBRkZMRV9GRVRDSF9BTEwsIGZ1bmN0aW9uIChfcmVmKSB7CiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoLAogICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LAogICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTsKCiAgICBpZiAoc3RhdGUucmFmZmxlcy5sZW5ndGggPT09IDApIHsKICAgICAgZGlzcGF0Y2goJ3dhaXQvc3RhcnQnLCAncmFmZmxlJywgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICB9CgogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgUmFmZmxlU2VydmljZS5mZXRjaEFsbCgpLnRoZW4oZnVuY3Rpb24gKHJhZmZsZSkgewogICAgICAgIGNvbW1pdChSQUZGTEVfVVBEQVRFX1JBRkZMRSwgcmFmZmxlKTsKICAgICAgICBkaXNwYXRjaCgnd2FpdC9lbmQnLCAncmFmZmxlJywgewogICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgIH0pOwogICAgICAgIHJlc29sdmUocmFmZmxlKTsKICAgICAgfSkuY2F0Y2gocmVqZWN0KTsKICAgIH0pOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFJBRkZMRV9GRVRDSF9PTkUsIGZ1bmN0aW9uIChfcmVmMiwgaWQpIHsKICAgIHZhciBkaXNwYXRjaCA9IF9yZWYyLmRpc3BhdGNoLAogICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgIGRpc3BhdGNoKCd3YWl0L3N0YXJ0JywgJ3JhZmZsZScsIHsKICAgICAgcm9vdDogdHJ1ZQogICAgfSk7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBSYWZmbGVTZXJ2aWNlLmZldGNoKGlkKS50aGVuKGZ1bmN0aW9uIChyYWZmbGUpIHsKICAgICAgICBjb21taXQoUkFGRkxFX1VQREFURV9DVVJSRU5UX1JBRkZMRSwgcmFmZmxlKTsKICAgICAgICBkaXNwYXRjaCgnd2FpdC9lbmQnLCAncmFmZmxlJywgewogICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgIH0pOwogICAgICAgIHJlc29sdmUocmFmZmxlKTsKICAgICAgfSkuY2F0Y2gocmVqZWN0KTsKICAgIH0pOwogIH0pLCBfYWN0aW9ucyksCiAgZ2V0dGVyczogewogICAgcmFmZmxlOiBmdW5jdGlvbiByYWZmbGUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnJhZmZsZXM7CiAgICB9LAogICAgY3VycmVudFJhZmZsZTogZnVuY3Rpb24gY3VycmVudFJhZmZsZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY3VycmVudFJhZmZsZTsKICAgIH0sCiAgICByYWZmbGVCeUlkOiBmdW5jdGlvbiByYWZmbGVCeUlkKHN0YXRlKSB7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoaWQpIHsKICAgICAgICByZXR1cm4gc3RhdGUucmFmZmxlcy5maW5kKGZ1bmN0aW9uIChyYWZmbGUpIHsKICAgICAgICAgIHJldHVybiByYWZmbGUuaWQgPT09IGlkOwogICAgICAgIH0pOwogICAgICB9OwogICAgfQogIH0KfTs="},{"version":3,"sources":["/app/src/store/modules/raffle.js"],"names":["RaffleService","RAFFLE_FETCH_ALL","RAFFLE_FETCH_ONE","RAFFLE_UPDATE_RAFFLE","RAFFLE_UPDATE_CURRENT_RAFFLE","state","raffles","currentRaffle","mutations","updatedRaffle","updatedCurrentRaffle","actions","dispatch","commit","length","root","Promise","resolve","reject","fetchAll","then","raffle","catch","id","fetch","getters","raffleById","find"],"mappings":";;;;;;;AAAA;AACA,OAAOA,aAAP,MAA0B,8BAA1B;AACA,SACEC,gBADF,EAEEC,gBAFF;AAIA,SAASC,oBAAT,EAA+BC,4BAA/B;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,aAAa,EAAE;AAFV,GADM;AAMbC,EAAAA,SAAS,gDACNL,oBADM,YACgBE,KADhB,EACuBI,aADvB,EACsC;AAC3CJ,IAAAA,KAAK,CAACC,OAAN,GAAgBG,aAAhB;AACD,GAHM,+BAINL,4BAJM,YAIwBC,KAJxB,EAI+BK,oBAJ/B,EAIqD;AAC1DL,IAAAA,KAAK,CAACC,OAAN,GAAgBI,oBAAhB;AACD,GANM,cANI;AAebC,EAAAA,OAAO,4CACJV,gBADI,kBAC2C;AAAA,QAA3BW,QAA2B,QAA3BA,QAA2B;AAAA,QAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,QAATR,KAAS,QAATA,KAAS;;AAC9C,QAAIA,KAAK,CAACC,OAAN,CAAcQ,MAAd,KAAyB,CAA7B,EAAgC;AAC9BF,MAAAA,QAAQ,CAAC,YAAD,EAAe,QAAf,EAAyB;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAzB,CAAR;AACD;;AAED,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtClB,MAAAA,aAAa,CAACmB,QAAd,GACGC,IADH,CACQ,UAAAC,MAAM,EAAI;AACdR,QAAAA,MAAM,CAACV,oBAAD,EAAuBkB,MAAvB,CAAN;AACAT,QAAAA,QAAQ,CAAC,UAAD,EAAa,QAAb,EAAuB;AAAEG,UAAAA,IAAI,EAAE;AAAR,SAAvB,CAAR;AACAE,QAAAA,OAAO,CAACI,MAAD,CAAP;AACD,OALH,EAKKC,KALL,CAKWJ,MALX;AAMD,KAPM,CAAP;AAQD,GAdI,6BAeJhB,gBAfI,mBAeoCqB,EAfpC,EAewC;AAAA,QAAxBX,QAAwB,SAAxBA,QAAwB;AAAA,QAAdC,MAAc,SAAdA,MAAc;AAC3CD,IAAAA,QAAQ,CAAC,YAAD,EAAe,QAAf,EAAyB;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAzB,CAAR;AAEA,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtClB,MAAAA,aAAa,CAACwB,KAAd,CAAoBD,EAApB,EACGH,IADH,CACQ,UAAAC,MAAM,EAAI;AACdR,QAAAA,MAAM,CAACT,4BAAD,EAA+BiB,MAA/B,CAAN;AACAT,QAAAA,QAAQ,CAAC,UAAD,EAAa,QAAb,EAAuB;AAAEG,UAAAA,IAAI,EAAE;AAAR,SAAvB,CAAR;AACAE,QAAAA,OAAO,CAACI,MAAD,CAAP;AACD,OALH,EAKKC,KALL,CAKWJ,MALX;AAMD,KAPM,CAAP;AAQD,GA1BI,YAfM;AA4CbO,EAAAA,OAAO,EAAE;AACPJ,IAAAA,MADO,kBACAhB,KADA,EACO;AACZ,aAAOA,KAAK,CAACC,OAAb;AACD,KAHM;AAIPC,IAAAA,aAJO,yBAIOF,KAJP,EAIc;AACnB,aAAOA,KAAK,CAACE,aAAb;AACD,KANM;AAOPmB,IAAAA,UAPO,sBAOIrB,KAPJ,EAOW;AAChB,aAAO,UAAAkB,EAAE;AAAA,eAAIlB,KAAK,CAACC,OAAN,CAAcqB,IAAd,CAAmB,UAAAN,MAAM;AAAA,iBAAIA,MAAM,CAACE,EAAP,KAAcA,EAAlB;AAAA,SAAzB,CAAJ;AAAA,OAAT;AACD;AATM;AA5CI,CAAf","sourcesContent":["/* eslint-disable no-param-reassign */\nimport RaffleService from '@/services/api/RaffleService';\nimport {\n  RAFFLE_FETCH_ALL,\n  RAFFLE_FETCH_ONE,\n} from '../types/action-types';\nimport { RAFFLE_UPDATE_RAFFLE, RAFFLE_UPDATE_CURRENT_RAFFLE } from '../types/mutation-types';\n\nexport default {\n  state: {\n    raffles: [],\n    currentRaffle: {},\n  },\n\n  mutations: {\n    [RAFFLE_UPDATE_RAFFLE](state, updatedRaffle) {\n      state.raffles = updatedRaffle;\n    },\n    [RAFFLE_UPDATE_CURRENT_RAFFLE](state, updatedCurrentRaffle) {\n      state.raffles = updatedCurrentRaffle;\n    },\n  },\n\n  actions: {\n    [RAFFLE_FETCH_ALL]({ dispatch, commit, state }) {\n      if (state.raffles.length === 0) {\n        dispatch('wait/start', 'raffle', { root: true });\n      }\n\n      return new Promise((resolve, reject) => {\n        RaffleService.fetchAll()\n          .then(raffle => {\n            commit(RAFFLE_UPDATE_RAFFLE, raffle);\n            dispatch('wait/end', 'raffle', { root: true });\n            resolve(raffle);\n          }).catch(reject);\n      });\n    },\n    [RAFFLE_FETCH_ONE]({ dispatch, commit }, id) {\n      dispatch('wait/start', 'raffle', { root: true });\n\n      return new Promise((resolve, reject) => {\n        RaffleService.fetch(id)\n          .then(raffle => {\n            commit(RAFFLE_UPDATE_CURRENT_RAFFLE, raffle);\n            dispatch('wait/end', 'raffle', { root: true });\n            resolve(raffle);\n          }).catch(reject);\n      });\n    },\n  },\n\n  getters: {\n    raffle(state) {\n      return state.raffles;\n    },\n    currentRaffle(state) {\n      return state.currentRaffle;\n    },\n    raffleById(state) {\n      return id => state.raffles.find(raffle => raffle.id === id);\n    },\n  },\n};\n"]}]}