{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/content/ShelfDisplayPuzzle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/content/ShelfDisplayPuzzle.vue","mtime":1683275992553},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ShelfDisplayPuzzle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"puzzle container\">\n    <div ref=\"puzzleContainer\">\n      <h3\n        class=\"text-center\"\n        v-html=\"$options.filters.formatContent(shelf_display_puzzle.headline)\"\n      />\n\n      <h6\n        class=\"mt-4 text-center\"\n        v-html=\"$options.filters.formatContent(shelf_display_puzzle.subheadline)\"\n      />\n\n      <div\n        v-observe-visibility=\"visibilityChanged\"\n        class=\"puzzle-pieces-container mt-16 flex flex-wrap relative focus:outline-none\"\n        :style=\"{\n          width: `${puzzleWidth}px`,\n          height: `${puzzleHeight}px`,\n        }\"\n      >\n        <div\n          v-for=\"piece in sortedPuzzle\"\n          :key=\"`${componentKey}${piece.id}`\"\n          class=\"puzzle-piece relative\"\n          :class=\"{ 'with-outline' : !isFinished}\"\n          :data-id=\"piece.id\"\n          :style=\"{\n            width: `${getPieceDimensions().width}px`,\n            height: `${getPieceDimensions().height}px`,\n            backgroundImage: `url(${image})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: `${puzzleWidth}px ${puzzleHeight}px`,\n            backgroundPosition: `${getPieceXOffset(piece)} ${getPieceYOffset(piece)}`,\n          }\"\n        >\n          <div\n            class=\"puzzle-piece-indicator w-full h-full opacity-50 bg-blue-400\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div\n      v-if=\"isFinished\"\n      class=\"mt-4\"\n    >\n      <h2\n        v-if=\"hasSuccessMessage\"\n        class=\"mb-4 px-8 text-center\"\n        v-html=\"$options.filters.formatContent(successMessage)\"\n      />\n\n      <div class=\"flex justify-center\">\n        <apo-button\n          class=\"puzzle-restart-button button button--tiny button--outlined\"\n          type=\"button\"\n          @click=\"restart\"\n          v-text=\"$t('modules.shelfDisplay.restart')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport clone from 'lodash/clone';\nimport get from 'lodash/get';\nimport sortBy from 'lodash/sortBy';\nimport { Swappable } from '@shopify/draggable/lib/es5/draggable.bundle.legacy';\n\nexport default {\n  props: {\n    shelf_display_puzzle: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      image: '',\n      originalImageWidth: 0,\n      originalImageHeight: 0,\n      puzzle: [],\n      puzzleWidth: 0,\n      currentSwap: {\n        sourceId: null,\n        targetId: null,\n      },\n      isFinished: false,\n      // This property is used in conjunction as the key for each puzzle piece item\n      // and is being counted up every time the DOM has been manipulated by the Swappable\n      // library. This causes vue to re-render all the list items to reflect the current\n      // data state correctly.\n      componentKey: 0,\n    };\n  },\n\n  computed: {\n    rows() {\n      const rows = get(this.shelf_display_puzzle, 'size.rows') || 4;\n\n      return parseInt(rows, 10);\n    },\n\n    columns() {\n      const columns = get(this.shelf_display_puzzle, 'size.columns') || 4;\n\n      return parseInt(columns, 10);\n    },\n\n    columnWidth() {\n      return 100 / this.columns;\n    },\n\n    columnHeight() {\n      return 100 / this.rows;\n    },\n\n    puzzleHeight() {\n      const heightRatio = this.puzzleWidth / this.originalImageWidth;\n\n      return this.originalImageHeight * heightRatio;\n    },\n\n    sortedPuzzle() {\n      return sortBy(this.puzzle, 'index');\n    },\n\n    hasSuccessMessage() {\n      return this.successMessage && this.successMessage.length > 0;\n    },\n\n    successMessage() {\n      return this.shelf_display_puzzle.success_message;\n    },\n  },\n\n  watch: {\n    shelf_display_puzzle: {\n      immediate: true,\n      deep: true,\n      handler(shelfDisplayPuzzle) {\n        const image = get(shelfDisplayPuzzle, 'image.sizes.post-thumbnail');\n\n        if (image && image.length > 0) {\n          this.image = image;\n        }\n      },\n    },\n\n    image: {\n      immediate: true,\n      handler(image) {\n        if (!image || image.length === 0) {\n          return;\n        }\n\n        this.imageInstance = new Image();\n\n        this.imageInstance.onload = () => {\n          this.generatePuzzle();\n        };\n\n        this.imageInstance.src = image;\n      },\n    },\n  },\n\n  methods: {\n    generatePuzzle() {\n      this.storeOriginalImageDimensions();\n      this.createPuzzlePieces();\n      this.shufflePuzzlePieces();\n\n      this.$nextTick(() => {\n        this.createSwappableInstance();\n      });\n    },\n\n    createPuzzlePieces() {\n      let index = 0;\n      const puzzle = [];\n\n      for (let row = 0; row < this.rows; row += 1) {\n        for (let column = 0; column < this.columns; column += 1) {\n          puzzle.push({\n            id: `${row}-${column}`,\n            row,\n            column,\n            originalIndex: index,\n            index,\n          });\n\n          index += 1;\n        }\n      }\n\n      this.puzzle = puzzle;\n    },\n\n    shufflePuzzlePieces() {\n      const availableIndices = [...Array(this.columns * this.rows).keys()];\n\n      this.puzzle = this.puzzle.map(piece => {\n        const index = availableIndices\n          .splice(Math.floor(Math.random() * availableIndices.length), 1);\n\n        /* eslint-disable prefer-destructuring, no-param-reassign */\n        piece.index = index[0];\n        /* eslint-enable */\n\n        return piece;\n      });\n    },\n\n    createSwappableInstance() {\n      const container = this.$refs.puzzleContainer.querySelector('.puzzle-pieces-container');\n\n      this.swappable = new Swappable(container, {\n        draggable: '.puzzle-piece',\n      });\n\n      this.swappable.on('swappable:swapped', payload => {\n        this.currentSwap.sourceId = payload.data.dragEvent.data.source.dataset.id;\n        this.currentSwap.targetId = payload.data.swappedElement.dataset.id;\n      });\n      this.swappable.on('swappable:stop', () => {\n        if (this.isCurrentSwapValid()) {\n          const sourcePiece = this.puzzle.find(piece => piece.id === this.currentSwap.sourceId);\n          const targetPiece = this.puzzle.find(piece => piece.id === this.currentSwap.targetId);\n\n          const sourceIndex = clone(sourcePiece.index);\n\n          sourcePiece.index = clone(targetPiece.index);\n          targetPiece.index = sourceIndex;\n\n          this.$nextTick(() => {\n            this.componentKey += 1;\n\n            this.checkWinConditions();\n          });\n        }\n\n        this.resetCurrentSwap();\n      });\n    },\n\n    checkWinConditions() {\n      this.isFinished = this.puzzle.every(piece => piece.index === piece.originalIndex);\n    },\n\n    determinePuzzleWidth() {\n      this.puzzleWidth = this.$refs.puzzleContainer.getBoundingClientRect().width;\n    },\n\n    storeOriginalImageDimensions() {\n      this.originalImageWidth = this.imageInstance.width;\n      this.originalImageHeight = this.imageInstance.height;\n    },\n\n    getPieceDimensions() {\n      return {\n        width: this.puzzleWidth / this.columns,\n        height: this.puzzleHeight / this.rows,\n      };\n    },\n\n    getPieceXOffset(piece) {\n      const pieceWidth = this.getPieceDimensions().width;\n      const pieceOffset = pieceWidth * piece.column * -1;\n\n      return `${pieceOffset}px`;\n    },\n\n    getPieceYOffset(piece) {\n      const pieceHeight = this.getPieceDimensions().height;\n      const pieceOffset = pieceHeight * piece.row * -1;\n\n      return `${pieceOffset}px`;\n    },\n\n    isCurrentSwapValid() {\n      return this.currentSwap.sourceId !== null && this.currentSwap.targetId !== null;\n    },\n\n    resetCurrentSwap() {\n      this.currentSwap.sourceId = null;\n      this.currentSwap.targetId = null;\n    },\n\n    restart() {\n      this.isFinished = false;\n      this.shufflePuzzlePieces();\n    },\n\n    visibilityChanged(isVisible) {\n      if (isVisible) {\n        this.determinePuzzleWidth();\n      }\n    },\n  },\n\n  mounted() {\n    this.determinePuzzleWidth();\n\n    const onResizeListener = () => {\n      this.determinePuzzleWidth();\n    };\n\n    window.addEventListener('resize', onResizeListener);\n\n    this.$once('hook:destroyed', () => {\n      window.removeEventListener('resize', onResizeListener);\n    });\n  },\n};\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.puzzle {\n  &-piece {\n\n    &.with-outline {\n      outline: 2px solid #0099FF;\n    }\n\n    &-indicator {\n      @apply opacity-0;\n\n      transition: opacity 0.1s ease;\n    }\n\n    &.draggable-source--is-dragging &-indicator {\n      @apply opacity-75;\n    }\n  }\n\n  &-win-overlay {\n    @apply absolute;\n    @apply left-0;\n    @apply top-0;\n    @apply w-full;\n    @apply h-full;\n    @apply bg-blue-500;\n    @apply z-10;\n    @apply opacity-50;\n\n    animation-name: flash;\n    animation-duration: 1s;\n    animation-timing-function: ease;\n  }\n\n  &-restart-button {\n    @apply p-0;\n    @apply text-gray-900;\n    @apply underline;\n    @apply text-3xl;\n    @apply font-normal;\n  }\n\n  /deep/ .draggable-mirror {\n    @apply opacity-75;\n  }\n}\n\n@keyframes flash {\n  0%,\n  25%,\n  75% {\n    @apply opacity-0;\n  }\n\n  50%,\n  100% {\n    @apply opacity-50;\n  }\n}\n\n</style>\n"],"sourceRoot":"src/components/content"}]}