{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/services/api/PharmacyService.js","dependencies":[{"path":"/app/src/services/api/PharmacyService.js","mtime":1683275992574},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgUGhhcm1hY3lNYXBwZXIgZnJvbSAnQC9zZXJ2aWNlcy9tYXBwZXIvUGhhcm1hY3lNYXBwZXInOwoKdmFyIFBoYXJtYWN5U2VydmljZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFBoYXJtYWN5U2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQaGFybWFjeVNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFBoYXJtYWN5U2VydmljZSwgbnVsbCwgW3sKICAgIGtleTogImZldGNoQWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmZXRjaEFsbCgpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB3aW5kb3cuYXhpb3MuZ2V0KCcvd3AtanNvbi9hcG92b2ljZS92MS9waGFybWFjaWVzLycpLnRoZW4oZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICAgIHZhciBkYXRhID0gX3JlZi5kYXRhOwogICAgICAgICAgcmV0dXJuIHJlc29sdmUoZGF0YS5tYXAoZnVuY3Rpb24gKHBoYXJtYWN5KSB7CiAgICAgICAgICAgIHJldHVybiBQaGFybWFjeU1hcHBlci5tYXBQaGFybWFjeShwaGFybWFjeSk7CiAgICAgICAgICB9KSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmV0Y2hCeUlkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmZXRjaEJ5SWQoaWQpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB3aW5kb3cuYXhpb3MuZ2V0KCIvd3AtanNvbi9hcG92b2ljZS92MS9waGFybWFjaWVzLyIuY29uY2F0KGlkKSkudGhlbihmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICAgIHZhciBkYXRhID0gX3JlZjIuZGF0YTsKICAgICAgICAgIHJldHVybiByZXNvbHZlKFBoYXJtYWN5TWFwcGVyLm1hcFBoYXJtYWN5KGRhdGEpKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBQaGFybWFjeVNlcnZpY2U7Cn0oKTsKCmV4cG9ydCB7IFBoYXJtYWN5U2VydmljZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/app/src/services/api/PharmacyService.js"],"names":["PharmacyMapper","PharmacyService","Promise","resolve","reject","window","axios","get","then","data","map","pharmacy","mapPharmacy","catch","error","id"],"mappings":";;;;;AAAA,OAAOA,cAAP,MAA2B,kCAA3B;;IAEqBC,e;;;;;;;;;+BACD;AAChB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiB,kCAAjB,EACGC,IADH,CACQ;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,iBAAcN,OAAO,CAACM,IAAI,CAACC,GAAL,CAAS,UAAAC,QAAQ;AAAA,mBAAIX,cAAc,CAACY,WAAf,CAA2BD,QAA3B,CAAJ;AAAA,WAAjB,CAAD,CAArB;AAAA,SADR,EAEGE,KAFH,CAES,UAAAC,KAAK;AAAA,iBAAIV,MAAM,CAACU,KAAD,CAAV;AAAA,SAFd;AAGD,OAJM,CAAP;AAKD;;;8BAEgBC,E,EAAI;AACnB,aAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CAAaC,GAAb,2CAAoDQ,EAApD,GACGP,IADH,CACQ;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBAAcN,OAAO,CAACH,cAAc,CAACY,WAAf,CAA2BH,IAA3B,CAAD,CAArB;AAAA,SADR,EAEGI,KAFH,CAES,UAAAC,KAAK;AAAA,iBAAIV,MAAM,CAACU,KAAD,CAAV;AAAA,SAFd;AAGD,OAJM,CAAP;AAKD;;;;;;SAfkBb,e","sourcesContent":["import PharmacyMapper from '@/services/mapper/PharmacyMapper';\n\nexport default class PharmacyService {\n  static fetchAll() {\n    return new Promise((resolve, reject) => {\n      window.axios.get('/wp-json/apovoice/v1/pharmacies/')\n        .then(({ data }) => resolve(data.map(pharmacy => PharmacyMapper.mapPharmacy(pharmacy))))\n        .catch(error => reject(error));\n    });\n  }\n\n  static fetchById(id) {\n    return new Promise((resolve, reject) => {\n      window.axios.get(`/wp-json/apovoice/v1/pharmacies/${id}`)\n        .then(({ data }) => resolve(PharmacyMapper.mapPharmacy(data)))\n        .catch(error => reject(error));\n    });\n  }\n}\n"]}]}