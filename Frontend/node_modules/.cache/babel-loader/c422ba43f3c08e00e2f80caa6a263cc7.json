{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/App.vue","mtime":1683275992542},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    id=\"app\"\n    class=\"flex flex-col font-display text-gray-900\"\n    :class=\"themeClass\"\n  >\n    <apo-header />\n    <apo-page-progress class=\"page-progress\" />\n\n    <vue-page-transition name=\"fade-in-up\">\n      <apo-pharmacy-confirmation-modal v-if=\"isAuthenticated && showUpdatePharmacyModal\" />\n    </vue-page-transition>\n    <vue-page-transition name=\"fade-in-up\">\n      <apo-stage\n        v-if=\"stageData && isAuthenticated\"\n        :stage-data=\"stageData\"\n      />\n    </vue-page-transition>\n\n    <main class=\"flex-auto\">\n      <vue-page-transition name=\"fade-in-up\">\n        <router-view />\n      </vue-page-transition>\n      <apo-cookies-settings v-if=\"language !== 'en'\" />\n    </main>\n\n    <apo-footer />\n  </div>\n</template>\n\n<script>\n\nimport last from 'lodash/last';\nimport { mapGetters, mapState } from 'vuex';\nimport Header from '@/components/template/Header.vue';\nimport Stage from '@/components/template/Stage.vue';\nimport Footer from '@/components/template/Footer.vue';\nimport CookiesSettings from '@/components/template/CookiesSettings.vue';\nimport PharmacyConfirmationModal from '@/components/pharmacies/PharmacyConfirmationModal.vue';\nimport PageProgress from '@/components/template/PageProgress.vue';\nimport PageService from '@/services/api/PageService';\nimport {\n  PAGES_FETCH_MENUS,\n  SETTINGS_FETCH_SETTINGS,\n  SETTINGS_SET_CURRENT_VIEWPORT,\n} from '@/store/types/action-types';\n\nconst screens = require('./tailwind/Screens');\n\nexport default {\n  components: {\n    'apo-footer': Footer,\n    'apo-stage': Stage,\n    'apo-header': Header,\n    'apo-page-progress': PageProgress,\n    'apo-cookies-settings': CookiesSettings,\n    'apo-pharmacy-confirmation-modal': PharmacyConfirmationModal,\n  },\n  data() {\n    return {\n      stageData: '',\n    };\n  },\n\n  computed: {\n    ...mapGetters(['isAuthenticated', 'theme', 'settingsLoaded', 'language', 'showUpdatePharmacyModal']),\n    ...mapState({\n      settings: state => state.settings.settings,\n    }),\n\n    themeClass() {\n      return `theme-${this.theme}`;\n    },\n\n    sortedScreens() {\n      return Object.entries(screens)\n        .sort(([, minWidthA], [, minWidthB]) => {\n          const a = parseInt(minWidthA, 10);\n          const b = parseInt(minWidthB, 10);\n\n          if (a > b) {\n            return 1;\n          }\n\n          if (a < b) {\n            return -1;\n          }\n\n          return 0;\n        });\n    },\n  },\n\n  watch: {\n    isAuthenticated: {\n      immediate: true,\n      handler(isAuthenticated) {\n        if (isAuthenticated) {\n          window.eventBus.$emit('authenticated');\n        }\n      },\n    },\n    settingsLoaded: {\n      immediate: true,\n      handler(settingsLoaded) {\n        if (settingsLoaded) {\n          window.eventBus.$emit('settingsLoaded');\n        }\n      },\n    },\n\n    language: {\n      immediate: true,\n      handler(language) {\n        let docLang = language;\n        if (language === 'at') { docLang = 'de'; }\n        document.documentElement.lang = docLang;\n      },\n    },\n\n    $route: {\n      immediate: true,\n      handler(route) {\n        if (this.isAuthenticated) {\n          this.stageData = '';\n          this.loadStage(route);\n        }\n      },\n    },\n  },\n\n  methods: {\n    initializeState() {\n      this.$store.dispatch(SETTINGS_FETCH_SETTINGS);\n      this.$store.dispatch(PAGES_FETCH_MENUS);\n      if (this.isAuthenticated) {\n        this.$Progress.start();\n        this.$Progress.set(30);\n        PageService.getPages()\n          .then(data => {\n            this.$store.commit('addPageContent', data);\n            const tmpData = data.filter(page => page.acf.slides);\n            tmpData.forEach(page => {\n              this.$store.commit('addStage', { name: page.slug, stage: { minimum_height: page.acf.minimum_height, slides: page.acf.slides } });\n            });\n            this.$Progress.finish();\n            this.loadStage(this.$route);\n          });\n      }\n    },\n\n    loadStage(route) {\n      const storedData = this.$store.state.pages.stages.filter(stage => stage.name === route.path.replace(/\\//g, '')).length === 1 ? this.$store.state.pages.stages.filter(stage => stage.name === route.path.replace(/\\//g, ''))[0].stage : '';\n      if (storedData) {\n        window.setTimeout(() => {\n          this.stageData = storedData;\n        }, 100);\n      }\n    },\n\n    initializeCodeSnippets() {\n      const unwatch = this.$watch('settings', settings => {\n        unwatch();\n\n        this.evaluateCodeSnippets(settings.headCodeSnippets, 'head');\n        this.evaluateCodeSnippets(settings.bodyCodeSnippets, 'body');\n      });\n    },\n\n    evaluateCodeSnippets(snippets, wrappingElement) {\n      this.cleanSnippets(snippets).forEach(codeSnippet => {\n        const attributes = this.extractAttributes(codeSnippet);\n        const scriptTag = document.createElement('script');\n        let fn = null;\n\n        Object.keys(attributes).forEach(key => {\n          if (key === 'onload') {\n            fn = attributes[key];\n          }\n          scriptTag.setAttribute(key, attributes[key]);\n        });\n\n        if (!scriptTag.hasAttribute('type')) {\n          scriptTag.type = 'text/javascript';\n        }\n\n        const strippedCodeSnippet = codeSnippet.replace(/<script[^>]*>/im, '');\n\n        scriptTag.text = strippedCodeSnippet;\n\n        this.loadAsync(scriptTag, wrappingElement)\n          .then(() => {\n            if (fn) {\n              try {\n              // eslint-disable-next-line no-eval\n                eval(fn);\n              } catch (e) {\n                console.log(e);\n              }\n            }\n          });\n      });\n    },\n\n    loadAsync(script, wrappingElement) {\n      return new Promise(resolve => {\n        document.getElementsByTagName(wrappingElement)[0].appendChild(script);\n\n        script.addEventListener('load', () => {\n          // this timeout is required to execute correctly all onload functions\n          // this isn't a great solution but its not so common to add onload attributes\n          // and a good workaround\n          setTimeout(() => {\n            resolve(true);\n          }, 350);\n        });\n      });\n    },\n\n    cleanSnippets(snippets) {\n      return snippets\n        .split(/<\\/script>/im)\n        .map(snippet => snippet.replace(/<!--(.*?)-->/im, ''))\n        .map(snippet => snippet.trim())\n        .filter(snippet => snippet.length > 0);\n    },\n\n    extractAttributes(snippet) {\n      const attributesWithValues = snippet.match(/(\\S*)=\"(.*?)\"/g);\n      if (attributesWithValues) {\n        const values = attributesWithValues.map(a => a.match(/\"(.*?)\"/g)[0].replace(/\"/g, ''));\n        const attributes = attributesWithValues.map(a => a.match(/[^=]*/i)[0]);\n        return attributes.reduce((attribute, key, i) => ({ ...attribute, [key]: values[i] }), {});\n      }\n\n      return {};\n    },\n\n    registerViewportObserver() {\n      this.sortedScreens.forEach(([viewport, minWidth]) => {\n        const mediaQuery = window.matchMedia(`(min-width: ${minWidth})`);\n\n        const listener = event => {\n          if (event.matches) {\n            return this.$store.dispatch(SETTINGS_SET_CURRENT_VIEWPORT, viewport);\n          }\n\n          const matchingViewports = this.sortedScreens\n            // eslint-disable-next-line max-len\n            .filter(([, matchingMinWidth]) => parseInt(minWidth, 10) > parseInt(matchingMinWidth, 10))\n            .map(([matchingViewport]) => matchingViewport);\n\n          const currentViewport = matchingViewports.length > 0\n            ? last(matchingViewports)\n            : 'mobile';\n\n          return this.$store.dispatch(SETTINGS_SET_CURRENT_VIEWPORT, currentViewport);\n        };\n\n        mediaQuery.addListener(listener);\n\n        this.$once('hook:destroyed', () => {\n          mediaQuery.removeListener(listener);\n        });\n\n        if (mediaQuery.matches) {\n          this.$store.dispatch(SETTINGS_SET_CURRENT_VIEWPORT, viewport);\n        }\n      });\n    },\n  },\n\n  created() {\n    this.initializeState();\n    this.initializeCodeSnippets();\n  },\n\n  mounted() {\n    this.registerViewportObserver();\n  },\n};\n\n</script>\n\n<style lang=\"scss\">\n*::selection{\n  @apply bg-purple-500;\n  @apply text-white;\n}\n\nhtml,\nbody,\n#app {\n  min-height: 100vh;\n}\n\nbody {\n  @apply bg-white;\n}\n\n.page-progress {\n  margin-top: calc(theme('spacing.px') * -2);\n}\n\n.text-media-paragraph__copy {\n  a {\n    text-decoration: underline;\n  }\n}\n\n@media (min-width: theme('screens.desktop')) {\n  .spacer-module {\n    padding: 3.125rem 0 !important;\n\n    .text-media-paragraph__copy {\n      margin-top: 0 !important;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src"}]}