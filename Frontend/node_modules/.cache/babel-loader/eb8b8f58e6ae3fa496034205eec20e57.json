{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/services/api/SurveyService.js","dependencies":[{"path":"/app/src/services/api/SurveyService.js","mtime":1683275992574},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgU3VydmV5TWFwcGVyIGZyb20gJ0Avc2VydmljZXMvbWFwcGVyL1N1cnZleU1hcHBlcic7Cgp2YXIgU3VydmV5U2VydmljZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFN1cnZleVNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3VydmV5U2VydmljZSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU3VydmV5U2VydmljZSwgbnVsbCwgW3sKICAgIGtleTogImZldGNoQWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmZXRjaEFsbCgpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB3aW5kb3cuYXhpb3MuZ2V0KCcvd3AtanNvbi93Yy92Mi9zdXJ2ZXlzX2ZpbHRlcmVkP3Blcl9wYWdlPTEwMCcpLnRoZW4oZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICAgIHZhciBkYXRhID0gX3JlZi5kYXRhOwogICAgICAgICAgcmV0dXJuIHJlc29sdmUoZGF0YS5tYXAoU3VydmV5TWFwcGVyLm1hcFN1cnZleSkpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImZldGNoIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmZXRjaChzdXJ2ZXlJZCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHdpbmRvdy5heGlvcy5nZXQoIi93cC1qc29uL3dwL3YyL3N1cnZleXMvIi5jb25jYXQoc3VydmV5SWQpKS50aGVuKGZ1bmN0aW9uIChfcmVmMikgewogICAgICAgICAgdmFyIGRhdGEgPSBfcmVmMi5kYXRhOwogICAgICAgICAgcmV0dXJuIHJlc29sdmUoU3VydmV5TWFwcGVyLm1hcFN1cnZleShkYXRhKSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAic3RvcmVSZXN1bHRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9yZVJlc3VsdHMocGF5bG9hZCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHdpbmRvdy5heGlvcy5wb3N0KCcvd3AtanNvbi9zdXJ2ZXktdXNlci1yZXN1bHRzL3YxL3Jlc3VsdHMnLCBwYXlsb2FkKS50aGVuKGZ1bmN0aW9uIChfcmVmMykgewogICAgICAgICAgdmFyIGRhdGEgPSBfcmVmMy5kYXRhOwogICAgICAgICAgcmV0dXJuIHJlc29sdmUoZGF0YSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmV0Y2hMYXRlc3RzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmZXRjaExhdGVzdHMoKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgd2luZG93LmF4aW9zLmdldCgnL3dwLWpzb24vd2MvdjIvbGF0ZXN0LXN1cnZleXMvJykudGhlbihmdW5jdGlvbiAoX3JlZjQpIHsKICAgICAgICAgIHZhciBkYXRhID0gX3JlZjQuZGF0YTsKICAgICAgICAgIHJldHVybiByZXNvbHZlKGRhdGEubWFwKFN1cnZleU1hcHBlci5tYXBTdXJ2ZXkpKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBTdXJ2ZXlTZXJ2aWNlOwp9KCk7CgpleHBvcnQgeyBTdXJ2ZXlTZXJ2aWNlIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/app/src/services/api/SurveyService.js"],"names":["SurveyMapper","SurveyService","Promise","resolve","reject","window","axios","get","then","data","map","mapSurvey","catch","error","surveyId","payload","post"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,gCAAzB;;IAEqBC,a;;;;;;;;;+BACD;AAChB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CACGC,GADH,CACO,8CADP,EAEGC,IAFH,CAEQ;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,iBAAcN,OAAO,CAACM,IAAI,CAACC,GAAL,CAASV,YAAY,CAACW,SAAtB,CAAD,CAArB;AAAA,SAFR,EAGGC,KAHH,CAGS,UAAAC,KAAK;AAAA,iBAAIT,MAAM,CAACS,KAAD,CAAV;AAAA,SAHd;AAID,OALM,CAAP;AAMD;;;0BAEYC,Q,EAAU;AACrB,aAAO,IAAIZ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CACGC,GADH,kCACiCO,QADjC,GAEGN,IAFH,CAEQ;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBAAcN,OAAO,CAACH,YAAY,CAACW,SAAb,CAAuBF,IAAvB,CAAD,CAArB;AAAA,SAFR,EAGGG,KAHH,CAGS,UAAAC,KAAK;AAAA,iBAAIT,MAAM,CAACS,KAAD,CAAV;AAAA,SAHd;AAID,OALM,CAAP;AAMD;;;iCAEmBE,O,EAAS;AAC3B,aAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CACGU,IADH,CACQ,yCADR,EACmDD,OADnD,EAEGP,IAFH,CAEQ;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBAAcN,OAAO,CAACM,IAAD,CAArB;AAAA,SAFR,EAGGG,KAHH,CAGS,UAAAC,KAAK;AAAA,iBAAIT,MAAM,CAACS,KAAD,CAAV;AAAA,SAHd;AAID,OALM,CAAP;AAMD;;;mCAEqB;AACpB,aAAO,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CACGC,GADH,CACO,gCADP,EAEGC,IAFH,CAEQ;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBAAcN,OAAO,CAACM,IAAI,CAACC,GAAL,CAASV,YAAY,CAACW,SAAtB,CAAD,CAArB;AAAA,SAFR,EAGGC,KAHH,CAGS,UAAAC,KAAK;AAAA,iBAAIT,MAAM,CAACS,KAAD,CAAV;AAAA,SAHd;AAID,OALM,CAAP;AAMD;;;;;;SAnCkBZ,a","sourcesContent":["import SurveyMapper from '@/services/mapper/SurveyMapper';\n\nexport default class SurveyService {\n  static fetchAll() {\n    return new Promise((resolve, reject) => {\n      window.axios\n        .get('/wp-json/wc/v2/surveys_filtered?per_page=100')\n        .then(({ data }) => resolve(data.map(SurveyMapper.mapSurvey)))\n        .catch(error => reject(error));\n    });\n  }\n\n  static fetch(surveyId) {\n    return new Promise((resolve, reject) => {\n      window.axios\n        .get(`/wp-json/wp/v2/surveys/${surveyId}`)\n        .then(({ data }) => resolve(SurveyMapper.mapSurvey(data)))\n        .catch(error => reject(error));\n    });\n  }\n\n  static storeResults(payload) {\n    return new Promise((resolve, reject) => {\n      window.axios\n        .post('/wp-json/survey-user-results/v1/results', payload)\n        .then(({ data }) => resolve(data))\n        .catch(error => reject(error));\n    });\n  }\n\n  static fetchLatests() {\n    return new Promise((resolve, reject) => {\n      window.axios\n        .get('/wp-json/wc/v2/latest-surveys/')\n        .then(({ data }) => resolve(data.map(SurveyMapper.mapSurvey)))\n        .catch(error => reject(error));\n    });\n  }\n}"]}]}