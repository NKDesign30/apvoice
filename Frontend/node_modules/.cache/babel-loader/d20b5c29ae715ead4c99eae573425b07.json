{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/training/quiz/TrainingQuiz.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/training/quiz/TrainingQuiz.vue","mtime":1683275992567},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TrainingQuiz.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"p-12 mt-24 training-quiz force-full-width background-class\">\n    <div\n      v-if=\"headline || subheadline\"\n      class=\"container text-gray-900 training-quiz__headlines mb-7\"\n    >\n      <h2\n        class=\"text-center\"\n        v-html=\"$options.filters.formatContent(headline)\"\n      />\n\n      <h3\n        v-if=\"subheadline\"\n        class=\"mt-6 text-center\"\n        v-html=\"$options.filters.formatContent(subheadline)\"\n      />\n    </div>\n    <div class=\"container training-quiz__body\">\n      <apo-training-quiz-item\n        :quiz=\"currentChapter\"\n        :is-last-chapter=\"isLastChapter\"\n        @submit-answer=\"processAnswer\"\n        @update-chapter=\"updateChapter\"\n      >\n        <apo-progress\n          class=\"mt-4\"\n          :chapter=\"chapter\"\n          :total-chapters=\"chapters.length\"\n          :interactive=\"false\"\n        />\n      </apo-training-quiz-item>\n      <apo-references\n        class=\"mt-8\"\n        :references=\"currentChapter.references\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nimport {\n  AUTH_UPDATE_USER,\n  TRAININGS_UPDATE_ONE_TRAINING_SERIES,\n} from '@/store/types/mutation-types';\nimport { AUTH_FETCH_CURRENT_USER, AUTH_FETCH_USER_LEVEL_DATA } from '@/store/types/action-types';\nimport TrainingQuizItem from '@/components/training/quiz/TrainingQuizItem.vue';\nimport Progress from '@/components/ui/Progress.vue';\nimport TrainingMapper from '@/services/mapper/TrainingMapper';\nimport TrainingService from '@/services/api/TrainingService';\nimport TrainingSeriesService from '@/services/api/TrainingSeriesService';\n\nexport default {\n  inject: ['pageIndicatorsState', 'trainingsState'],\n\n  components: {\n    'apo-training-quiz-item': TrainingQuizItem,\n    'apo-progress': Progress,\n  },\n  props: {\n    trainingSeriesId: {\n      required: true,\n      validator: prop => typeof prop === 'number' || prop === null,\n    },\n    trainingId: {\n      required: true,\n      validator: prop => typeof prop === 'number' || prop === null,\n    },\n    lesson_id: {\n      type: String,\n      required: true,\n    },\n    headline: {\n      type: String,\n      required: false,\n      default: '',\n    },\n    subheadline: {\n      type: String,\n      required: false,\n      default: '',\n    },\n    chapters: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      chapter: 1,\n      answers: [],\n    };\n  },\n  computed: {\n    ...mapGetters(['userId', 'user']),\n\n    currentChapter() {\n      return this.chapters[this.chapter - 1];\n    },\n\n    isFirstChapter() {\n      return this.chapter === 1;\n    },\n\n    isLastChapter() {\n      return this.chapter === this.chapters.length;\n    },\n  },\n  methods: {\n    ...mapMutations([AUTH_UPDATE_USER, TRAININGS_UPDATE_ONE_TRAINING_SERIES]),\n\n    processAnswer(answer) {\n      const currentAnswer = {\n        ...answer,\n        chapter: {\n          id: this.currentChapter.id,\n          chapter: this.chapter,\n        },\n      };\n      this.answers.push(currentAnswer);\n    },\n    updateChapter() {\n      if (this.isLastChapter) {\n        this.checkRequirements();\n        return;\n      }\n      this.chapter += 1;\n    },\n    checkRequirements() {\n      if (this.hasRequiredElementsFilled()) {\n        this.storeAnswers();\n      }\n    },\n    hasRequiredElementsFilled() {\n      const element = this.trainingsState.requiredElements.find(\n        state => !state.hasSubmitted,\n      );\n      if (element) {\n        this.pageIndicatorsState.activePageIndicator = element.pageIndicatorId;\n        this.trainingsState.currentMissingElement = element.question_id;\n        return false;\n      }\n      return true;\n    },\n    storeAnswers() {\n      // eslint-disable-next-line camelcase\n      const { id, lesson_id } = this.$route.params;\n      const params = {\n        user_id: this.userId,\n        training_id: this.trainingId,\n        lesson_id,\n        training_series_id: this.trainingSeriesId,\n      };\n      this.$store.dispatch('wait/start', 'submitTrainingQuiz', { root: true });\n      TrainingService.storeLessonResults(\n        TrainingMapper.createPayload(this.answers, params),\n      )\n        .then(response => {\n          const copiedUser = this.user;\n          const completedLessons = {};\n          response.result.forEach(item => {\n            completedLessons[item.lesson_id] = item.lesson_id;\n          });\n          copiedUser.trainingResults[response.training_id] = {\n            is_complete: response.is_complete,\n            completed_lessons: completedLessons,\n          };\n          this[AUTH_UPDATE_USER](copiedUser);\n          //this[AUTH_FETCH_USER_LEVEL_DATA](); // update user's points earned - ApoUserLevels plugin\n          this.$store.dispatch(AUTH_FETCH_CURRENT_USER);\n\n          TrainingSeriesService.fetch(this.trainingSeriesId).then(\n            trainingSeries => {\n              this[TRAININGS_UPDATE_ONE_TRAINING_SERIES](trainingSeries);\n              this.$store.dispatch('wait/end', 'submitTrainingQuiz', { root: true });\n              this.$store.dispatch(AUTH_FETCH_USER_LEVEL_DATA, {})\n              this.$router.push({\n                name: 'training-success-page',\n                params: {\n                  slug: trainingSeries.slug,\n                  series_id: this.trainingSeriesId,\n                  id,\n                  lesson_id,\n                  origin: this.$route.name\n                },\n              });\n            },\n          );\n        })\n        .catch(error => {\n          this.$store.dispatch('wait/end', 'submitTrainingQuiz', { root: true });\n          console.log('error storing training lesson result', error);\n        });\n    },\n  },\n  destroyed() {\n    this.answers = [];\n    this.chapter = 1;\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .force-full-width {\n    margin-left: calc(-50vw + 50%);\n    width: 100vw;\n  }\n\n  .theme-training {\n    .background-class {\n      @apply bg-training-50;\n    }\n  }\n  .theme-scientific {\n    .background-class {\n      @apply bg-scientific-50;\n    }\n  }\n</style>\n"],"sourceRoot":"src/components/training/quiz"}]}