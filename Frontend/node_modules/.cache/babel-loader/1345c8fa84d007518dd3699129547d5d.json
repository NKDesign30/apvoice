{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/ui/RadialProgressBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/ui/RadialProgressBar.vue","mtime":1683275992569},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RadialProgressBar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"radial-progress-container\"\n    :style=\"containerStyle\"\n  >\n    <div\n      class=\"radial-progress-inner\"\n      :style=\"innerCircleStyle\"\n    >\n      <slot />\n    </div>\n    <svg\n      class=\"radial-progress-bar\"\n      :width=\"diameter\"\n      :height=\"diameter\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <defs>\n        <radialGradient\n          :id=\"'radial-gradient' + _uid\"\n          :cx=\"gradient.cx\"\n          :cy=\"gradient.cy\"\n          :r=\"gradient.r\"\n        >\n          <stop\n            offset=\"30%\"\n            :stop-color=\"startColor\"\n          />\n          <stop\n            offset=\"100%\"\n            :stop-color=\"stopColor\"\n          />\n        </radialGradient>\n      </defs>\n      <circle\n        :r=\"innerCircleRadius\"\n        :cx=\"radius\"\n        :cy=\"radius\"\n        fill=\"transparent\"\n        :stroke=\"innerStrokeColor\"\n        :stroke-dasharray=\"circumference\"\n        stroke-dashoffset=\"0\"\n        stroke-linecap=\"round\"\n        :style=\"strokeStyle\"\n      />\n      <circle\n        :transform=\"'rotate(270, ' + radius + ',' + radius + ')'\"\n        :r=\"innerCircleRadius\"\n        :cx=\"radius\"\n        :cy=\"radius\"\n        fill=\"transparent\"\n        :stroke=\"'url(#radial-gradient' + _uid + ')'\"\n        :stroke-dasharray=\"circumference\"\n        :stroke-dashoffset=\"circumference\"\n        stroke-linecap=\"round\"\n        :style=\"progressStyle\"\n      />\n    </svg>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    diameter: {\n      type: Number,\n      required: false,\n      default: 200,\n    },\n    totalSteps: {\n      type: Number,\n      required: true,\n      default: 10,\n    },\n    completedSteps: {\n      type: Number,\n      required: true,\n      default: 0,\n    },\n    startColor: {\n      type: String,\n      required: false,\n      default: '#bbff42',\n    },\n    stopColor: {\n      type: String,\n      required: false,\n      default: '#429321',\n    },\n    strokeWidth: {\n      type: Number,\n      required: false,\n      default: 10,\n    },\n    animateSpeed: {\n      type: Number,\n      required: false,\n      default: 1000,\n    },\n    innerStrokeColor: {\n      type: String,\n      required: false,\n      default: '#323232',\n    },\n    fps: {\n      type: Number,\n      required: false,\n      default: 60,\n    },\n    timingFunc: {\n      type: String,\n      required: false,\n      default: 'linear',\n    },\n  },\n\n  data() {\n    return {\n      gradient: {\n        fx: 0.99,\n        fy: 0.5,\n        cx: 0.5,\n        cy: 0.5,\n        r: 0.65,\n      },\n      gradientAnimation: null,\n      currentAngle: 0,\n      strokeDashoffset: 0,\n    };\n  },\n\n  computed: {\n    radius() {\n      return this.diameter / 2;\n    },\n\n    circumference() {\n      return Math.PI * this.innerCircleDiameter;\n    },\n\n    stepSize() {\n      if (this.totalSteps === 0) {\n        return 0;\n      }\n\n      return 100 / this.totalSteps;\n    },\n\n    finishedPercentage() {\n      return this.stepSize * this.completedSteps;\n    },\n\n    circleSlice() {\n      return 2 * Math.PI / this.totalSteps;\n    },\n\n    animateSlice() {\n      return this.circleSlice / this.totalPoints;\n    },\n\n    innerCircleDiameter() {\n      return this.diameter - (this.strokeWidth * 2);\n    },\n\n    innerCircleRadius() {\n      return this.innerCircleDiameter / 2;\n    },\n\n    totalPoints() {\n      return this.animateSpeed / this.animationIncrements;\n    },\n\n    animationIncrements() {\n      return 1000 / this.fps;\n    },\n\n    hasGradient() {\n      return this.startColor !== this.stopColor;\n    },\n\n    containerStyle() {\n      return {\n        height: `${this.diameter}px`,\n        width: `${this.diameter}px`,\n      };\n    },\n\n    progressStyle() {\n      return {\n        height: `${this.diameter}px`,\n        width: `${this.diameter}px`,\n        strokeWidth: `${this.strokeWidth}px`,\n        strokeDashoffset: this.strokeDashoffset,\n        transition: `stroke-dashoffset ${this.animateSpeed}ms ${this.timingFunc}`,\n      };\n    },\n\n    strokeStyle() {\n      return {\n        height: `${this.diameter}px`,\n        width: `${this.diameter}px`,\n        strokeWidth: `${this.strokeWidth}px`,\n      };\n    },\n\n    innerCircleStyle() {\n      return {\n        width: `${this.innerCircleDiameter}px`,\n      };\n    },\n  },\n\n  watch: {\n    totalSteps() {\n      this.changeProgress({ isAnimate: true });\n    },\n\n    completedSteps() {\n      this.changeProgress({ isAnimate: true });\n    },\n\n    diameter() {\n      this.changeProgress({ isAnimate: true });\n    },\n\n    strokeWidth() {\n      this.changeProgress({ isAnimate: true });\n    },\n  },\n\n  methods: {\n    getStopPointsOfCircle(steps) {\n      const points = [];\n\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < steps; i++) {\n        const angle = this.circleSlice * i;\n        points.push(this.getPointOfCircle(angle));\n      }\n\n      return points;\n    },\n\n    getPointOfCircle(angle) {\n      const radius = 0.5;\n\n      const x = radius + (radius * Math.cos(angle));\n      const y = radius + (radius * Math.sin(angle));\n\n      return { x, y };\n    },\n\n    gotoPoint() {\n      const point = this.getPointOfCircle(this.currentAngle);\n\n      this.gradient.fx = point.x;\n      this.gradient.fy = point.y;\n    },\n\n    changeProgress({ isAnimate = true }) {\n      this.strokeDashoffset = ((100 - this.finishedPercentage) / 100) * this.circumference;\n\n      if (this.gradientAnimation) {\n        clearInterval(this.gradientAnimation);\n      }\n\n      if (!isAnimate) {\n        this.gotoNextStep();\n        return;\n      }\n\n      const angleOffset = (this.completedSteps - 1) * this.circleSlice;\n      let i = (this.currentAngle - angleOffset) / this.animateSlice;\n      const incrementer = Math.abs(i - this.totalPoints) / this.totalPoints;\n      const isMoveForward = i < this.totalPoints;\n\n      this.gradientAnimation = setInterval(() => {\n        // eslint-disable-next-line no-mixed-operators\n        if (isMoveForward && i >= this.totalPoints\n            // eslint-disable-next-line no-mixed-operators\n            || !isMoveForward && i < this.totalPoints) {\n          clearInterval(this.gradientAnimation);\n          return;\n        }\n\n        this.currentAngle = angleOffset + (this.animateSlice * i);\n        this.gotoPoint();\n\n        i += isMoveForward ? incrementer : -incrementer;\n      }, this.animationIncrements);\n    },\n\n    gotoNextStep() {\n      this.currentAngle = this.completedSteps * this.circleSlice;\n      this.gotoPoint();\n    },\n  },\n\n  created() {\n    this.changeProgress({ isAnimate: false });\n  },\n};\n</script>\n\n<style>\n.radial-progress-container {\n  position: relative;\n}\n\n.radial-progress-inner {\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n  position: absolute;\n  border-radius: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n"],"sourceRoot":"src/components/ui"}]}