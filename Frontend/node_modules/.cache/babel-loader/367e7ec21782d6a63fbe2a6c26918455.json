{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/services/api/TaxonomyService.js","dependencies":[{"path":"/app/src/services/api/TaxonomyService.js","mtime":1683275992574},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwoKLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovCmltcG9ydCBUYXhvbm9teU1hcHBlciBmcm9tICdAL3NlcnZpY2VzL21hcHBlci9UYXhvbm9teU1hcHBlcic7Cgp2YXIgVGF4b25vbXlTZXJ2aWNlID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gVGF4b25vbXlTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRheG9ub215U2VydmljZSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoVGF4b25vbXlTZXJ2aWNlLCBudWxsLCBbewogICAga2V5OiAiZmV0Y2hBbGwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoQWxsKCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHdpbmRvdy5heGlvcy5nZXQoJy93cC1qc29uL3dwL3YyL3RheG9ub21pZXMnKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgICAgICAgIHJldHVybiByZXNvbHZlKGRhdGEpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImZldGNoVHJhaW5pbmdDYXRlZ29yaWVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmZXRjaFRyYWluaW5nQ2F0ZWdvcmllcygpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB3aW5kb3cuYXhpb3MuZ2V0KCcvd3AtanNvbi93cC92Mi90cmFpbmluZy1jYXRlZ29yeT9wZXJfcGFnZT0xMDAnKS50aGVuKGZ1bmN0aW9uIChfcmVmMikgewogICAgICAgICAgdmFyIGRhdGEgPSBfcmVmMi5kYXRhOwogICAgICAgICAgcmV0dXJuIHJlc29sdmUoZGF0YS5tYXAoZnVuY3Rpb24gKGNhdGVnb3J5KSB7CiAgICAgICAgICAgIHJldHVybiBUYXhvbm9teU1hcHBlci5tYXBUcmFpbmluZ0NhdGVnb3J5KGNhdGVnb3J5KTsKICAgICAgICAgIH0pKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJmZXRjaERvd25sb2FkQ2F0ZWdvcmllcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZmV0Y2hEb3dubG9hZENhdGVnb3JpZXMoKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgd2luZG93LmF4aW9zLmdldCgnL3dwLWpzb24vd3AvdjIvZHdubGQtY2F0ZWdvcnk/cGVyX3BhZ2U9MTAwJykudGhlbihmdW5jdGlvbiAoX3JlZjMpIHsKICAgICAgICAgIHZhciBkYXRhID0gX3JlZjMuZGF0YTsKICAgICAgICAgIHJlc29sdmUoZGF0YS5tYXAoZnVuY3Rpb24gKGNhdGVnb3J5KSB7CiAgICAgICAgICAgIHJldHVybiBUYXhvbm9teU1hcHBlci5tYXBEb3dubG9hZENhdGVnb3J5KGNhdGVnb3J5KTsKICAgICAgICAgIH0pKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJmZXRjaERvd25sb2FkUHJvZHVjdHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoRG93bmxvYWRQcm9kdWN0cygpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB3aW5kb3cuYXhpb3MuZ2V0KCcvd3AtanNvbi93cC92Mi9kd25sZC1wcm9kdWN0P3Blcl9wYWdlPTEwMCcpLnRoZW4oZnVuY3Rpb24gKF9yZWY0KSB7CiAgICAgICAgICB2YXIgZGF0YSA9IF9yZWY0LmRhdGE7CiAgICAgICAgICByZXNvbHZlKGRhdGEubWFwKGZ1bmN0aW9uIChwcm9kdWN0KSB7CiAgICAgICAgICAgIHJldHVybiBUYXhvbm9teU1hcHBlci5tYXBEb3dubG9hZFByb2R1Y3QocHJvZHVjdCk7CiAgICAgICAgICB9KSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmV0Y2hEb3dubG9hZE1lZGlhdHlwZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoRG93bmxvYWRNZWRpYXR5cGVzKCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHdpbmRvdy5heGlvcy5nZXQoJy93cC1qc29uL3dwL3YyL2R3bmxkLW1lZGlhdHlwZT9wZXJfcGFnZT0xMDAnKS50aGVuKGZ1bmN0aW9uIChfcmVmNSkgewogICAgICAgICAgdmFyIGRhdGEgPSBfcmVmNS5kYXRhOwogICAgICAgICAgcmVzb2x2ZShkYXRhLm1hcChmdW5jdGlvbiAobWVkaWF0eXBlKSB7CiAgICAgICAgICAgIHJldHVybiBUYXhvbm9teU1hcHBlci5tYXBEb3dubG9hZE1lZGlhdHlwZShtZWRpYXR5cGUpOwogICAgICAgICAgfSkpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFRheG9ub215U2VydmljZTsKfSgpOwoKZXhwb3J0IHsgVGF4b25vbXlTZXJ2aWNlIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/app/src/services/api/TaxonomyService.js"],"names":["TaxonomyMapper","TaxonomyService","Promise","resolve","reject","window","axios","get","then","data","catch","error","map","category","mapTrainingCategory","mapDownloadCategory","product","mapDownloadProduct","mediatype","mapDownloadMediatype"],"mappings":";;;;;;AAAA;AACA,OAAOA,cAAP,MAA2B,kCAA3B;;IAEqBC,e;;;;;;;;;+BACD;AAChB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiB,2BAAjB,EACGC,IADH,CACQ;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,iBAAcN,OAAO,CAACM,IAAD,CAArB;AAAA,SADR,EAEGC,KAFH,CAES,UAAAC,KAAK;AAAA,iBAAIP,MAAM,CAACO,KAAD,CAAV;AAAA,SAFd;AAGD,OAJM,CAAP;AAKD;;;8CAEgC;AAC/B,aAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiB,+CAAjB,EACGC,IADH,CACQ;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBAAcN,OAAO,CAACM,IAAI,CAC7BG,GADyB,CACrB,UAAAC,QAAQ;AAAA,mBAAIb,cAAc,CAACc,mBAAf,CAAmCD,QAAnC,CAAJ;AAAA,WADa,CAAD,CAArB;AAAA,SADR,EAGGH,KAHH,CAGS,UAAAC,KAAK;AAAA,iBAAIP,MAAM,CAACO,KAAD,CAAV;AAAA,SAHd;AAID,OALM,CAAP;AAMD;;;8CAEgC;AAC/B,aAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiB,4CAAjB,EACGC,IADH,CACQ,iBAAc;AAAA,cAAXC,IAAW,SAAXA,IAAW;AAClBN,UAAAA,OAAO,CAACM,IAAI,CAACG,GAAL,CAAS,UAAAC,QAAQ;AAAA,mBAAIb,cAAc,CAACe,mBAAf,CAAmCF,QAAnC,CAAJ;AAAA,WAAjB,CAAD,CAAP;AACD,SAHH,EAIGH,KAJH,CAIS,UAAAC,KAAK;AAAA,iBAAIP,MAAM,CAACO,KAAD,CAAV;AAAA,SAJd;AAKD,OANM,CAAP;AAOD;;;4CAE8B;AAC7B,aAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiB,2CAAjB,EACGC,IADH,CACQ,iBAAc;AAAA,cAAXC,IAAW,SAAXA,IAAW;AAClBN,UAAAA,OAAO,CAACM,IAAI,CAACG,GAAL,CAAS,UAAAI,OAAO;AAAA,mBAAIhB,cAAc,CAACiB,kBAAf,CAAkCD,OAAlC,CAAJ;AAAA,WAAhB,CAAD,CAAP;AACD,SAHH,EAIGN,KAJH,CAIS,UAAAC,KAAK;AAAA,iBAAIP,MAAM,CAACO,KAAD,CAAV;AAAA,SAJd;AAKD,OANM,CAAP;AAOD;;;8CAEgC;AAC/B,aAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,QAAAA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiB,6CAAjB,EACGC,IADH,CACQ,iBAAc;AAAA,cAAXC,IAAW,SAAXA,IAAW;AAClBN,UAAAA,OAAO,CAACM,IAAI,CAACG,GAAL,CAAS,UAAAM,SAAS;AAAA,mBAAIlB,cAAc,CAACmB,oBAAf,CAAoCD,SAApC,CAAJ;AAAA,WAAlB,CAAD,CAAP;AACD,SAHH,EAIGR,KAJH,CAIS,UAAAC,KAAK;AAAA,iBAAIP,MAAM,CAACO,KAAD,CAAV;AAAA,SAJd;AAKD,OANM,CAAP;AAOD;;;;;;SA9CkBV,e","sourcesContent":["/* eslint-disable camelcase */\nimport TaxonomyMapper from '@/services/mapper/TaxonomyMapper';\n\nexport default class TaxonomyService {\n  static fetchAll() {\n    return new Promise((resolve, reject) => {\n      window.axios.get('/wp-json/wp/v2/taxonomies')\n        .then(({ data }) => resolve(data))\n        .catch(error => reject(error));\n    });\n  }\n\n  static fetchTrainingCategories() {\n    return new Promise((resolve, reject) => {\n      window.axios.get('/wp-json/wp/v2/training-category?per_page=100')\n        .then(({ data }) => resolve(data\n          .map(category => TaxonomyMapper.mapTrainingCategory(category))))\n        .catch(error => reject(error));\n    });\n  }\n\n  static fetchDownloadCategories() {\n    return new Promise((resolve, reject) => {\n      window.axios.get('/wp-json/wp/v2/dwnld-category?per_page=100')\n        .then(({ data }) => {\n          resolve(data.map(category => TaxonomyMapper.mapDownloadCategory(category)));\n        })\n        .catch(error => reject(error));\n    });\n  }\n\n  static fetchDownloadProducts() {\n    return new Promise((resolve, reject) => {\n      window.axios.get('/wp-json/wp/v2/dwnld-product?per_page=100')\n        .then(({ data }) => {\n          resolve(data.map(product => TaxonomyMapper.mapDownloadProduct(product)));\n        })\n        .catch(error => reject(error));\n    });\n  }\n\n  static fetchDownloadMediatypes() {\n    return new Promise((resolve, reject) => {\n      window.axios.get('/wp-json/wp/v2/dwnld-mediatype?per_page=100')\n        .then(({ data }) => {\n          resolve(data.map(mediatype => TaxonomyMapper.mapDownloadMediatype(mediatype)));\n        })\n        .catch(error => reject(error));\n    });\n  }\n}\n"]}]}