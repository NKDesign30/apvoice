{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/services/mapper/UserMapper.js","dependencies":[{"path":"/app/src/services/mapper/UserMapper.js","mtime":1686744097394},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBnZXQgZnJvbSAnbG9kYXNoL2dldCc7CmltcG9ydCB0cmFuc2Zvcm0gZnJvbSAnbG9kYXNoL3RyYW5zZm9ybSc7Cgp2YXIgVXNlck1hcHBlciA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFVzZXJNYXBwZXIoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVXNlck1hcHBlcik7CiAgfQoKICBfY3JlYXRlQ2xhc3MoVXNlck1hcHBlciwgbnVsbCwgW3sKICAgIGtleTogIm1hcEFjdGl2YXRpb25SZXN1bHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1hcEFjdGl2YXRpb25SZXN1bHQoZGF0YSkgewogICAgICByZXR1cm4gewogICAgICAgIGJsb2dfaWQ6IFN0cmluZyhnZXQoZGF0YSwgJ3Jlc3VsdC5ibG9nX2lkJywgJycpKSwKICAgICAgICBwYXNzd29yZDogZ2V0KGRhdGEsICdyZXN1bHQucGFzc3dvcmQnLCAnJyksCiAgICAgICAgdXNlcl9pZDogU3RyaW5nKGRhdGEsICdyZXN1bHQudXNlcl9pZCcsICcnKQogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogIm1hcEFjdGl2YXRpb25FcnJvclJlc3VsdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbWFwQWN0aXZhdGlvbkVycm9yUmVzdWx0KGRhdGEpIHsKICAgICAgcmV0dXJuIHRyYW5zZm9ybShnZXQoZGF0YSwgJ3Jlc3VsdC5lcnJvcnMnLCBbXSksIGZ1bmN0aW9uIChyZXN1bHQsIG1lc3NhZ2VzKSB7CiAgICAgICAgbWVzc2FnZXMuZm9yRWFjaChmdW5jdGlvbiAobWVzc2FnZSkgewogICAgICAgICAgcmV0dXJuIHJlc3VsdC5wdXNoKG1lc3NhZ2UpOwogICAgICAgIH0pOwogICAgICB9LCBbXSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibWFwQ29uZmlybU1haWxSZXN1bHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1hcENvbmZpcm1NYWlsUmVzdWx0KGRhdGEpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBibG9nX2lkOiBTdHJpbmcoZ2V0KGRhdGEsICdyZXN1bHQuYmxvZ19pZCcsICcnKSksCiAgICAgICAgcGFzc3dvcmQ6IGdldChkYXRhLCAncmVzdWx0LnBhc3N3b3JkJywgJycpLAogICAgICAgIHVzZXJfaWQ6IFN0cmluZyhkYXRhLCAncmVzdWx0LnVzZXJfaWQnLCAnJykKICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJtYXBDb25maXJtTWFpbEVycm9yUmVzdWx0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBtYXBDb25maXJtTWFpbEVycm9yUmVzdWx0KGRhdGEpIHsKICAgICAgcmV0dXJuIHRyYW5zZm9ybShnZXQoZGF0YSwgJ3Jlc3VsdC5lcnJvcnMnLCBbXSksIGZ1bmN0aW9uIChyZXN1bHQsIG1lc3NhZ2VzKSB7CiAgICAgICAgbWVzc2FnZXMuZm9yRWFjaChmdW5jdGlvbiAobWVzc2FnZSkgewogICAgICAgICAgcmV0dXJuIHJlc3VsdC5wdXNoKG1lc3NhZ2UpOwogICAgICAgIH0pOwogICAgICB9LCBbXSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibWFwVXNlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbWFwVXNlcihkYXRhKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgaWQ6IFN0cmluZyhnZXQoZGF0YSwgJ2lkJywgJycpKSwKICAgICAgICBuYW1lOiBnZXQoZGF0YSwgJ25hbWUnLCAnJyksCiAgICAgICAgZmlyc3ROYW1lOiBnZXQoZGF0YSwgJ21ldGEuZmlyc3RfbmFtZScsICcnKSwKICAgICAgICBsYXN0TmFtZTogZ2V0KGRhdGEsICdtZXRhLmxhc3RfbmFtZScsICcnKSwKICAgICAgICB1cmw6IGdldChkYXRhLCAndXJsJywgJycpLAogICAgICAgIGRlc2NyaXB0aW9uOiBnZXQoZGF0YSwgJ2Rlc2NyaXB0aW9uJywgJycpLAogICAgICAgIGxpbms6IGdldChkYXRhLCAnbGluaycsICcnKSwKICAgICAgICBzbHVnOiBnZXQoZGF0YSwgJ3NsdWcnLCAnJyksCiAgICAgICAgcm9sZXM6IGdldChkYXRhLCAncm9sZXMnLCBbXSksCiAgICAgICAgYXBvUG9pbnRzOiBnZXQoZGF0YSwgJ2Fwb1BvaW50cycsIDApIHx8IDAsCiAgICAgICAgZXhwZXJ0UG9pbnRzOiBnZXQoZGF0YSwgJ2V4cGVydFBvaW50cycsIDApIHx8IDAsCiAgICAgICAgbGV2ZWxEYXRhOiBnZXQoZGF0YSwgJ2xldmVsRGF0YScsIG51bGwpLAogICAgICAgIC8vIGxldmVsIGRhdGEgZmV0Y2hlZCBvbiBsb2dpbiwgdHJhaW5pbmcgY29tcGxldGlvbiBhbmQgZm9yIGRpc3BsYXkgb2YgTGV2ZWwgY29tcG9uZW50cwogICAgICAgIHByb2ZpbGVQaWN0dXJlOiBnZXQoZGF0YSwgJ21ldGEucHJvZmlsZV9waWN0dXJlJywgJycpLAogICAgICAgIHRpdGxlOiBnZXQoZGF0YSwgJ21ldGEudGl0bGUnLCAnJyksCiAgICAgICAgam9iOiBnZXQoZGF0YSwgJ21ldGEuam9iJywgJycpLAogICAgICAgIGZvcm1PZkFkZHJlc3M6IGdldChkYXRhLCAnbWV0YS5mb3JtX29mX2FkZHJlc3MnLCAnJyksCiAgICAgICAgd29ya2luZ1NpbmNlOiBnZXQoZGF0YSwgJ21ldGEud29ya2luZ19zaW5jZScsICcnKSwKICAgICAgICBwdW5Db2RlOiBnZXQoZGF0YSwgJ21ldGEnLCAnJyksCiAgICAgICAgYWdlOiBnZXQoZGF0YSwgJ21ldGEuYWdlJywgJycpLAogICAgICAgIHByaW9yaXRpZXM6IGdldChkYXRhLCAnbWV0YS5wcmlvcml0aWVzJywgW10pLAogICAgICAgIHRhc2tzOiBnZXQoZGF0YSwgJ21ldGEudGFza3MnLCBbXSksCiAgICAgICAgYXNzb2NpYXRlZFBoYXJtYWNpZXM6IGdldChkYXRhLCAnYXNzb2NpYXRlZF9waGFybWFjaWVzJywgW10pLAogICAgICAgIGV4cGVydE9ubHlQaGFybWFjaWVzOiBnZXQoZGF0YSwgJ21ldGEuZXhwZXJ0X29ubHlfcGhhcm1hY2llcycsIFtdKSA9PT0gJycgPyBbXSA6IEpTT04ucGFyc2UoZ2V0KGRhdGEsICdtZXRhLmV4cGVydF9vbmx5X3BoYXJtYWNpZXMnLCBbXSkpLAogICAgICAgIGxvZ2luQWN0aXZpdHk6IGdldChkYXRhLCAnbG9naW5fYWN0aXZpdHknLCAwKSwKICAgICAgICBuZXdzbGV0dGVyU3RhdGU6IGdldChkYXRhLCAnbmV3c2xldHRlcl9zdGF0ZScsIG51bGwpLAogICAgICAgIHN1cnZleVJlc3VsdHM6IGdldChkYXRhLCAnc3VydmV5X3Jlc3VsdHMnLCBbXSksCiAgICAgICAgdHJhaW5pbmdSZXN1bHRzOiBnZXQoZGF0YSwgJ3RyYWluaW5nX3Jlc3VsdHMnLCBbXSksCiAgICAgICAgaGFzVXBkYXRlZFBoYXJtYWN5QWRkcmVzczogZ2V0KGRhdGEsICdoYXNfdXBkYXRlZF9waGFybWFjeV9hZGRyZXNzJywgdHJ1ZSkKICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJtYXBQdW5Db2RlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBtYXBQdW5Db2RlKGRhdGEpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBwdW5Db2RlOiBTdHJpbmcoZ2V0KGRhdGEsICdwdW5Db2RlJywgJycpKQogICAgICB9OwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFVzZXJNYXBwZXI7Cn0oKTsKCmV4cG9ydCB7IFVzZXJNYXBwZXIgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/app/src/services/mapper/UserMapper.js"],"names":["get","transform","UserMapper","data","blog_id","String","password","user_id","result","messages","forEach","message","push","id","name","firstName","lastName","url","description","link","slug","roles","apoPoints","expertPoints","levelData","profilePicture","title","job","formOfAddress","workingSince","punCode","age","priorities","tasks","associatedPharmacies","expertOnlyPharmacies","JSON","parse","loginActivity","newsletterState","surveyResults","trainingResults","hasUpdatedPharmacyAddress"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\nimport transform from 'lodash/transform';\n\nexport default class UserMapper {\n  static mapActivationResult(data) {\n    return {\n      blog_id: String(get(data, 'result.blog_id', '')),\n      password: get(data, 'result.password', ''),\n      user_id: String(data, 'result.user_id', ''),\n    };\n  }\n\n  static mapActivationErrorResult(data) {\n    return transform(get(data, 'result.errors', []), (result, messages) => {\n      messages.forEach(message => result.push(message));\n    }, []);\n  }\n\n  static mapConfirmMailResult(data) {\n    return {\n      blog_id: String(get(data, 'result.blog_id', '')),\n      password: get(data, 'result.password', ''),\n      user_id: String(data, 'result.user_id', ''),\n    };\n  }\n\n  static mapConfirmMailErrorResult(data) {\n    return transform(get(data, 'result.errors', []), (result, messages) => {\n      messages.forEach(message => result.push(message));\n    }, []);\n  }\n\n  static mapUser(data) {\n    return {\n      id: String(get(data, 'id', '')),\n      name: get(data, 'name', ''),\n      firstName: get(data, 'meta.first_name', ''),\n      lastName: get(data, 'meta.last_name', ''),\n      url: get(data, 'url', ''),\n      description: get(data, 'description', ''),\n      link: get(data, 'link', ''),\n      slug: get(data, 'slug', ''),\n      roles: get(data, 'roles', []),\n      apoPoints: get(data, 'apoPoints', 0) || 0,\n      expertPoints: get(data, 'expertPoints', 0) || 0,\n      levelData: get(data, 'levelData', null), // level data fetched on login, training completion and for display of Level components\n      profilePicture: get(data, 'meta.profile_picture', ''),\n      title: get(data, 'meta.title', ''),\n      job: get(data, 'meta.job', ''),\n      formOfAddress: get(data, 'meta.form_of_address', ''),\n      workingSince: get(data, 'meta.working_since', ''),\n      punCode: get(data, 'meta', ''),\n      age: get(data, 'meta.age', ''),\n      priorities: get(data, 'meta.priorities', []),\n      tasks: get(data, 'meta.tasks', []),\n      associatedPharmacies: get(data, 'associated_pharmacies', []),\n      expertOnlyPharmacies: get(data, 'meta.expert_only_pharmacies', []) === '' ? [] : JSON.parse(get(data, 'meta.expert_only_pharmacies', [])),\n      loginActivity: get(data, 'login_activity', 0),\n      newsletterState: get(data, 'newsletter_state', null),\n      surveyResults: get(data, 'survey_results', []),\n      trainingResults: get(data, 'training_results', []),\n      hasUpdatedPharmacyAddress: get(data, 'has_updated_pharmacy_address', true),\n    };\n  }\n\n  static mapPunCode(data) {\n    return {\n      punCode: String(get(data, 'punCode', '')),\n    };\n  }\n}\n"]}]}