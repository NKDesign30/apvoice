{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/services/mapper/MenuMapper.js","dependencies":[{"path":"/app/src/services/mapper/MenuMapper.js","mtime":1683275992576},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IGdldCBmcm9tICdsb2Rhc2gvZ2V0JzsKaW1wb3J0IHsgc3RyaXBIb3N0bmFtZUZyb21VcmwgfSBmcm9tICdAL3NlcnZpY2VzL3V0aWxzJzsKCnZhciBNZW51TWFwcGVyID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gTWVudU1hcHBlcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNZW51TWFwcGVyKTsKICB9CgogIF9jcmVhdGVDbGFzcyhNZW51TWFwcGVyLCBudWxsLCBbewogICAga2V5OiAibWFwTWVudSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbWFwTWVudShkYXRhKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZGVzY3JpcHRpb246IGdldChkYXRhLCAnZGVzY3JpcHRpb24nLCAnJyksCiAgICAgICAgaWQ6IGdldChkYXRhLCAnaWQnKSwKICAgICAgICBpdGVtczogKGdldChkYXRhLCAnaXRlbXMnLCBbXSkgfHwgW10pLm1hcChmdW5jdGlvbiAoaXRlbURhdGEpIHsKICAgICAgICAgIHJldHVybiBNZW51TWFwcGVyLm1hcE1lbnVJdGVtKGl0ZW1EYXRhKTsKICAgICAgICB9KSwKICAgICAgICBuYW1lOiBnZXQoZGF0YSwgJ25hbWUnLCAnJyksCiAgICAgICAgcGFyZW50OiBnZXQoZGF0YSwgJ3BhcmVudCcsICcwJyksCiAgICAgICAgc2x1ZzogZ2V0KGRhdGEsICdzbHVnJywgJycpCiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAibWFwTWVudUl0ZW0iLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1hcE1lbnVJdGVtKGRhdGEpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBkZXNjcmlwdGlvbjogZ2V0KGRhdGEsICdkZXNjcmlwdGlvbicsICcnKSwKICAgICAgICBndWlkOiBnZXQoZGF0YSwgJ2d1aWQnLCAnJyksCiAgICAgICAgaWNvbjogTWVudU1hcHBlci5tYXBNZW51SXRlbUljb24oZGF0YSksCiAgICAgICAgaWQ6IGdldChkYXRhLCAnSUQnKSwKICAgICAgICBvYmplY3Q6IGdldChkYXRhLCAnb2JqZWN0JywgJycpLAogICAgICAgIG9iamVjdElkOiBnZXQoZGF0YSwgJ29iamVjdF9pZCcsICctMScpLAogICAgICAgIHBhcmVudDogZ2V0KGRhdGEsICdtZW51X2l0ZW1fcGFyZW50JywgJy0xJyksCiAgICAgICAgdGl0bGU6IGdldChkYXRhLCAndGl0bGUnLCAnJyksCiAgICAgICAgdXJsOiBnZXQoZGF0YSwgJ3RlbXBsYXRlJywgJycpID8gIi8iLmNvbmNhdChnZXQoZGF0YSwgJ3RlbXBsYXRlJywgJycpKSA6IE1lbnVNYXBwZXIubm9ybWFsaXplTGluayhkYXRhKSwKICAgICAgICB1cmxfcGF0aDogZ2V0KGRhdGEsICd1cmxfcGF0aCcpLAogICAgICAgIHRlbXBsYXRlOiBnZXQoZGF0YSwgJ3RlbXBsYXRlJywgJycpLAogICAgICAgIHNob3dJbk1vcmU6IGdldChkYXRhLCAnc2hvd19pbl9tb3JlJywgZmFsc2UpLAogICAgICAgIGlzUHVibGljOiBnZXQoZGF0YSwgJ3B1YmxpY19yZXNvdXJjZScsIGZhbHNlKQogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogIm1hcE1lbnVJdGVtSWNvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbWFwTWVudUl0ZW1JY29uKGRhdGEpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB1cmw6IGdldChkYXRhLCAnaWNvbi51cmwnLCAnJyksCiAgICAgICAgdGl0bGU6IGdldChkYXRhLCAnaWNvbi50aXRsZScsICcnKSwKICAgICAgICBhbHQ6IGdldChkYXRhLCAnaWNvbi5hbHQnLCAnJyksCiAgICAgICAgc291cmNlOiBhdG9iKGdldChkYXRhLCAnaWNvbl9zb3VyY2UnLCAnJykpCiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAibm9ybWFsaXplTGluayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbm9ybWFsaXplTGluayhkYXRhKSB7CiAgICAgIHZhciB0eXBlID0gZ2V0KGRhdGEsICdvYmplY3QnLCAncGFnZScpOwoKICAgICAgaWYgKHR5cGUgPT09ICdjdXN0b20nKSB7CiAgICAgICAgcmV0dXJuIGdldChkYXRhLCAndXJsJywgJycpOwogICAgICB9CgogICAgICByZXR1cm4gc3RyaXBIb3N0bmFtZUZyb21VcmwoZ2V0KGRhdGEsICd1cmwnLCAnJykpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE1lbnVNYXBwZXI7Cn0oKTsKCmV4cG9ydCB7IE1lbnVNYXBwZXIgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/app/src/services/mapper/MenuMapper.js"],"names":["get","stripHostnameFromUrl","MenuMapper","data","description","id","items","map","itemData","mapMenuItem","name","parent","slug","guid","icon","mapMenuItemIcon","object","objectId","title","url","normalizeLink","url_path","template","showInMore","isPublic","alt","source","atob","type"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,SAASC,oBAAT,QAAqC,kBAArC;;IAEqBC,U;;;;;;;;;4BACJC,I,EAAM;AACnB,aAAO;AACLC,QAAAA,WAAW,EAAEJ,GAAG,CAACG,IAAD,EAAO,aAAP,EAAsB,EAAtB,CADX;AAELE,QAAAA,EAAE,EAAEL,GAAG,CAACG,IAAD,EAAO,IAAP,CAFF;AAGLG,QAAAA,KAAK,EAAE,CAACN,GAAG,CAACG,IAAD,EAAO,OAAP,EAAgB,EAAhB,CAAH,IAA0B,EAA3B,EAA+BI,GAA/B,CAAmC,UAAAC,QAAQ;AAAA,iBAAIN,UAAU,CAACO,WAAX,CAAuBD,QAAvB,CAAJ;AAAA,SAA3C,CAHF;AAILE,QAAAA,IAAI,EAAEV,GAAG,CAACG,IAAD,EAAO,MAAP,EAAe,EAAf,CAJJ;AAKLQ,QAAAA,MAAM,EAAEX,GAAG,CAACG,IAAD,EAAO,QAAP,EAAiB,GAAjB,CALN;AAMLS,QAAAA,IAAI,EAAEZ,GAAG,CAACG,IAAD,EAAO,MAAP,EAAe,EAAf;AANJ,OAAP;AAQD;;;gCAEkBA,I,EAAM;AACvB,aAAO;AACLC,QAAAA,WAAW,EAAEJ,GAAG,CAACG,IAAD,EAAO,aAAP,EAAsB,EAAtB,CADX;AAELU,QAAAA,IAAI,EAAEb,GAAG,CAACG,IAAD,EAAO,MAAP,EAAe,EAAf,CAFJ;AAGLW,QAAAA,IAAI,EAAEZ,UAAU,CAACa,eAAX,CAA2BZ,IAA3B,CAHD;AAILE,QAAAA,EAAE,EAAEL,GAAG,CAACG,IAAD,EAAO,IAAP,CAJF;AAKLa,QAAAA,MAAM,EAAEhB,GAAG,CAACG,IAAD,EAAO,QAAP,EAAiB,EAAjB,CALN;AAMLc,QAAAA,QAAQ,EAAEjB,GAAG,CAACG,IAAD,EAAO,WAAP,EAAoB,IAApB,CANR;AAOLQ,QAAAA,MAAM,EAAEX,GAAG,CAACG,IAAD,EAAO,kBAAP,EAA2B,IAA3B,CAPN;AAQLe,QAAAA,KAAK,EAAElB,GAAG,CAACG,IAAD,EAAO,OAAP,EAAgB,EAAhB,CARL;AASLgB,QAAAA,GAAG,EAAEnB,GAAG,CAACG,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAH,cAAgCH,GAAG,CAACG,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAnC,IAA8DD,UAAU,CAACkB,aAAX,CAAyBjB,IAAzB,CAT9D;AAULkB,QAAAA,QAAQ,EAAErB,GAAG,CAACG,IAAD,EAAO,UAAP,CAVR;AAWLmB,QAAAA,QAAQ,EAAEtB,GAAG,CAACG,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAXR;AAYLoB,QAAAA,UAAU,EAAEvB,GAAG,CAACG,IAAD,EAAO,cAAP,EAAuB,KAAvB,CAZV;AAaLqB,QAAAA,QAAQ,EAAExB,GAAG,CAACG,IAAD,EAAO,iBAAP,EAA0B,KAA1B;AAbR,OAAP;AAeD;;;oCAEsBA,I,EAAM;AAC3B,aAAO;AACLgB,QAAAA,GAAG,EAAEnB,GAAG,CAACG,IAAD,EAAO,UAAP,EAAmB,EAAnB,CADH;AAELe,QAAAA,KAAK,EAAElB,GAAG,CAACG,IAAD,EAAO,YAAP,EAAqB,EAArB,CAFL;AAGLsB,QAAAA,GAAG,EAAEzB,GAAG,CAACG,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAHH;AAILuB,QAAAA,MAAM,EAAEC,IAAI,CAAC3B,GAAG,CAACG,IAAD,EAAO,aAAP,EAAsB,EAAtB,CAAJ;AAJP,OAAP;AAMD;;;kCAEoBA,I,EAAM;AACzB,UAAMyB,IAAI,GAAG5B,GAAG,CAACG,IAAD,EAAO,QAAP,EAAiB,MAAjB,CAAhB;;AAEA,UAAIyB,IAAI,KAAK,QAAb,EAAuB;AACrB,eAAO5B,GAAG,CAACG,IAAD,EAAO,KAAP,EAAc,EAAd,CAAV;AACD;;AAED,aAAOF,oBAAoB,CAACD,GAAG,CAACG,IAAD,EAAO,KAAP,EAAc,EAAd,CAAJ,CAA3B;AACD;;;;;;SA/CkBD,U","sourcesContent":["import get from 'lodash/get';\nimport { stripHostnameFromUrl } from '@/services/utils';\n\nexport default class MenuMapper {\n  static mapMenu(data) {\n    return {\n      description: get(data, 'description', ''),\n      id: get(data, 'id'),\n      items: (get(data, 'items', []) || []).map(itemData => MenuMapper.mapMenuItem(itemData)),\n      name: get(data, 'name', ''),\n      parent: get(data, 'parent', '0'),\n      slug: get(data, 'slug', ''),\n    };\n  }\n\n  static mapMenuItem(data) {\n    return {\n      description: get(data, 'description', ''),\n      guid: get(data, 'guid', ''),\n      icon: MenuMapper.mapMenuItemIcon(data),\n      id: get(data, 'ID'),\n      object: get(data, 'object', ''),\n      objectId: get(data, 'object_id', '-1'),\n      parent: get(data, 'menu_item_parent', '-1'),\n      title: get(data, 'title', ''),\n      url: get(data, 'template', '') ? `/${get(data, 'template', '')}` : MenuMapper.normalizeLink(data),\n      url_path: get(data, 'url_path'),\n      template: get(data, 'template', ''),\n      showInMore: get(data, 'show_in_more', false),\n      isPublic: get(data, 'public_resource', false),\n    };\n  }\n\n  static mapMenuItemIcon(data) {\n    return {\n      url: get(data, 'icon.url', ''),\n      title: get(data, 'icon.title', ''),\n      alt: get(data, 'icon.alt', ''),\n      source: atob(get(data, 'icon_source', '')),\n    };\n  }\n\n  static normalizeLink(data) {\n    const type = get(data, 'object', 'page');\n\n    if (type === 'custom') {\n      return get(data, 'url', '');\n    }\n\n    return stripHostnameFromUrl(get(data, 'url', ''));\n  }\n}\n"]}]}